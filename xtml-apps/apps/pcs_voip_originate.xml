<?xml version="1.0"?>
<xtml version="1.0" xmlns="urn:www.pactolus.com:xtml" >
  <version sce-version="6015" prev-sce-version="6015" last-mod-time="Tuesday, March 30, 2010 13:54:44"/>
  <events >
    <event name="BbtelClick2Dial" display="Click2Dial" >
      <parameter name="strSrcIpAddress" type="string"/>
      <parameter name="nPort" type="i4"/>
      <parameter name="strTransactionId" type="string"/>
      <parameter name="strRealm" type="string"/>
      <parameter name="strAuthenticationName" type="string"/>
      <parameter name="strCallingNumber" type="string"/>
      <parameter name="strCalledNumber" type="string"/>
    </event>
    <event name="BbtelClick2DialQuery" display="Click2DialQuery" >
      <parameter name="strSrcAddress" type="string"/>
      <parameter name="nPort" type="i4"/>
      <parameter name="strTransactionId" type="string"/>
    </event>
  </events>
  <global-handlers >
    <handler event="Pactolus.EveSipRefer.1" function="OnRefer" public="0" always-on="0"/>
    <handler event="Pactolus.EveSipInvite.1" function="OnInvite" public="1" always-on="0"/>
    <handler event="Pactolus.EveSipBye.1" function="OnBye" public="0" always-on="0"/>
    <handler event="Pactolus.EveSipCancel.1" function="OnCancel" public="0" always-on="0"/>
    <handler event="Standard.OnServiceLoad.1" function="OnServiceLoad" public="0" always-on="0"/>
    <handler event="Standard.OnSessionEnd.1" function="OnSessionEnd" public="0" always-on="0"/>
    <handler event="Standard.OnTimer.1" function="OnTimer" public="0" always-on="0"/>
    <handler event="Pactolus.EveSipInfo.1" function="OnInfo" public="0" always-on="0"/>
    <handler event="Pactolus.EveSipOptions.1" function="OnOptions" public="1" always-on="0"/>
    <handler event="Pactolus.EveSipAck.1" function="OnAck" public="0" always-on="0"/>
    <handler event="Pactolus.EveSipResponse.1" function="OnResponse" public="0" always-on="0"/>
    <handler event="BbtelClick2Dial" function="OnClick2Dial" public="1" always-on="0"/>
    <handler event="BbtelClick2DialQuery" function="OnClick2DialQuery" public="0" always-on="0"/>
  </global-handlers>
  <global-vars >
    <var name="g_STATE" type="i2" >0</var>
    <var name="g_strSessionId" type="string" ></var>
    <var name="g_strAni" type="string" ></var>
    <var name="g_oCallLegs" type="object" ></var>
    <var name="g_iTimeout" type="i4" >10</var>
    <var name="g_strMyVia" type="string" ></var>
    <var name="g_oGSXList" type="object" ></var>
    <var name="g_oProxyList" type="object" ></var>
    <var name="g_strRoute" type="string" ></var>
    <var name="g_bSpiralTransfer" type="boolean" >0</var>
    <var name="g_oSpiralCallLegs" type="object" ></var>
    <var name="g_oMS" type="object" ></var>
    <var name="g_lRetryInviteTimer" type="i8" >0</var>
    <var name="g_oAccessLine" type="object" ></var>
    <var name="g_oVoipService" type="object" ></var>
    <var name="g_oAPI" type="object" ></var>
    <var name="g_oPSAPList" type="object" ></var>
    <var name="g_bReferrerHungUp" type="boolean" >0</var>
    <var name="g_oRate" type="object" ></var>
    <var name="g_oSub" type="object" ></var>
    <var name="g_oTimer" type="object" ></var>
    <var name="g_strClick2DialStatus" type="string" ></var>
    <var name="g_nClick2DialCode" type="i4" >0</var>
    <var name="g_bLowBalance" type="boolean" >0</var>
    <var name="g_bWriteBLegCDR" type="boolean" >0</var>
    <var name="g_oSimRingCallLegs" type="object" ></var>
    <var name="g_oVoipService_B" type="object" ></var>
    <var name="g_oAccessLine_B" type="object" ></var>
    <var name="g_oAPI_B" type="object" ></var>
    <var name="g_oSub_B" type="object" ></var>
    <var name="g_bTryReceptionist" type="boolean" >0</var>
    <var name="g_bAttendedTransfer" type="boolean" >0</var>
    <var name="g_oEmergencyRoutes" type="object" ></var>
    <var name="g_bDoNotModifyDest" type="boolean" >0</var>
    <var name="g_bDialogReplaced" type="boolean" >0</var>
    <var name="oRate_orig" type="object" ></var>
    <var name="oSub_orig" type="object" ></var>
    <var name="g_bPlayingMOH" type="boolean" >0</var>
    <var name="g_nInterruptTimer" type="i4" >0</var>
    <var name="g_nInterruptPlays" type="i4" >0</var>
    <var name="g_oRate_B" type="object" ></var>
    <var name="g_strReplacedCallId" type="string" ></var>
  </global-vars>
  <shared-vars >
    <var name="s_strLocalUri" type="string" ></var>
    <var name="s_STATE_AWAITING_CALL" type="i2" >0</var>
    <var name="s_STATE_CONNECTING_TO_CALLED" type="i2" >1</var>
    <var name="s_STATE_CONNECTED_TO_CALLED" type="i2" >2</var>
    <var name="s_nLongTimeout" type="i4" >60</var>
    <var name="s_nShortTimeout" type="i4" >5</var>
    <var name="s_strOutboundTo" type="string" ></var>
    <var name="s_STATE_TRANSFERRING_CALL" type="i2" >4</var>
    <var name="s_STATE_TEARING_DOWN_CALL" type="i2" >5</var>
    <var name="s_strPrimarySoftswitch" type="string" ></var>
    <var name="s_strBackupSoftswitch" type="string" ></var>
    <var name="s_strNiuAddress" type="string" ></var>
    <var name="s_CT_NORMAL" type="i2" >1</var>
    <var name="s_CT_VMAIL_RETRIEVAL" type="i2" >2</var>
    <var name="s_CT_VMAIL_DEPOSIT" type="i2" >3</var>
    <var name="s_CT_TRANSFER" type="i2" >4</var>
    <var name="s_CT_FORWARD" type="i2" >5</var>
    <var name="s_CT_911" type="i2" >6</var>
    <var name="s_CT_CALL_RETURN" type="i2" >7</var>
    <var name="s_nMSG_NUM_BAD_ACTIVATION_PIN" type="i4" >6000</var>
    <var name="s_nMSG_NUM_MAX_SP_STREAMS" type="i4" >6002</var>
    <var name="s_nMSG_NUM_MAX_STREAMS" type="i4" >6001</var>
    <var name="s_nMSG_NUM_ACCESS_LINE_DISABLED" type="i4" >6003</var>
    <var name="s_nMSG_NUM_JVM_ERROR" type="i4" >1000</var>
    <var name="s_nMSG_NUM_SP_DISABLED" type="i4" >1004</var>
    <var name="s_nMSG_NUM_SUB_DISABLED" type="i4" >1005</var>
    <var name="s_nMSG_NUM_PIN_LOCKED" type="i4" >1011</var>
    <var name="s_strDefaultRealm" type="string" ></var>
    <var name="s_strForcedRealm" type="string" ></var>
    <var name="s_nPacketizationPeriod" type="i4" >20</var>
    <var name="s_strMsType" type="string" >PCS</var>
    <var name="s_TR_CALLED_PARTY_HANGUP" type="i2" >1</var>
    <var name="s_TR_CALLING_PARTY_HANGUP" type="i2" >2</var>
    <var name="s_TR_NO_MONEY" type="i2" >3</var>
    <var name="s_TR_SIP_NON_SUCCESS" type="i2" >4</var>
    <var name="s_TR_REORIGINATION" type="i2" >5</var>
    <var name="s_TR_SYSTEM_ERROR" type="i2" >6</var>
    <var name="s_TR_BUSY" type="i2" >7</var>
    <var name="s_TR_NO_ANSWER" type="i2" >8</var>
    <var name="s_TR_REINVITE_FAILED" type="i2" >9</var>
    <var name="s_TR_OTHER" type="i2" >10</var>
    <var name="s_RT_ON_NET" type="i2" >1</var>
    <var name="s_RT_OFF_NET" type="i2" >2</var>
    <var name="s_nRING_NO_ANSWER_TIME" type="i4" >120</var>
    <var name="s_strBackupPSX" type="string" ></var>
    <var name="s_strCodec" type="string" ></var>
    <var name="s_strPrimaryPSX" type="string" ></var>
    <var name="s_strSessionTimerFlag" type="string" ></var>
    <var name="s_strLocalHost" type="string" ></var>
    <var name="s_nDomMinConnectTime" type="i4" >0</var>
    <var name="s_nIntlMinConnectTime" type="i4" >0</var>
    <var name="s_strPrependToOutdial" type="string" ></var>
    <var name="s_CB_NO_CALLS_IN_24" type="i2" >-7</var>
    <var name="s_strECRC" type="string" ></var>
    <var name="s_strPrimaryPSAP" type="string" ></var>
    <var name="s_strBackupPSAP" type="string" ></var>
    <var name="s_strCarrierName" type="string" ></var>
    <var name="s_nCaleaDelay" type="i4" >0</var>
    <var name="s_CT_SCHED_REMIND_ME" type="i2" >9</var>
    <var name="s_CT_RAPID_CALL_RETURN" type="i2" >8</var>
    <var name="s_CT_FIRST_USE_ACTIVATION" type="i2" >10</var>
    <var name="s_CT_CONFERENCE" type="i2" >11</var>
    <var name="s_CT_PREPAID_IVR" type="i2" >12</var>
    <var name="s_BT_PREPAID" type="i2" >1</var>
    <var name="s_BT_POSTPAID" type="i2" >2</var>
    <var name="s_RET_SUCCESS" type="i2" >0</var>
    <var name="s_RET_FAIL" type="i2" >-1</var>
    <var name="s_RET_CALLER_HUNGUP" type="i2" >-2</var>
    <var name="s_LEG_STATE_NONE" type="i2" >0</var>
    <var name="s_LEG_STATE_DIALING" type="i2" >1</var>
    <var name="s_LEG_STATE_CONNECTED" type="i2" >2</var>
    <var name="s_LOW_BALANCE_CLICK2DIAL" type="i2" >-13</var>
    <var name="s_strPublicIpAddress" type="string" ></var>
    <var name="s_CT_INTERNAL_CALL" type="i2" >17</var>
    <var name="s_CT_IVR_MENU" type="i2" >18</var>
    <var name="s_CT_IVR_ADMIN" type="i2" >19</var>
    <var name="s_CT_IVR_TRANSFER" type="i2" >20</var>
    <var name="s_bUseSonusRouting" type="boolean" >0</var>
    <var name="s_bRouteOnNetViaSoftswitch" type="boolean" >0</var>
    <var name="s_bRelayIntraSiteMedia" type="boolean" >0</var>
    <var name="s_CT_HUNT_GROUP" type="i2" >21</var>
    <var name="s_E911_ROUTE_FORWARD" type="i2" >2</var>
    <var name="s_E911_ROUTE_REDIRECT" type="i2" >1</var>
    <var name="s_strLocalEmergencyNumber" type="string" ></var>
    <var name="s_strEmergencyForwardingNbr3" type="string" ></var>
    <var name="s_strEmergencyForwardingNbr2" type="string" ></var>
    <var name="s_strEmergencyForwardingNbr1" type="string" ></var>
    <var name="s_nEmergencyRouteType" type="i4" >0</var>
    <var name="s_E911_ROUTE_UNSUPPORTED" type="i2" >0</var>
  </shared-vars>
  <functions >
    <function name="OnInvite" start="2" event="OnInvite" returns="void" >
      <parameters >
        <parameter name="strAccept" type="string" pass="byref"/>
        <parameter name="strAcceptEncoding" type="string" pass="byref"/>
        <parameter name="strAcceptLanguage" type="string" pass="byref"/>
        <parameter name="strAlertInfo" type="string" pass="byref"/>
        <parameter name="strAllow" type="string" pass="byref"/>
        <parameter name="strAllowEvents" type="string" pass="byref"/>
        <parameter name="strAnonymity" type="string" pass="byref"/>
        <parameter name="strAuthorization" type="string" pass="byref"/>
        <parameter name="strCallId" type="string" pass="byref"/>
        <parameter name="strCallInfo" type="string" pass="byref"/>
        <parameter name="strContact" type="string" pass="byref"/>
        <parameter name="strContent" type="string" pass="byref"/>
        <parameter name="strContentDisposition" type="string" pass="byref"/>
        <parameter name="strContentEncoding" type="string" pass="byref"/>
        <parameter name="strContentLanguage" type="string" pass="byref"/>
        <parameter name="strContentType" type="string" pass="byref"/>
        <parameter name="strCSeq" type="string" pass="byref"/>
        <parameter name="strDate" type="string" pass="byref"/>
        <parameter name="strEncryption" type="string" pass="byref"/>
        <parameter name="strErrorInfo" type="string" pass="byref"/>
        <parameter name="strExpires" type="string" pass="byref"/>
        <parameter name="strFrom" type="string" pass="byref"/>
        <parameter name="strInReplyTo" type="string" pass="byref"/>
        <parameter name="strMaxForwards" type="string" pass="byref"/>
        <parameter name="strMIMEVersion" type="string" pass="byref"/>
        <parameter name="strMinSE" type="string" pass="byref"/>
        <parameter name="strOrganization" type="string" pass="byref"/>
        <parameter name="strPriority" type="string" pass="byref"/>
        <parameter name="strProxyAuthorization" type="string" pass="byref"/>
        <parameter name="strProxyRequire" type="string" pass="byref"/>
        <parameter name="strRecordRoute" type="string" pass="byref"/>
        <parameter name="strReferredBy" type="string" pass="byref"/>
        <parameter name="strRemotePartyID" type="string" pass="byref"/>
        <parameter name="strReplaces" type="string" pass="byref"/>
        <parameter name="strRequestURI" type="string" pass="byref"/>
        <parameter name="strRequire" type="string" pass="byref"/>
        <parameter name="strResponseKey" type="string" pass="byref"/>
        <parameter name="strRoute" type="string" pass="byref"/>
        <parameter name="strSessionExpires" type="string" pass="byref"/>
        <parameter name="strSubject" type="string" pass="byref"/>
        <parameter name="strSupported" type="string" pass="byref"/>
        <parameter name="strTimestamp" type="string" pass="byref"/>
        <parameter name="strTo" type="string" pass="byref"/>
        <parameter name="strUserAgent" type="string" pass="byref"/>
        <parameter name="strVia" type="string" pass="byref"/>
      </parameters>
      <local-vars >
        <var name="oSipMsg" type="object" ></var>
        <var name="strOrigHost" type="string" ></var>
        <var name="nReturnValue" type="i4" >0</var>
        <var name="f_strEvent" type="string" ></var>
        <var name="bFalse" type="boolean" >0</var>
      </local-vars>
      <actions >
        <action id="2" plug-in="Pactolus.Branch.1" ><?xtml-editor x=11 y=53 ?>
          <results >
            <result name="Default" link="7" stubbed="0"/>
            <result name="New Call" link="12" stubbed="0" >g_STATE == s_STATE_AWAITING_CALL</result>
          </results>
        </action>
        <action id="3" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=781 y=382 ?>
          <!--OnNewInvite-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;OnNewInvite&quot;" return="" external-function="0" library="" >
            <parameter >g_oCallLegs</parameter>
          </function>
          <results >
            <result name="Default" link="18" stubbed="0"/>
          </results>
        </action>
        <action id="4" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=1058 y=394 ?>
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
        </action>
        <action id="7" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=417 y=66 ?>
          <!--OnReInvite-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;ReInvite&quot;" return="" external-function="0" library="" >
            <parameter >oSipMsg</parameter>
          </function>
          <results >
            <result name="Default" link="8" stubbed="0"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.oSipMsg.strFrom = Session.strFrom ;



Session.oSipMsg.strTo = Session.strTo ;



Session.oSipMsg.strRequestUri = Session.strRequestURI ;



Session.oSipMsg.strCallId = Session.strCallId ;



Session.oSipMsg.strCSeq = Session.strCSeq ;



Session.oSipMsg.strRemoteCSeq = Session.strCSeq ;



Session.oSipMsg.strContent = Session.strContent ;



Session.oSipMsg.strContentDisposition = Session.strContentDisposition ;



Session.oSipMsg.strContentType = Session.strContentType ;



Session.oSipMsg.strVia = Session.strVia ;



Session.oSipMsg.strRecordRoute = Session.strRecordRoute ;



Session.oSipMsg.strRoute = Session.strRoute ;



Session.oSipMsg.strSubject = Session.strSubject ;



Session.oSipMsg.strContact = Session.strContact ;



Session.oSipMsg.strDate = Session.strDate ;



Session.oSipMsg.strExpires = Session.strExpires ;



Session.oSipMsg.strAccept = Session.strAccept ;



Session.oSipMsg.strAcceptEncoding = Session.strAcceptEncoding ;



Session.oSipMsg.strAcceptLanguage = Session.strAcceptLanguage ;



Session.oSipMsg.strAuthorization = Session.strAuthorization ;



Session.oSipMsg.strEncryption = Session.strEncryption ;



Session.oSipMsg.strProxyAuthorization = Session.strProxyAuthorization ;



Session.oSipMsg.strProxyRequire = Session.strProxyRequire ;



Session.oSipMsg.strRequire = Session.strRequire ;



Session.oSipMsg.strResponseKey = Session.strResponseKey ;



Session.oSipMsg.strSessionExpires = Session.strSessionExpires ;



Session.oSipMsg.strSupported = Session.strSupported ;



Session.oSipMsg.strTimestamp = Session.strTimestamp ;



Session.oSipMsg.strSubject = Session.strSubject ;







/* recently added SIP headers */



Session.oSipMsg.strAnonymity = Session.strAnonymity ;



Session.oSipMsg.strMinSE = Session.strMinSE ;



Session.oSipMsg.strRemotePartyID = Session.strRemotePartyID ;



Session.oSipMsg.strUserAgent = Session.strUserAgent ;



Session.oSipMsg.strMaxForwards = Session.strMaxForwards ;



Session.oSipMsg.strReplaces = Session.strReplaces;



]]></script>
          </scripts>
        </action>
        <action id="8" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=675 y=110 ?>
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
        </action>
        <action id="9" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=272 y=276 ?>
          <!--psAuthOriginate-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;psAuthOriginate&quot;" return="nReturnValue" external-function="0" library="" >
            <parameter >g_oCallLegs[0]</parameter>
            <parameter >bFalse</parameter>
          </function>
          <results >
            <result name="Default" link="10" stubbed="0"/>
            <result name="activation pending" link="11" stubbed="0" >nReturnValue == 0



AND g_oAccessLine.strActivationPendingFlag match "T"



AND g_oAPI.strCallType != s_CT_911</result>
            <result name="authentication success" link="15" stubbed="0" >nReturnValue == 0



AND g_oAPI.strCallType != s_CT_CALL_RETURN</result>
            <result name="wait for credentials" link="4" stubbed="1" >nReturnValue == -1</result>
            <result name="lastnum callback" link="13" stubbed="0" >g_oAPI.strCallType == s_CT_CALL_RETURN</result>
          </results>
        </action>
        <action id="10" plug-in="Standard.EndSession.1" ><?xtml-editor x=530 y=188 ?></action>
        <action id="11" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=569 y=257 ?>
          <!--ActivateSubscriber-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;ActivateSubscriber&quot;" return="" external-function="0" library=""/>
          <results >
            <result name="Default" link="10" stubbed="1"/>
          </results>
        </action>
        <action id="12" plug-in="Pactolus.Branch.1" ><?xtml-editor x=74 y=212 ?>
          <!--Save SIP call info for A leg-->
          <results >
            <result name="Default" link="9" stubbed="0"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[/* save the sip call information */



InitVars() ;



Session.g_oCallLegs[0].nState = Session.s_LEG_STATE_DIALING ;







Session.g_oCallLegs[0].bReverseFromTo = true; 







Session.g_oCallLegs[0].strFrom = Session.strFrom ;



Session.g_oCallLegs[0].strRequestUri = Session.strRequestURI ;



Session.g_oCallLegs[0].strCallId = Session.strCallId ;



Session.g_oCallLegs[0].strCSeq = Session.strCSeq ;



Session.g_oCallLegs[0].strRemoteCSeq = Session.strCSeq ;



Session.g_oCallLegs[0].strRemoteSdp = Session.strContent ;



Session.g_oCallLegs[0].strContentDisposition = Session.strContentDisposition ;



Session.g_oCallLegs[0].strContentType = Session.strContentType ;



Session.g_oCallLegs[0].strVia = Session.strVia ;



Session.g_oCallLegs[0].strRecordRoute = Session.strRecordRoute ;



Session.g_oCallLegs[0].strRoute = Session.strRoute ;



Session.g_oCallLegs[0].strSubject = Session.strSubject ;



Session.g_oCallLegs[0].strContact = Session.s_strLocalUri ;



Session.g_oCallLegs[0].strDate = Session.strDate ;



Session.g_oCallLegs[0].strExpires = Session.strExpires ;



Session.g_oCallLegs[0].strAccept = Session.strAccept ;



Session.g_oCallLegs[0].strAcceptEncoding = Session.strAcceptEncoding ;



Session.g_oCallLegs[0].strAcceptLanguage = Session.strAcceptLanguage ;



Session.g_oCallLegs[0].strAuthorization = Session.strAuthorization ;



Session.g_oCallLegs[0].strEncryption = Session.strEncryption ;



Session.g_oCallLegs[0].strProxyAuthorization = Session.strProxyAuthorization ;



Session.g_oCallLegs[0].strProxyRequire = Session.strProxyRequire ;



Session.g_oCallLegs[0].strRequire = Session.strRequire ;



Session.g_oCallLegs[0].strResponseKey = Session.strResponseKey ;



Session.g_oCallLegs[0].strSessionExpires = Session.strSessionExpires ;



Session.g_oCallLegs[0].strSupported = Session.strSupported ;



Session.g_oCallLegs[0].strTimestamp = Session.strTimestamp ;



Session.g_oCallLegs[0].strMaxForwards = Session.strMaxForwards ;



Session.g_oCallLegs[0].strTo = Session.g_oCallLegs[0].strOriginalTo = Session.strTo ;







/* recently added SIP headers */



Session.g_oCallLegs[0].strAnonymity = Session.strAnonymity ;



Session.g_oCallLegs[0].strMinSE = Session.strMinSE ;



Session.g_oCallLegs[0].strRemotePartyID = Session.strRemotePartyID ;



Session.g_oCallLegs[0].strUserAgent = Session.strUserAgent ;



Session.g_oCallLegs[0].strMaxForwards = Session.strMaxForwards ;







var from = new SipFrom( Session.strFrom.toString() ) ;



var uri = new SipRequestUri( Session.strRequestURI.toString() ) ;



Session.g_oAPI.strAniReceived = from.url.phoneNumber ;



Session.g_oAPI.strDestReceived = uri.url.phoneNumber ;







/* needed in authOriginate to save data for possible later attended transfer */



Session.g_oAPI.strSipCallId = Session.strCallId ;



Session.g_oAPI.strSipFromTag = from.tag ;







js_calculate_uri_and_route( true, "SIP/2.0", 



	Session.strFrom.toString(), 



	Session.strContact.toString(), 



	Session.strRecordRoute.toString(), 



	Session.g_oCallLegs[0].strRemoteUri, 



	Session.g_oCallLegs[0].strRoute ) ;



	



/* lib functions require this */



Session.g_oCallLegs[0].strContent = Session.g_oCallLegs[0].strRemoteSdp; 



Session.g_oCallLegs[0].strRequestUri = Session.g_oCallLegs[0].strRemoteUri ;











Session.g_oCallLegs[0].bUac = false ;







Session.g_oCallLegs[0].strOrigFlag = "T" ;



Session.g_oCallLegs[0].strOrigRouteType = Session.s_RT_ON_NET ;



Session.g_oCallLegs[0].strOrigTrunkGroup = "Broadband Access" ;



if( null != from.url.oli ) {



	Session.g_oCallLegs[0].strInfoDigits = from.url.oli ;



}







Session.g_oCallLegs[0].strCallingNumber = from.url.phoneNumber ;



Session.g_oCallLegs[0].strCalledNumber = uri.url.phoneNumber ;



Session.g_oCallLegs[0].strSvcProviderCallerId = from.url.phoneNumber ;



Session.g_oCallLegs[0].strSubscriberCallerId = from.url.phoneNumber ;











var contact = new SipUrl( Session.strContact.toString() ) ;



Session.g_oCallLegs[0].strRemoteSignalingAddress = contact.host ;



if( null != contact.port ) {



	Session.g_oCallLegs[0].nRemoteSignalingPort = contact.port ;



}







/* update the application state */



Session.g_STATE = Session.s_STATE_CONNECTING_TO_CALLED ;























]]></script>
          </scripts>
        </action>
        <action id="13" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=277 y=596 ?>
          <!--*69 was dialed. Last Number Callback-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;LastNumbCallback&quot;" return="" external-function="0" library="" >
            <parameter >g_oMS</parameter>
            <parameter >g_oCallLegs[0]</parameter>
            <parameter >nReturnValue</parameter>
          </function>
          <results >
            <result name="Default" link="10" stubbed="1"/>
          </results>
        </action>
        <action id="14" plug-in="Pactolus.SipNotify.1" ><?xtml-editor x=788 y=502 ?>
          <!--wiretap-->
          <sip-notify xmlns="urn:www.pactolus.com:xtml:sip" add-record-route="0" add-via="1" increment-cseq-first="1" increment-cseq-last="0" >
            <call-id >strCallId</call-id>
            <cseq >strCSeq</cseq>
            <event >f_strEvent</event>
            <from >strTo</from>
            <request-uri >strContact</request-uri>
            <to >strFrom</to>
            <subscription-state >"active"</subscription-state>
          </sip-notify>
          <results >
            <result name="Default" link="16" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.f_strEvent = "calea;";







/* wiretap destination */



Session.f_strEvent += "wd=\"" ;



Session.f_strEvent += Session.g_oAccessLine.strWiretapDest ;



Session.f_strEvent += "\";";







/* origination number */



Session.f_strEvent += "on=\"" ;



Session.f_strEvent += Session.g_oAPI.strAniReceived ;



Session.f_strEvent += "\";";







/* termination number */



Session.f_strEvent += "tn=\"" ;



Session.f_strEvent += Session.g_oAPI.strDestReceived ;



Session.f_strEvent += "\";";







/* serveiled number equals origination number for originate app */



Session.f_strEvent += "sn=\"" ;



Session.f_strEvent += Session.g_oAPI.strAniReceived ;



Session.f_strEvent += "\"" ;



]]></script>
          </scripts>
        </action>
        <action id="15" plug-in="Pactolus.Branch.1" ><?xtml-editor x=522 y=383 ?>
          <!--wiretap-->
          <results >
            <result name="Default" link="3" stubbed="0"/>
            <result name="strWiretapFlag" link="14" stubbed="1" >g_oAccessLine.strWiretapFlag == "T"</result>
            <result name="intra-site / no media relay" link="20" stubbed="0" >g_oAPI.bRelayMedia == false</result>
          </results>
        </action>
        <action id="16" plug-in="Pactolus.Sleep.1" ><?xtml-editor x=1043 y=494 ?>
          <!--wait configurable num seconds to allow wiretap to set up-->
          <sleep xmlns="urn:www.pactolus.com:xtml:application" duration="s_nCaleaDelay"/>
          <results >
            <result name="Default" link="3" stubbed="0"/>
          </results>
        </action>
        <action id="18" plug-in="Pactolus.Branch.1" ><?xtml-editor x=807 y=227 ?>
          <results >
            <result name="Default" link="19" stubbed="0"/>
            <result name="CallType is Prepaid IVR" link="4" stubbed="0" >g_oAPI.strCallType == s_CT_PREPAID_IVR</result>
          </results>
        </action>
        <action id="19" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=1059 y=227 ?>
          <!--bbtelSetTimers-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;bbtelSetTimers&quot;" return="" external-function="1" library="lib_voip.xml" >
            <parameter >g_oTimer</parameter>
            <parameter >g_oSub.nSecondsAvailable</parameter>
            <parameter >g_oAPI.nWarningThreshold1</parameter>
            <parameter >g_oAPI.nWarningThreshold2</parameter>
            <parameter >g_oAPI.nWarningThreshold3</parameter>
            <parameter >g_oSub.nReservedSeconds</parameter>
          </function>
          <results >
            <result name="Default" link="4" stubbed="0"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[// if we're setting the timers ... set the language in the API object so



// when we call the timer functions they get the correct language ...



Session.g_oAPI.strLanguage = Session.g_oAccessLine.strLanguage;]]></script>
          </scripts>
        </action>
        <action id="20" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=548 y=568 ?>
          <!--DropRtpRelay-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;DropRtpRelay&quot;" return="" external-function="1" library=""/>
          <results >
            <result name="Default" link="3" stubbed="0"/>
          </results>
        </action>
      </actions>
      <text-objects >
        <text-object x-coord="503" y-coord="514" width="125" height="25" text="Click to edit text." font-name="Times New Roman" size="-16" red="0" green="0" blue="0" weight="0" underline="0" strikeout="0" point-size="12" italic="0"/>
      </text-objects>
    </function>
    <function name="OnBye" start="19" event="OnBye" returns="void" >
      <parameters >
        <parameter name="strAccept" type="string" pass="byref"/>
        <parameter name="strAcceptEncoding" type="string" pass="byref"/>
        <parameter name="strAcceptLanguage" type="string" pass="byref"/>
        <parameter name="strAllow" type="string" pass="byref"/>
        <parameter name="strAllowEvents" type="string" pass="byref"/>
        <parameter name="strAuthorization" type="string" pass="byref"/>
        <parameter name="strCallId" type="string" pass="byref"/>
        <parameter name="strCSeq" type="string" pass="byref"/>
        <parameter name="strDate" type="string" pass="byref"/>
        <parameter name="strEncryption" type="string" pass="byref"/>
        <parameter name="strErrorInfo" type="string" pass="byref"/>
        <parameter name="strFrom" type="string" pass="byref"/>
        <parameter name="strMaxForwards" type="string" pass="byref"/>
        <parameter name="strMIMEVersion" type="string" pass="byref"/>
        <parameter name="strProxyAuthorization" type="string" pass="byref"/>
        <parameter name="strProxyRequire" type="string" pass="byref"/>
        <parameter name="strRecordRoute" type="string" pass="byref"/>
        <parameter name="strReferredBy" type="string" pass="byref"/>
        <parameter name="strRequestURI" type="string" pass="byref"/>
        <parameter name="strRequire" type="string" pass="byref"/>
        <parameter name="strResponseKey" type="string" pass="byref"/>
        <parameter name="strRoute" type="string" pass="byref"/>
        <parameter name="strSupported" type="string" pass="byref"/>
        <parameter name="strTimestamp" type="string" pass="byref"/>
        <parameter name="strTo" type="string" pass="byref"/>
        <parameter name="strUserAgent" type="string" pass="byref"/>
        <parameter name="strVia" type="string" pass="byref"/>
      </parameters>
      <local-vars >
        <var name="i" type="i4" >0</var>
        <var name="strToSend" type="string" ></var>
        <var name="strFromSend" type="string" ></var>
        <var name="bUnknownCallId" type="boolean" >1</var>
        <var name="bSpiralCallId" type="boolean" >0</var>
        <var name="nReturnCode" type="i4" >0</var>
        <var name="bByeOtherLeg" type="boolean" >0</var>
        <var name="bCancelOtherLeg" type="boolean" >0</var>
        <var name="nIdxA" type="i4" >0</var>
        <var name="nIdxB" type="i4" >0</var>
        <var name="bByeFromOrphanLeg" type="boolean" >0</var>
      </local-vars>
      <actions >
        <action id="19" plug-in="Pactolus.Branch.1" ><?xtml-editor x=39 y=245 ?>
          <results >
            <result name="Default" link="21" stubbed="0"/>
            <result name="unknown callid" link="27" stubbed="0" >bUnknownCallId == true</result>
            <result name="in transfer" link="23" stubbed="0" >g_STATE == s_STATE_TRANSFERRING_CALL</result>
            <result name="bye from C after dialog replaced" link="23" stubbed="0" >g_oCallLegs[2].strCallId == strCallId



AND g_bDialogReplaced == true</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.bUnknownCallId = false ;







if ( Session.g_bDialogReplaced && 



	Session.strCallId != Session.g_oCallLegs[2].strCallId &&



	Session.strCallId != Session.g_oCallLegs[0].strCallId &&



	Session.strCallId != Session.g_oCallLegs[1].strCallId ) {



	Session.bUnknownCallId = true ;



		



		Server.logInfo("Received BYE with unknown callid: " + Session.strCallId ) ;



		Server.logInfo("g_oCallLegs[0] callid is: " +  Session.g_oCallLegs[0].strCallId ) ;



		Server.logInfo("g_oCallLegs[1] callid is: " +  Session.g_oCallLegs[1].strCallId ) ;



		Server.logInfo("g_oCallLegs[2] callid is: " +  Session.g_oCallLegs[2].strCallId ) ;



}



else if( !Session.g_bDialogReplaced &&



		Session.strCallId != Session.g_oCallLegs[0].strCallId &&



		Session.strCallId != Session.g_oCallLegs[1].strCallId ) {



		



		Session.bUnknownCallId = true ;



		



		Server.logInfo("Received BYE with unknown callid: " + Session.strCallId ) ;



		Server.logInfo("A leg callid is: " +  Session.g_oCallLegs[0].strCallId ) ;



		Server.logInfo("B leg callid is: " +  Session.g_oCallLegs[1].strCallId ) ;



}]]></script>
          </scripts>
        </action>
        <action id="7" plug-in="Standard.EndSession.1" ><?xtml-editor x=655 y=19 ?></action>
        <action id="13" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=769 y=513 ?>
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
        </action>
        <action id="20" plug-in="Pactolus.SipResponse.1" ><?xtml-editor x=518 y=296 ?>
          <!--481 Call Leg Does Not Exist-->
          <sip-response xmlns="urn:www.pactolus.com:xtml:sip" remove-via="0" reliable="0" increment-cseq-first="0" increment-cseq-last="0" >
            <call-id >strCallId</call-id>
            <cseq >strCSeq</cseq>
            <from >strFrom</from>
            <status >"SIP/2.0 481 Call Leg/Transaction Does Not Exist"</status>
            <to >strTo</to>
            <via >strVia</via>
          </sip-response>
          <results >
            <result name="Default" link="13" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
        </action>
        <action id="21" plug-in="Pactolus.SipResponse.1" ><?xtml-editor x=289 y=131 ?>
          <!--200 OK-->
          <sip-response xmlns="urn:www.pactolus.com:xtml:sip" remove-via="0" reliable="0" increment-cseq-first="0" increment-cseq-last="0" >
            <call-id >strCallId</call-id>
            <cseq >strCSeq</cseq>
            <from >strFrom</from>
            <status >"SIP/2.0 200 OK"</status>
            <to >strTo</to>
            <via >strVia</via>
          </sip-response>
          <results >
            <result name="Default" link="24" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[if ( Session.strCallId == Session.g_oCallLegs[0].strCallId ) {



	Session.g_oCallLegs[1].nTerminationReason = Session.g_oAPI.nCallTerminationReason = Session.s_TR_CALLING_PARTY_HANGUP ;



	Session.g_oCallLegs[0].bConnected = false ;



	Session.g_oCallLegs[0].nState = Session.s_LEG_STATE_NONE ;



	if( Session.g_oCallLegs[1].nState == Session.s_LEG_STATE_DIALING ) {



		Server.logInfo("Received BYE from A, need to CANCEL B") ;



		Session.bCancelOtherLeg = true ;



	}



	else if( Session.g_oCallLegs[1].nState == Session.s_LEG_STATE_CONNECTED /* &&



			!Session.g_bAttendedTransfer */) {



		Server.logInfo("Received BYE from A, need to send BYE to B") ;



		Session.bByeOtherLeg = true ;



	}



	else {



		Server.logInfo("Received BYE from A, no B leg") ;



	}



	Session.nIdxA = 0 ;



	Session.nIdxB = 1 ;



}



else if ( Session.strCallId == Session.g_oCallLegs[1].strCallId ) {



	Session.g_oCallLegs[1].nTerminationReason = Session.g_oAPI.nCallTerminationReason = Session.s_TR_CALLED_PARTY_HANGUP ;



	Session.g_oCallLegs[1].bConnected = false ;



	Session.g_oCallLegs[1].nState = Session.s_LEG_STATE_NONE ;



	Session.nIdxA = 0 ;



	Session.nIdxB = 1 ;



	if( Session.g_oCallLegs[0].nState == Session.s_LEG_STATE_CONNECTED ) {



		Server.logInfo("Received BYE from B, need to send BYE to A") ;



		Session.bByeOtherLeg = true ;



	}



	Session.nIdxA = 1 ;



	Session.nIdxB = 0 ;



}











]]></script>
          </scripts>
        </action>
        <action id="23" plug-in="Pactolus.SipResponse.1" ><?xtml-editor x=275 y=657 ?>
          <!--200 OK-->
          <sip-response xmlns="urn:www.pactolus.com:xtml:sip" remove-via="0" reliable="0" increment-cseq-first="0" increment-cseq-last="0" >
            <call-id >strCallId</call-id>
            <cseq >strCSeq</cseq>
            <from >strFrom</from>
            <status >"SIP/2.0 200 OK"</status>
            <to >strTo</to>
            <via >strVia</via>
          </sip-response>
          <results >
            <result name="Default" link="13" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("Got BYE during transfer from call id: " + Session.strCallId) ;



if ( Session.strCallId == Session.g_oCallLegs[0].strCallId ) {



	Session.g_oCallLegs[0].bConnected = false;



}



else if (Session.strCallId == Session.g_oCallLegs[1].strCallId ) {



	Session.g_oCallLegs[1].bConnected = false;



}



	]]></script>
          </scripts>
        </action>
        <action id="24" plug-in="Pactolus.Branch.1" ><?xtml-editor x=499 y=158 ?>
          <results >
            <result name="Default" link="7" stubbed="0"/>
            <result name="BYE other leg" link="25" stubbed="0" >bByeOtherLeg == true</result>
            <result name="CANCEL other leg" link="26" stubbed="0" >bCancelOtherLeg == true</result>
            <result name="g_bAttendedTransfer" link="13" stubbed="0" >g_bAttendedTransfer == true



AND g_oCallLegs[0].strCallId == strCallId</result>
          </results>
        </action>
        <action id="25" plug-in="Pactolus.SipBye.1" ><?xtml-editor x=794 y=152 ?>
          <sip-bye xmlns="urn:www.pactolus.com:xtml:sip" add-record-route="0" add-via="1" timeout="s_nShortTimeout" handle-responses="1" increment-cseq-first="0" increment-cseq-last="0" >
            <call-id >g_oCallLegs[nIdxB].strCallId</call-id>
            <cseq >g_oCallLegs[nIdxB].strCSeq</cseq>
            <from >strFrom</from>
            <request-uri >g_oCallLegs[nIdxB].strRemoteUri</request-uri>
            <route >g_oCallLegs[nIdxB].strRoute</route>
            <to >strTo</to>
          </sip-bye>
          <results >
            <result name="Default" link="7" stubbed="0"/>
            <result name="Success"/>
            <result name="Client error (4xx)"/>
            <result name="Server error (5xx)"/>
            <result name="Global error (6xx)"/>
            <result name="Timeout"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.strTo = Session.g_oCallLegs[Session.nIdxB].bUac ? Session.g_oCallLegs[Session.nIdxB].strTo : Session.g_oCallLegs[Session.nIdxB].strFrom ;



Session.strFrom = Session.g_oCallLegs[Session.nIdxB].bUac ? Session.g_oCallLegs[Session.nIdxB].strFrom : Session.g_oCallLegs[Session.nIdxB].strTo ;



]]></script>
          </scripts>
        </action>
        <action id="26" plug-in="Pactolus.SipCancel.1" ><?xtml-editor x=804 y=334 ?>
          <sip-bye xmlns="urn:www.pactolus.com:xtml:sip" add-record-route="0" add-via="0" timeout="s_nShortTimeout" handle-responses="1" increment-cseq-first="0" increment-cseq-last="0" >
            <call-id >g_oCallLegs[1].strCallId</call-id>
            <cseq >g_oCallLegs[1].strCSeq</cseq>
            <from >g_oCallLegs[1].strFrom</from>
            <request-uri >g_oCallLegs[1].strRemoteUri</request-uri>
            <route >g_oCallLegs[1].strRoute</route>
            <to >g_oCallLegs[1].strTo</to>
            <via >g_oCallLegs[1].strVia</via>
          </sip-bye>
          <results >
            <result name="Default" link="7" stubbed="1"/>
            <result name="Success"/>
            <result name="Timeout"/>
            <result name="Error"/>
          </results>
        </action>
        <action id="27" plug-in="Pactolus.Branch.1" ><?xtml-editor x=275 y=328 ?>
          <results >
            <result name="Default" link="20" stubbed="0"/>
            <result name="BYE from transferrer" link="28" stubbed="0" >bByeFromOrphanLeg == true</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.bByeFromOrphanLeg = ( 0 == Clib.strcmp( Session.strCallId, Session.g_strReplacedCallId ) ) ;]]></script>
          </scripts>
        </action>
        <action id="28" plug-in="Pactolus.SipResponse.1" ><?xtml-editor x=480 y=492 ?>
          <!--200 OK-->
          <sip-response xmlns="urn:www.pactolus.com:xtml:sip" remove-via="0" reliable="0" increment-cseq-first="0" increment-cseq-last="0" >
            <call-id >strCallId</call-id>
            <cseq >strCSeq</cseq>
            <from >strFrom</from>
            <status >"SIP/2.0 200 OK"</status>
            <to >strTo</to>
            <via >strVia</via>
          </sip-response>
          <results >
            <result name="Default" link="13" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_strReplacedCallId = "";]]></script>
          </scripts>
        </action>
      </actions>
    </function>
    <function name="OnServiceLoad" start="5" event="OnServiceLoad" returns="void" >
      <parameters >
        <parameter name="strAppName" type="string" pass="byref"/>
        <parameter name="nSessionCount" type="i2" pass="byref"/>
        <parameter name="nMaxIterations" type="i2" pass="byref"/>
        <parameter name="nServerId" type="i2" pass="byref"/>
      </parameters>
      <local-vars >
        <var name="strSessionId" type="string" ></var>
        <var name="strIpAddress" type="string" ></var>
        <var name="strUseOtgRouting" type="string" ></var>
        <var name="strRouteOnNetViaSoftswitch" type="string" ></var>
        <var name="strRelayIntraSiteMedia" type="string" ></var>
      </local-vars>
      <actions >
        <action id="5" plug-in="Pactolus.UserFunction.1" ><?xtml-editor x=82 y=122 ?>
          <user-function xmlns="urn:www.pactolus.com:xtml:application" process="&quot;PACTOLUS_ps_c_adaptor&quot;" function="&quot;get_property&quot;" timeout="g_iTimeout" return="" async="0" >
            <parameter >"primary-softswitch"</parameter>
            <parameter >s_strPrimarySoftswitch</parameter>
            <parameter >"backup-softswitch"</parameter>
            <parameter >s_strBackupSoftswitch</parameter>
            <parameter >"niu-address"</parameter>
            <parameter >s_strNiuAddress</parameter>
            <parameter >"default-realm"</parameter>
            <parameter >s_strDefaultRealm</parameter>
            <parameter >"force-realm"</parameter>
            <parameter >s_strForcedRealm</parameter>
            <parameter >"media-server-type"</parameter>
            <parameter >s_strMsType</parameter>
            <parameter >"packetization-period"</parameter>
            <parameter >s_nPacketizationPeriod</parameter>
            <parameter >"prepend-to-outdial"</parameter>
            <parameter >s_strPrependToOutdial</parameter>
            <parameter >"psap-primary"</parameter>
            <parameter >s_strPrimaryPSAP</parameter>
            <parameter >"psap-backup"</parameter>
            <parameter >s_strBackupPSAP</parameter>
            <parameter >"psap-ecrc"</parameter>
            <parameter >s_strECRC</parameter>
            <parameter >"carrier-name"</parameter>
            <parameter >s_strCarrierName</parameter>
            <parameter >"calea-delay"</parameter>
            <parameter >s_nCaleaDelay</parameter>
            <parameter >"codec"</parameter>
            <parameter >s_strCodec</parameter>
            <parameter >"use-otg-routing"</parameter>
            <parameter >strUseOtgRouting</parameter>
            <parameter >"route-on-net-via-softswitch"</parameter>
            <parameter >strRouteOnNetViaSoftswitch</parameter>
            <parameter >"relay-intra-site-media"</parameter>
            <parameter >strRelayIntraSiteMedia</parameter>
            <parameter >"emergency_route_type"</parameter>
            <parameter >s_nEmergencyRouteType</parameter>
            <parameter >"emergency_forwarding_number_1"</parameter>
            <parameter >s_strEmergencyForwardingNbr1</parameter>
            <parameter >"emergency_forwarding_number_2"</parameter>
            <parameter >s_strEmergencyForwardingNbr2</parameter>
            <parameter >"emergency_forwarding_number_3"</parameter>
            <parameter >s_strEmergencyForwardingNbr3</parameter>
            <parameter >"local_emergency_number"</parameter>
            <parameter >s_strLocalEmergencyNumber</parameter>
          </user-function>
          <results >
            <result name="Default" link="4" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="last" ><![CDATA[Session.s_strLocalHost = Server.sipAddress ;



if( 5060 != Server.sipPort ) {



	Session.s_strLocalUri += ":" ;



	Session.s_strLocalUri += Server.sipPort ;



}



Server.logInfo("local host: " + Session.s_strLocalHost ) ;







Session.s_strLocalUri = "<sip:" + Session.s_strLocalHost + ">" ;



Server.logInfo("local uri: " + Session.s_strLocalUri ) ;







if( 0 == Session.s_strPrimarySoftswitch.length ) {



	Server.logError("Primary softswitch sip address must be supplied and was not") ;



}



else {



	Server.logInfo("Primary softswitch sip address: " + Session.s_strPrimarySoftswitch) ;



}







if( 0 == Session.s_strNiuAddress.length ) {



	Server.logError("NIU sip address must be supplied and was not") ;



}



else {



	Server.logInfo("NIU sip address: " + Session.s_strNiuAddress) ;



}







if( 0 == Session.s_strDefaultRealm.length ) {



	Server.logInfo("No default realm supplied") ;



}



else {



	Server.logInfo("Default realm: " + Session.s_strDefaultRealm) ;



}







if( 0 == Session.s_strForcedRealm.length ) {



	Server.logInfo("No forced realm supplied") ;



}



else {



	Server.logInfo("Forced realm: " + Session.s_strForcedRealm) ;



}







Server.logInfo("Local Emergency Calling Number: " + Session.s_strLocalEmergencyNumber);



if ( "1911" == Session.s_strLocalEmergencyNumber ||



	"0911" == Session.s_strLocalEmergencyNumber ){



	Session.s_strLocalEmergencyNumber = "911";



}











if ( 0 == Session.s_nEmergencyRouteType ) {



	Server.logInfo("PLATFORM DOES NOT SUPPORT E-911 CALLING.");



}



else if ( 1 == Session.s_nEmergencyRouteType ) {



	Server.logInfo("E-911 calls will be routed via a redirect server.");	



	if ( 0 == Session.s_strPrimaryPSAP.length ) {



		Server.logError("Primary 911-PSAP address must be supplied and was not.") ;



	}



	else {



		Server.logInfo("Primary 911-PSAP: " + Session.s_strPrimaryPSAP) ;



	}



	if ( 0 < Session.s_strBackupPSAP.length ) {



		Server.logInfo("Back up 911-PSAP: " + Session.s_strBackupPSAP);



	}



	if ( 0 == Session.s_strECRC.length ) {



		Server.logError("ECRC-911 number must be supplied and was not") ;



	}



	else {



		Server.logInfo("ECRC-911 number: " + Session.s_strECRC) ;



	}



}



else if ( 2 == Session.s_nEmergencyRouteType ) {



	Server.logInfo("E-911 calls will be routed via a forwarding server.");



	if ( 0 == Session.s_strEmergencyForwardingNbr1.length ) {



		Server.logError("Primary e-911 forwarding number must be supplied and was not.");



	}



	else {



		Server.logInfo("Primary e-911 forwarding number: " + Session.s_strEmergencyForwardingNbr1);



	}



	if ( 0 < Session.s_strEmergencyForwardingNbr2.length ) {



		Server.logInfo("First back up e-911 forwarding number: " + Session.s_strEmergencyForwardingNbr2);



	}



	if ( 0 < Session.s_strEmergencyForwardingNbr3.length) {



		Server.logInfo("Second back up e-911 forwarding number: " + Session.s_strEmergencyForwardingNbr3);



	}



}











if ( 0 == Session.s_strCodec.length ) {



	Session.s_strCodec = "-1";



	Server.logInfo("No Codec specified; applying No Preference");



}



else if ( "pcma" == Session.s_strCodec ) {



	Session.s_strCodec = "PCMA";



	Server.logInfo("Codec is set to: " + Session.s_strCodec);



}



else {



	Server.logInfo("Setting Codec to: " + Session.s_strCodec);



}







Session.s_bUseSonusRouting = false ;



if( "1" == Session.strUseOtgRouting || "T" == Session.strUseOtgRouting ) {



	Server.logInfo("Routing codes will be applied to otg parameter on From header") ;



	Session.s_bUseSonusRouting = true ;



}







Session.s_bRouteOnNetViaSoftswitch = false ;



if( "1" == Session.strRouteOnNetViaSoftswitch || "T" == Session.strRouteOnNetViaSoftswitch ) {



	Server.logInfo("On-net calls will be routed via softswitch") ;



	Session.s_bRouteOnNetViaSoftswitch = true ;



}







if( "0" == Session.strRelayIntraSiteMedia || "F" == Session.strRelayIntraSiteMedia ) {



	Server.logInfo("Media for intra-site calls will NOT be relayed through the SBC; the media streams will go directly from device to device") ;



	Session.s_bRelayIntraSiteMedia = false ;



}



else



{	



	Server.logInfo("Media for intra-site calls will be relayed through the SBC; the media streams will NOT go directly from device to device") ;



	Session.s_bRelayIntraSiteMedia = true ;



}



]]></script>
          </scripts>
        </action>
        <action id="1" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=582 y=124 ?>
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
        </action>
        <action id="4" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=320 y=110 ?>
          <!--VoipRemoveAllOriginations-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;VoipRemoveAllOriginations&quot;" return="" external-function="1" library="lib_APISce.xml" >
            <parameter >strIpAddress</parameter>
          </function>
          <results >
            <result name="Default" link="1" stubbed="0"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.strIpAddress = Server.ipAddress ;]]></script>
          </scripts>
        </action>
      </actions>
    </function>
    <function name="OnNewInvite" start="14" event="OnNewInvite" returns="void" >
      <parameters >
        <parameter name="oSIPMsg" type="object" pass="byref"/>
      </parameters>
      <local-vars >
        <var name="idx" type="i4" >0</var>
        <var name="bTryAgain" type="boolean" >0</var>
        <var name="strViaFromCancelRequest" type="string" ></var>
        <var name="nReturnCode" type="i4" >0</var>
        <var name="nRingNoAnswerTimeout" type="i4" >300</var>
        <var name="nFinalStatus" type="i4" >0</var>
        <var name="bAlegHungUp" type="boolean" >0</var>
        <var name="bConnected" type="boolean" >0</var>
        <var name="bFalse" type="boolean" >0</var>
        <var name="bTrue" type="boolean" >1</var>
        <var name="bProxyFinalNonSuccess" type="boolean" >0</var>
        <var name="idx911" type="i4" >0</var>
        <var name="strStatus" type="string" ></var>
        <var name="nSessionTimerB" type="i4" >0</var>
        <var name="nSessionTimer" type="i4" >0</var>
        <var name="bUseSessionTimer" type="boolean" >0</var>
        <var name="strRefresher" type="string" ></var>
        <var name="strBLegContact" type="string" ></var>
        <var name="nMsgNumber" type="i4" >0</var>
        <var name="nRingBackPrompt" type="i4" >341</var>
      </local-vars>
      <actions >
        <action id="14" plug-in="Pactolus.Branch.1" ><?xtml-editor x=21 y=63 ?>
          <results >
            <result name="Default" link="13" stubbed="0"/>
            <result name="play time remaining" link="16" stubbed="0" >g_oAPI.nBillingType == s_BT_PREPAID



AND ((g_oSub.nSecondsAvailable &lt; g_oAccessLine.nMinTimeAnnounce



AND g_oAccessLine.nMinTimeAnnounce &gt; 0)



OR g_oAccessLine.nMinTimeAnnounce == -1)



AND g_oAPI.strCallType == s_CT_NORMAL</result>
            <result name="b911" link="42" stubbed="0" >g_oCallLegs[1].b911 == true</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("Min Time announce: " + Session.g_oAccessLine.nMinTimeAnnounce ) ;



Server.logInfo("Call timer: " + Session.g_oSub.nSecondsAvailable ) ;







Server.logInfo("Dest Nbr = " + Session.g_oCallLegs[1].strOutdialDestNbr); 







//set up initial session timer info based on what we received from the A leg.



if ( 0 < Session.g_oCallLegs[0].strSessionExpires.length ) {



	Session.g_oCallLegs[1].strSessionExpires = Session.g_oCallLegs[0].strSessionExpires;



	Session.nSessionTimer = Clib.atoi( Session.g_oCallLegs[0].strSessionExpires ) ;



	Session.bUseSessionTimer = true;







	if ( -1 != Session.g_oCallLegs[0].strSessionExpires.toString().indexOf("uac")) {



		Session.g_oCallLegs[0].bRefresher = false;



		Session.g_oCallLegs[1].bRefresher = true;



	}



	else {



		Session.g_oCallLegs[0].bRefresher = true;



		Session.g_oCallLegs[1].bRefresher = false;



	}



}







]]></script>
          </scripts>
        </action>
        <action id="5" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=1386 y=307 ?>
          <!--Connected to Called Party-->
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[



Session.g_STATE = Session.s_STATE_CONNECTED_TO_CALLED ;]]></script>
          </scripts>
        </action>
        <action id="6" plug-in="Standard.EndSession.1" ><?xtml-editor x=1353 y=44 ?>
          <!--Not connected to Called Party-->
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[if( 486 == Session.nFinalStatus ) {



	Session.g_oCallLegs[1].nTerminationReason = Session.g_oAPI.nCallTerminationReason = Session.s_TR_BUSY ;



}



else if( 487 == Session.nFinalStatus ) {



	Session.g_oCallLegs[1].nTerminationReason = Session.g_oAPI.nCallTerminationReason = Session.s_TR_NO_ANSWER ;



}



else {



	Session.g_oCallLegs[1].nTerminationReason = Session.g_oAPI.nCallTerminationReason = Session.s_TR_SIP_NON_SUCCESS ;



}



Session.g_oCallLegs[1].nState = Session.s_LEG_STATE_NONE ;]]></script>
          </scripts>
        </action>
        <action id="10" plug-in="Pactolus.Branch.1" ><?xtml-editor x=500 y=57 ?>
          <results >
            <result name="Default" link="6" stubbed="0"/>
            <result name="try next proxy or GSX" link="42" stubbed="0" >bTryAgain == true</result>
            <result name="route to IVR" link="36" stubbed="0" >bTryAgain == false



AND g_oAPI.strCallType == s_CT_IVR_MENU



AND g_bTryReceptionist == true



AND bAlegHungUp == false</result>
            <result name="failed 911 route" link="38" stubbed="0" >bTryAgain == false



AND g_oAPI.strCallType == s_CT_911



AND bAlegHungUp == false</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.bTryAgain = false ;







if( !Session.bAlegHungUp ) {



	if ( 0 == Session.nFinalStatus && ++Session.idx < Session.g_oProxyList.length ) {



		Session.bTryAgain = true ;



		if ( Session.g_oAPI.strCallType == Session.s_CT_911 &&



			( Session.g_oAPI.nEmergencyRouteType == Session.s_E911_ROUTE_FORWARD ||



			  Session.g_oCallLegs[1].b911_ECRC == true)) {



			  Server.logInfo("911 Call: trying next proxy idx <" + Session.idx + ">");



			  return;



		}



	}



	



	



	if ( Session.g_oAPI.strCallType == Session.s_CT_911 ) {



		if ( ++Session.idx911 < Session.g_oEmergencyRoutes.length ) {



			Session.bTryAgain = true ;



			if ( Session.g_oAPI.nEmergencyRouteType == Session.s_E911_ROUTE_REDIRECT && 2 == Session.idx911 ) {



				Session.g_oCallLegs[1].b911_ECRC = true;



				Server.logInfo("911 Call: trying ECRC number");



			}



			Session.idx = 0;



			Server.logInfo("Trying next emergency route id <" + Session.idx911 + ">");



		}	



		else {



			Session.bTryAgain = false ;



			Server.logInfo("No more emergency routes to try");



		}



		



	}	



}]]></script>
            <script language="javascript" timing="last" ><![CDATA[Session.g_oCallLegs[1].lTimeEnded = Server.getUTCTime() ;]]></script>
          </scripts>
        </action>
        <action id="13" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=289 y=84 ?>
          <!--ProxyCallWithoutRtpRelay-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;ProxyCallWithoutRtpRelay&quot;" return="bConnected" external-function="1" library="lib_voip.xml" >
            <parameter >g_oCallLegs[0]</parameter>
            <parameter >g_oCallLegs[1]</parameter>
            <parameter >nRingNoAnswerTimeout</parameter>
            <parameter >g_oCallLegs[0].strSessionExpires</parameter>
            <parameter >g_oCallLegs[0].bRefresher</parameter>
            <parameter >g_oCallLegs[1].strSessionExpires</parameter>
            <parameter >g_oCallLegs[1].bRefresher</parameter>
            <parameter >bProxyFinalNonSuccess</parameter>
            <parameter >nFinalStatus</parameter>
            <parameter >bAlegHungUp</parameter>
          </function>
          <results >
            <result name="Default" link="10" stubbed="0"/>
            <result name="connected" link="29" stubbed="0" >bConnected == true</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_oCallLegs[1].bAttemptedToOutdial = true; 



Session.g_oCallLegs[1].bCurrentlyDialing = true ;



Session.g_oCallLegs[1].nState = Session.s_LEG_STATE_DIALING ;







/* set flag to write CDR at session end */



Session.g_oAPI.bWriteCDR = true ;











Session.bProxyFinalNonSuccess = true ;



	if ( true == Session.g_oCallLegs[1].b911 || Session.g_oAPI.strCallType == Session.s_CT_IVR_MENU) {



		Session.bProxyFinalNonSuccess = false ;



	}



	



Session.g_oCallLegs[1].strRequestUri = "sip:" ;
Session.g_oCallLegs[1].strTo = "<sip:" ;


	if ( 0 != Session.idx911 &&



		(Session.g_oAPI.nEmergencyRouteType == Session.s_E911_ROUTE_FORWARD || 2 == Session.idx911) ) {



		var bOnNet = false ;



		Server.lockSharedVariables() ;



		Session.g_oEmergencyRoutes[Session.idx911] = js_translate_destination_broadband( Session.s_strCarrierName, 



			Session.g_oEmergencyRoutes[Session.idx911], Session.g_oAPI.nOrigCountryId, bOnNet, Session.g_oAPI.strAniToSend ) ;



		Server.unlockSharedVariables() ;



		



		Session.g_oCallLegs[1].strOutdialDestNbr = Session.g_oEmergencyRoutes[Session.idx911]  ;



		



		if(Session.g_oAPI.strPrimaryRouteCode != "" && Session.g_oAPI.strPrimaryRouteCode != undefined) {



			Session.g_oCallLegs[1].strOutdialDestNbr = Session.g_oAPI.strPrimaryRouteCode + "" + Session.g_oCallLegs[1].strOutdialDestNbr;



		}



		Session.g_oCallLegs[1].strRequestUri += Session.g_oCallLegs[1].strOutdialDestNbr ;
		Session.g_oCallLegs[1].strTo += Session.g_oCallLegs[1].strOutdialDestNbr ;


		



	}



	else {



		Session.g_oCallLegs[1].strRequestUri += Session.g_oCallLegs[1].strOutdialDestNbr ;
		Session.g_oCallLegs[1].strTo += Session.g_oCallLegs[1].strOutdialDestNbr ;


	}



	Session.g_oCallLegs[1].strRequestUri += "@" ;
	Session.g_oCallLegs[1].strTo += "@" ;


	if ( Session.g_oAPI.strCallType == Session.s_CT_911 &&



			Session.g_oAPI.nEmergencyRouteType == Session.s_E911_ROUTE_REDIRECT &&



			2 != Session.idx911 ) {



		Session.g_oCallLegs[1].strRequestUri += Session.g_oEmergencyRoutes[Session.idx911] ;
		Session.g_oCallLegs[1].strTo += Session.g_oEmergencyRoutes[Session.idx911] ;

		Session.g_oCallLegs[1].str911Proxy = Session.g_oProxyList[Session.idx] ;



	}



	else {



		Session.g_oCallLegs[1].strRequestUri += Session.g_oProxyList[Session.idx] ;
		Session.g_oCallLegs[1].strTo += Session.s_strNiuAddress ;


		Session.g_oCallLegs[1].str911Proxy = Session.g_oProxyList[Session.idx] ;



	}






Session.g_oCallLegs[1].strTo += ">";
// Session.g_oCallLegs[1].strTo = "<" + Session.g_oCallLegs[1].strRequestUri + ">" ;



Session.g_oCallLegs[1].strOriginalTo = Session.g_oCallLegs[1].strTo ;











Session.g_oCallLegs[1].strCallId = js_CreateUniqueCallId() ;



Session.g_oCallLegs[1].strRemoteUri = Session.g_oCallLegs[1].strRequestUri ;



Session.g_oCallLegs[1].strContact = Session.s_strLocalUri ;



	



//some call types may have a ring no answer specified.	



if ( Session.g_oAPI.strCallType == Session.s_CT_IVR_MENU && Session.g_bTryReceptionist ) {



	Session.nRingNoAnswerTimeout = Session.g_oAPI.nRNATimeout ;



	Server.logInfo("Applying receptionist ring no answer timeout: " + Session.nRingNoAnswerTimeout);



}







if (Session.g_oAPI.strCallType == Session.s_CT_911 ) {



	if ( (Session.idx911 + 1) == Session.g_oEmergencyRoutes.length ) {



		Session.nRingNoAnswerTimeout = 300;



	}



	else if ( 0 < Session.g_oAPI.nRNATimeout ){



		Session.nRingNoAnswerTimeout = Session.g_oAPI.nRNATimeout;



	}



	else {



		Session.nRingNoAnswerTimeout = 10;



	}



	Server.logInfo("Applying emergency call ring no answer time out: " + Session.nRingNoAnswerTimeout);



}



	



Session.g_oCallLegs[1].lTimeStart = Server.getUTCTime() ;







Server.logInfo ("Dest Nbr = " + Session.g_oCallLegs[1].strOutdialDestNbr);



Server.logInfo ("Call Leg B (uri)" + Session.g_oCallLegs[1].strRequestUri);



Server.logInfo ("Call Leg B (to)" + Session.g_oCallLegs[1].strTo);



]]></script>
            <script language="javascript" timing="last" ><![CDATA[if( Session.bConnected ) {



	Server.logInfo("Returning from ProxyCallInternal with Session Timer values:");



	Server.logInfo("A Leg Refresher: " + Session.g_oCallLegs[0].bRefresher);



	Server.logInfo("A Leg SessionExpires: " + Session.g_oCallLegs[0].strSessionExpires);



	Server.logInfo("B Leg Refresher: " + Session.g_oCallLegs[1].bRefresher);



	Server.logInfo("B Leg SessionTimer: " + Session.g_oCallLegs[1].nSessionTimer);



	if (Session.g_oCallLegs[1].bRefresher) {



		Session.g_oCallLegs[1].strSessionExpires = Session.g_oCallLegs[1].nSessionTimer.toString() + "; refresher=uac" ;



	}



	else {



		Session.g_oCallLegs[1].strSessionExpires = Session.g_oCallLegs[1].nSessionTimer.toString() + "; refresher=uas" ;



	}



	Server.logInfo("B Leg SessionExpires: " + Session.g_oCallLegs[1].strSessionExpires);



}]]></script>
          </scripts>
        </action>
        <action id="16" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=41 y=450 ?>
          <!--DirectCallerToMS-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;DirectCallerToMS&quot;" return="nReturnCode" external-function="1" library="lib_mediaserver.xml" >
            <parameter >g_oCallLegs[0]</parameter>
            <parameter >g_oMS</parameter>
          </function>
          <results >
            <result name="Default" link="34" stubbed="0"/>
            <result name="success" link="28" stubbed="0" >nReturnCode == 0</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_oCallLegs[0].strContent = Session.g_oCallLegs[0].strRemoteSdp;]]></script>
          </scripts>
        </action>
        <action id="18" plug-in="Pactolus.Outdial.1" ><?xtml-editor x=758 y=405 ?>
          <!--outdial-->
          <Outdial xmlns="urn:www.pactolus.com:xtml:sip-cc" calling-number="g_oCallLegs[0].strCallingNumber" called-number="g_oCallLegs[1].strOutdialDestNbr" preferred-carrier="" codec="-1" reliable-provisional-responses="1" timeout="s_nLongTimeout" returns="nReturnCode" ms-type="s_strMsType" calling-connect-type="0" calling-capability="0" from="g_oCallLegs[0].strFrom" via="" ingress-gateway="g_oCallLegs[0].strRemoteUri" session-timer-a="0" hold-a-first="0" interrupt-on-long-pound="0" session-timer-value-a="" telephone-events="0" rtp-request-a="0" rtp-endpoint-a="" route-callingparty="g_oCallLegs[0].strRoute" record-route-callingparty="g_oCallLegs[0].strRecordRoute" contact-callingparty="g_oCallLegs[0].strContact" egress-gateway="g_oCallLegs[1].strRemoteUri" sdp-b="g_oCallLegs[1].strRemoteSdp" callid-b="g_oCallLegs[1].strCallId" cseq-b="g_oCallLegs[1].strCSeq" sip-status="strStatus" to-b="g_oCallLegs[1].strTo" from-b="g_oCallLegs[1].strFrom" session-timer-b="0" session-timer-value-b="" backup-ss="" route="g_oCallLegs[1].strRoute" record-route="g_oCallLegs[1].strRecordRoute" contact="g_oCallLegs[1].strContact" rtp-request-b="0" rtp-endpoint-b="" refresher="" remote-party-id="" play-ringback="1" language="g_oAccessLine.strLanguage" ringback-prompt="nRingBackPrompt" capability="1" ringback-codec="-1" packetization-period="g_oMS.nPacketizationPeriod" calling-packetization="" connection-id="" mgcp-call-id="" ms-sdp="" endpoint="" to="g_oCallLegs[0].strTo" callid-a="g_oCallLegs[0].strCallId" cseq-a="g_oCallLegs[0].strCSeq" sdp-a="g_oCallLegs[0].strRemoteSdp" >
            <additional-parameters >
              <privacy >g_oCallLegs[1].strPrivacy</privacy>
              <p-asserted-identity >g_oCallLegs[1].strPAssertedIdentity</p-asserted-identity>
            </additional-parameters>
          </Outdial>
          <results >
            <result name="Default" link="19" stubbed="0"/>
            <result name="Success" link="29" stubbed="1"/>
            <result name="Ring no answer"/>
            <result name="Busy" link="23" stubbed="0"/>
            <result name="Caller DTMF interrupt"/>
            <result name="Called party error"/>
            <result name="Calling party error"/>
            <result name="Other error"/>
            <result name="Resource unavailable"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_oCallLegs[1].bAttemptedToOutdial = true; 



Session.g_oCallLegs[1].bCurrentlyDialing = true ;



Session.g_oCallLegs[1].nState = Session.s_LEG_STATE_DIALING ;







/* set flag to write CDR at session end */



Session.g_oAPI.bWriteCDR = true ;











]]></script>
            <script language="javascript" timing="last" ><![CDATA[Session.g_oCallLegs[1].bCurrentlyDialing = false;







]]></script>
          </scripts>
        </action>
        <action id="19" plug-in="Pactolus.Branch.1" ><?xtml-editor x=1005 y=436 ?>
          <results >
            <result name="Default" link="27" stubbed="1"/>
            <result name="try next proxy or GSX" link="18" stubbed="0" >bTryAgain == true</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.bTryAgain = false ;







if ( ++Session.idx < Session.g_oProxyList.length ) {



	Session.bTryAgain = true ;



}]]></script>
            <script language="javascript" timing="last" ><![CDATA[Session.g_oCallLegs[1].lTimeEnded = Server.getUTCTime() ;]]></script>
          </scripts>
        </action>
        <action id="20" plug-in="Pactolus.MGCPDelete.1" ><?xtml-editor x=287 y=620 ?>
          <dlcx xmlns="urn:www.pactolus.com:xtml:media" connection-id="g_oMS.strConnectionId" endpoint="g_oMS.strEndPoint" callid="g_oMS.strCallId" timeout="s_nShortTimeout" returns="" ms-type="s_strMsType" >
            <parameters >
              <quarantine step="0" loop="0" process="0" discard="0"/>
              <events ><![CDATA[]]></events>
              <signals ><![CDATA[]]></signals>
              <digit-map ><![CDATA[]]></digit-map>
            </parameters>
          </dlcx>
          <results >
            <result name="Default" link="34" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
        </action>
        <action id="23" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=1035 y=574 ?>
          <!--outdial from MS-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;MSOutdialParty&quot;" return="nReturnCode" external-function="1" library="lib_mediaserver.xml" >
            <parameter >g_oCallLegs[0]</parameter>
            <parameter >g_oMS</parameter>
            <parameter >g_oCallLegs[0].strContact</parameter>
          </function>
          <results >
            <result name="Default" link="27" stubbed="1"/>
            <result name="success" link="24" stubbed="1" >nReturnCode == s_RET_SUCCESS</result>
            <result name="caller hung up" link="6" stubbed="1" >nReturnCode == s_RET_CALLER_HUNGUP</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_oCallLegs[1].nState = Session.s_LEG_STATE_NONE ;]]></script>
          </scripts>
        </action>
        <action id="24" plug-in="Pactolus.MGCPPlay.1" ><?xtml-editor x=85 y=831 ?>
          <!--line is busy-->
          <play xmlns="urn:www.pactolus.com:xtml:media" connection-id="g_oMS.strConnectionId" endpoint="g_oMS.strEndPoint" callid="g_oMS.strCallId" repeat="1" timeout="40" ms-type="s_strMsType" returns="nReturnCode" start-play="1" interrupt="0" return-immediate="0" digit-map="" language="g_oAccessLine.strLanguage" digits="" retry-count="" clear-digits="1" terminating-digit="" quick-collect="0" digit-timer="" >
            <audio type="index" >549</audio>
            <audio type="index" >550</audio>
            <audio type="index" >2004</audio>
          </play>
          <results >
            <result name="Default" link="26" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
        </action>
        <action id="26" plug-in="Pactolus.MGCPDelete.1" ><?xtml-editor x=318 y=852 ?>
          <dlcx xmlns="urn:www.pactolus.com:xtml:media" connection-id="g_oMS.strConnectionId" endpoint="g_oMS.strEndPoint" callid="g_oMS.strCallId" timeout="s_nShortTimeout" returns="" ms-type="s_strMsType" >
            <parameters >
              <quarantine step="0" loop="0" process="0" discard="0"/>
              <events ><![CDATA[]]></events>
              <signals ><![CDATA[]]></signals>
              <digit-map ><![CDATA[]]></digit-map>
            </parameters>
          </dlcx>
          <results >
            <result name="Default" link="27" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
        </action>
        <action id="27" plug-in="Pactolus.SipBye.1" ><?xtml-editor x=560 y=848 ?>
          <!--Hang up A-->
          <sip-bye xmlns="urn:www.pactolus.com:xtml:sip" add-record-route="0" add-via="1" timeout="3" handle-responses="1" increment-cseq-first="0" increment-cseq-last="0" >
            <call-id >g_oCallLegs[0].strCallId</call-id>
            <contact >g_oCallLegs[0].strContact</contact>
            <cseq >g_oCallLegs[0].strCSeq</cseq>
            <from >g_oCallLegs[0].strTo</from>
            <request-uri >g_oCallLegs[0].strRemoteUri</request-uri>
            <route >g_oCallLegs[0].strRoute</route>
            <to >g_oCallLegs[0].strFrom</to>
          </sip-bye>
          <results >
            <result name="Default" link="6" stubbed="1"/>
            <result name="Success"/>
            <result name="Client error (4xx)"/>
            <result name="Server error (5xx)"/>
            <result name="Global error (6xx)"/>
            <result name="Timeout"/>
            <result name="Error"/>
          </results>
        </action>
        <action id="28" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=31 y=645 ?>
          <!--PlayTimeRemaining-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;PlayTimeRemaining&quot;" return="" external-function="0" library="" >
            <parameter >g_oSub.nSecondsAvailable</parameter>
          </function>
          <results >
            <result name="Default" link="20" stubbed="0"/>
          </results>
        </action>
        <action id="29" plug-in="Pactolus.Branch.1" ><?xtml-editor x=528 y=184 ?>
          <results >
            <result name="Default" link="31" stubbed="0"/>
            <result name="Write E911 call record" link="30" stubbed="0" >g_oAPI.strCallType == s_CT_911</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_oCallLegs[1].lTimeAnswered = Server.getUTCTime() ;







Session.g_oCallLegs[1].bConnected = true ;



Session.g_oCallLegs[0].bConnected = true ;



Session.g_oCallLegs[0].nState = Session.g_oCallLegs[1].nState = Session.s_LEG_STATE_CONNECTED ;







Session.g_oCallLegs[1].strStatus = Session.nFinalStatus + "" ;







Server.enableEvents(true) ;







Session.g_oCallLegs[0].strRemoteSdpForRefer = Session.g_oCallLegs[0].strRemoteSdp ;



Session.g_oCallLegs[1].strRemoteSdpForRefer = Session.g_oCallLegs[1].strRemoteSdp ;]]></script>
          </scripts>
        </action>
        <action id="30" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=733 y=275 ?>
          <!--VoipProcE911Call-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;VoipProcE911Call&quot;" return="nReturnCode" external-function="1" library="lib_APISce.xml" >
            <parameter >g_oAPI</parameter>
            <parameter >g_oAccessLine</parameter>
            <parameter >g_oCallLegs[0]</parameter>
            <parameter >g_oCallLegs[1]</parameter>
          </function>
          <results >
            <result name="Default" link="31" stubbed="0"/>
          </results>
        </action>
        <action id="31" plug-in="Pactolus.Branch.1" ><?xtml-editor x=989 y=280 ?>
          <results >
            <result name="Default" link="5" stubbed="0"/>
            <result name="we must refresh B leg" link="32" stubbed="0" >g_oCallLegs[1].bRefresher == true



AND g_oCallLegs[1].nSessionTimer &gt; 0</result>
          </results>
        </action>
        <action id="32" plug-in="Standard.Timer.1" ><?xtml-editor x=1219 y=190 ?>
          <!--Set timer for B leg-->
          <timer xmlns="urn:www.pactolus.com:xtml:application" start="1" id="g_oCallLegs[1].nSessionTimerId" duration="nSessionTimer"/>
          <results >
            <result name="Default" link="5" stubbed="0"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_oCallLegs[1].strSessionExpires = Session.g_oCallLegs[1].nSessionTimer.toString() + "; refresher=uac" ;



Session.nSessionTimer = Session.g_oCallLegs[1].nSessionTimer / 2 + 10 ;



Server.logInfo("Sending refreshing reINVITEs to B leg each " + Session.nSessionTimer + " seconds") ;



]]></script>
          </scripts>
        </action>
        <action id="33" plug-in="Pactolus.Branch.1" ><?xtml-editor x=1033 y=791 ?>
          <results >
            <result name="Default" link="27" stubbed="1"/>
            <result name="try next proxy or GSX" link="35" stubbed="1" >bTryAgain == true</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.bTryAgain = false ;







if ( ++Session.idx < Session.g_oProxyList.length ) {



	Session.bTryAgain = true ;



}]]></script>
            <script language="javascript" timing="last" ><![CDATA[Session.g_oCallLegs[1].lTimeEnded = Server.getUTCTime() ;]]></script>
          </scripts>
        </action>
        <action id="34" plug-in="Pactolus.Branch.1" ><?xtml-editor x=542 y=656 ?>
          <results >
            <result name="Default" link="18" stubbed="0"/>
            <result name="bUseSessionTimer" link="35" stubbed="0" >bUseSessionTimer == true</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_oCallLegs[1].strRequestUri = Session.g_oProxyList[Session.idx] ;







Session.g_oCallLegs[1].strCallId = js_CreateUniqueCallId() ;



Session.g_oCallLegs[1].strRemoteUri = Session.g_oCallLegs[1].strRequestUri ;



Session.g_oCallLegs[1].strContact = Session.s_strLocalUri ;



	



if ( Session.g_oCallLegs[1].bRefresher ) {



	Session.strRefresher = "uac";



}



else {



	Session.strRefresher = "uas";



}







Session.g_oCallLegs[1].lTimeStart = Server.getUTCTime() ;







Session.g_oCallLegs[1].strTo = "" ;



Server.logInfo("Outdialing number: " + Session.g_oCallLegs[1].strOutdialDestNbr ) ;



]]></script>
          </scripts>
        </action>
        <action id="35" plug-in="Pactolus.Outdial.1" ><?xtml-editor x=759 y=641 ?>
          <!--outdial w/ SessionTimer-->
          <Outdial xmlns="urn:www.pactolus.com:xtml:sip-cc" calling-number="g_oCallLegs[0].strCallingNumber" called-number="g_oCallLegs[1].strOutdialDestNbr" preferred-carrier="" codec="-1" reliable-provisional-responses="1" timeout="s_nLongTimeout" returns="nReturnCode" ms-type="s_strMsType" calling-connect-type="0" calling-capability="0" from="g_oCallLegs[0].strFrom" via="" ingress-gateway="g_oCallLegs[0].strRemoteUri" session-timer-a="1" hold-a-first="0" interrupt-on-long-pound="0" session-timer-value-a="nSessionTimer" telephone-events="0" rtp-request-a="0" rtp-endpoint-a="" route-callingparty="g_oCallLegs[0].strRoute" record-route-callingparty="g_oCallLegs[0].strRecordRoute" contact-callingparty="g_oCallLegs[0].strContact" egress-gateway="g_oCallLegs[1].strRemoteUri" sdp-b="g_oCallLegs[1].strRemoteSdp" callid-b="g_oCallLegs[1].strCallId" cseq-b="g_oCallLegs[1].strCSeq" sip-status="strStatus" to-b="g_oCallLegs[1].strTo" from-b="g_oCallLegs[1].strFrom" session-timer-b="1" session-timer-value-b="nSessionTimer" backup-ss="" route="g_oCallLegs[1].strRoute" record-route="g_oCallLegs[1].strRecordRoute" contact="strBLegContact" rtp-request-b="0" rtp-endpoint-b="" refresher="strRefresher" remote-party-id="" play-ringback="1" language="g_oAccessLine.strLanguage" ringback-prompt="nRingBackPrompt" capability="1" ringback-codec="-1" packetization-period="g_oMS.intPacketizationPeriod" calling-packetization="" connection-id="" mgcp-call-id="" ms-sdp="" endpoint="" to="g_oCallLegs[0].strTo" callid-a="g_oCallLegs[0].strCallId" cseq-a="g_oCallLegs[0].strCSeq" sdp-a="g_oCallLegs[0].strRemoteSdp" >
            <additional-parameters >
              <privacy >g_oCallLegs[1].strPrivacy</privacy>
              <p-asserted-identity >g_oCallLegs[1].strPAssertedIdentity</p-asserted-identity>
            </additional-parameters>
          </Outdial>
          <results >
            <result name="Default" link="33" stubbed="0"/>
            <result name="Success" link="29" stubbed="1"/>
            <result name="Ring no answer"/>
            <result name="Busy" link="23" stubbed="0"/>
            <result name="Caller DTMF interrupt"/>
            <result name="Called party error"/>
            <result name="Calling party error"/>
            <result name="Other error"/>
            <result name="Resource unavailable"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_oCallLegs[1].bAttemptedToOutdial = true; 



Session.g_oCallLegs[1].bCurrentlyDialing = true ;



Session.g_oCallLegs[1].nState = Session.s_LEG_STATE_DIALING ;







/* set flag to write CDR at session end */



Session.g_oAPI.bWriteCDR = true ;







]]></script>
            <script language="javascript" timing="last" ><![CDATA[Session.g_oCallLegs[1].bCurrentlyDialing = false;







js_calculate_uri_and_route( false, "SIP/2.0", 



	Session.g_oCallLegs[1].strFrom.toString(), 



	Session.strBLegContact.toString(),



	Session.g_oCallLegs[1].strRecordRoute.toString(), 



	Session.g_oCallLegs[1].strRemoteUri, 



	Session.g_oCallLegs[1].strRoute ) ;



	







if( -1 != Session.strRefresher.indexOf("uas") ) {



	Session.g_oCallLegs[1].bRefresher = false ;



}



else {



	Session.g_oCallLegs[1].bRefresher = true ;



}







Session.g_oCallLegs[1].nSessionTimer = Session.nSessionTimer;



Session.g_oCallLegs[1].strSessionExpires = Session.nSessionTimer + "; refresher=" + Session.strRefresher;



Server.logInfo("Constructed B Leg Session Expires value from Response: " + Session.g_oCallLegs[1].strSessionExpires);







]]></script>
          </scripts>
        </action>
        <action id="36" plug-in="Pactolus.Branch.1" ><?xtml-editor x=800 y=154 ?>
          <!--set up IVR call values-->
          <results >
            <result name="Default" link="13" stubbed="0"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_oCallLegs[1].strOutdialDestNbr = Session.g_oAPI.strDestToSend = Session.g_oAPI.strDestReceived ;







Session.g_oProxyList[0] = Session.s_strNiuAddress + ";target=pcs_voip_ivr" ;



Session.g_oProxyList[0] += ";dept_id=" ;



Session.g_oProxyList[0] += Session.g_oAPI.lDeptId ;



Session.g_oProxyList[0] += ";ivr_id=" ;



Session.g_oProxyList[0] += Session.g_oAPI.nActionValueId ;







Session.g_bTryReceptionist = false;











]]></script>
          </scripts>
        </action>
        <action id="37" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=1045 y=42 ?>
          <!--Play Message and hang up-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;PlayMsgNumberAndHangup&quot;" return="" external-function="0" library="" >
            <parameter >g_oMS</parameter>
            <parameter >g_oCallLegs[0]</parameter>
            <parameter >nMsgNumber</parameter>
            <parameter >g_oAPI.strLanguage</parameter>
          </function>
          <results >
            <result name="Default" link="6" stubbed="0"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[//NEED NEW PROMPT FOR FAILED 911 CALL



Session.nMsgNumber = 375;]]></script>
          </scripts>
        </action>
        <action id="38" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=810 y=29 ?>
          <!--DirectCallerToMS-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;DirectCallerToMS&quot;" return="nReturnCode" external-function="1" library="lib_mediaserver.xml" >
            <parameter >g_oCallLegs[0]</parameter>
            <parameter >g_oMS</parameter>
          </function>
          <results >
            <result name="Default" link="6" stubbed="0"/>
            <result name="success" link="37" stubbed="0" >nReturnCode == 0</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_oCallLegs[0].strContent = Session.g_oCallLegs[0].strRemoteSdp;]]></script>
          </scripts>
        </action>
        <action id="42" plug-in="Pactolus.SipResponse.1" ><?xtml-editor x=236 y=270 ?>
          <!--SIP/2.0 180 Ringing-->
          <sip-response xmlns="urn:www.pactolus.com:xtml:sip" remove-via="0" reliable="0" increment-cseq-first="0" increment-cseq-last="0" >
            <call-id >g_oCallLegs[0].strCallId</call-id>
            <cseq >g_oCallLegs[0].strCSeq</cseq>
            <from >g_oCallLegs[0].strFrom</from>
            <status >"SIP/2.0 180 Ringing"</status>
            <to >g_oCallLegs[0].strTo</to>
            <via >g_oCallLegs[0].strVia</via>
          </sip-response>
          <results >
            <result name="Default" link="13" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[//in the 911 scenario, we are not sending sdp until the final response, so send a Ring tone now.]]></script>
          </scripts>
        </action>
      </actions>
    </function>
    <function name="ReInvite" start="28" event="ReInvite" returns="void" >
      <parameters >
        <parameter name="oSipMsg" type="object" pass="byref"/>
      </parameters>
      <local-vars >
        <var name="nIdxA" type="i4" >0</var>
        <var name="nIdxB" type="i4" >0</var>
        <var name="bUnknownCallId" type="boolean" >0</var>
        <var name="nFinalStatus" type="i4" >0</var>
        <var name="bAlegHungUp" type="boolean" >0</var>
        <var name="bConnected" type="boolean" >0</var>
        <var name="bFalse" type="boolean" >0</var>
        <var name="bTrue" type="boolean" >1</var>
        <var name="bBLegConnected" type="boolean" >0</var>
        <var name="bInviteOnHold" type="boolean" >0</var>
        <var name="nSessionTimer" type="i4" >0</var>
        <var name="bReInvite" type="boolean" >0</var>
        <var name="nSessionTimerA" type="i4" >0</var>
        <var name="nSessionTimerB" type="i4" >0</var>
        <var name="strSessionExpires" type="string" ></var>
        <var name="bReplaces" type="boolean" >0</var>
        <var name="oDummy" type="object" ></var>
        <var name="bReferrerConnected" type="boolean" >0</var>
        <var name="nReturnValue" type="i4" >0</var>
        <var name="oReplacedCallLeg" type="object" ></var>
      </local-vars>
      <actions >
        <action id="28" plug-in="Pactolus.Branch.1" ><?xtml-editor x=15 y=53 ?>
          <results >
            <result name="Default" link="49" stubbed="0"/>
            <result name="unknown callid" link="38" stubbed="0" >bUnknownCallId == true</result>
            <result name="Call Leg B not set up yet" link="41" stubbed="0" >bBLegConnected == false</result>
            <result name="reInvite" link="45" stubbed="0" >bReInvite == true</result>
            <result name="attended transfer" link="46" stubbed="0" >bReplaces == true</result>
            <result name="Invite on hold = MOH" link="52" stubbed="0" >bInviteOnHold == true



AND oSipMsg.strCallId == g_oCallLegs[0].strCallId



AND g_oAPI.strMOHFlag == "T"</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.bUnknownCallId = false ;

Session.bReplaces = false;

var callId = Session.oSipMsg.strCallId;

if( Session.oSipMsg.strCallId != Session.g_oCallLegs[0].strCallId &&

	Session.oSipMsg.strCallId != Session.g_oCallLegs[1].strCallId ) {



	if ( 0 == Session.oSipMsg.strReplaces.length ) {	

		Session.bUnknownCallId = true ;

	}

	else {

		//this INVITE is meant to replace an existing dialog. Pull out the call id and 

		// ensure that it matches one of ours.

		var i = Session.oSipMsg.strReplaces.toString().indexOf(";");

		callId = Session.oSipMsg.strReplaces.toString().substring(0, i);

		if ( callId == Session.g_oCallLegs[0].strCallId ||

		     callId == Session.g_oCallLegs[1].strCallId ) {

		     Session.bReplaces = true;

		     Server.logInfo("Received INVITE with Replaces header for call id: " + callId);

		     

		     if( callId == Session.g_oCallLegs[0].strCallId ) {

		     	Server.logInfo("The new call leg will replace the A leg") ;

		     	Session.nIdxA = 0 ;

		     	Session.nIdxB = 1 ;

		     }

		     else {

		     	Server.logInfo("The new call leg will replace the B leg") ;

		     	Session.nIdxA = 1 ;

		     	Session.nIdxB = 0 ;

		     }

		     /* save call leg info so we can send a BYE after the transfer is complete */

		     Session.oReplacedCallLeg = Session.g_oCallLegs[Session.nIdxA] ;

		     

		     /* we are the UAS on this new leg */

	     	 Session.g_oCallLegs[Session.nIdxA].bUac = false ;

		 }

	}

}



/*if we receive a reInvite while we are trying to play a prompt to the A leg

	 (ie not connected to a far end B, simply return our own Sdp). */

if ( true == Session.g_oCallLegs[1].bConnected ) {

	Session.bBLegConnected = true ;

}



/* determine which leg we're sending on, and whether we are a UAC or a UAS on that leg */

if( !Session.bReplaces && callId == Session.g_oCallLegs[0].strCallId ) {

	Session.nIdxA = 0 ;

	Session.nIdxB = 1 ;

}

else if( !Session.bReplaces ) {

	Session.nIdxA = 1 ;

	Session.nIdxB = 0 ;

}



Session.g_oCallLegs[Session.nIdxA].strRemoteCSeq = Session.oSipMsg.strCSeq ;

Session.g_oCallLegs[Session.nIdxA].strVia = Session.oSipMsg.strVia ;



if( Session.oSipMsg.strContent == Session.g_oCallLegs[Session.nIdxA].strRemoteSdp ) {

	Server.logInfo("Received a session timer reINVITE") ;

	Session.bReInvite = true ;

	return ;

}



if( -1 != Session.oSipMsg.strContent.toString().indexOf("0.0.0.0") ||

	-1 != Session.oSipMsg.strContent.toString().indexOf("a=sendonly") ||

	-1 != Session.oSipMsg.strContent.toString().indexOf("a=inactive") ) {

	Session.bInviteOnHold = true ;

}



Server.logInfo("New SDP: " + Session.oSipMsg.strContent ) ;

Server.logInfo("Old SDP: " + Session.g_oCallLegs[Session.nIdxA].strRemoteSdp ) ;



//save the last negotiated sdp in case this reINVITE fails. 

Session.g_oCallLegs[Session.nIdxA].strLastGoodSdp = Session.g_oCallLegs[Session.nIdxA].strRemoteSdp;

Session.g_oCallLegs[Session.nIdxA].strRemoteSdp = Session.oSipMsg.strContent ;

Session.g_oCallLegs[Session.nIdxA].strRemoteSdpForRefer = Session.oSipMsg.strContent ;



if ( -1 != Session.oSipMsg.strSessionExpires.toString().indexOf("uas")) {

	Session.g_oCallLegs[Session.nIdxA].bRefresher = true ;

}

else {

	Session.g_oCallLegs[Session.nIdxA].bRefresher = false;

}



Session.nSessionTimerA = Clib.atoi( Session.oSipMsg.strSessionExpires ) ;

Session.nSessionTimerB = Clib.atoi( Session.g_oCallLegs[Session.nIdxB].strSessionExpires ) ;



var bOnNet = ("T" == Session.g_oAPI.oRoute[Session.nIdxB].strDestOnNet ? true : false );

if ( !bOnNet ){

	var from = new SipFrom(Session.g_oCallLegs[Session.nIdxB].strFrom.toString());

	var fromPAI = js_translate_destination_broadband( Session.s_strCarrierName,

				from.url.user, 

				Session.g_oAPI.nOrigCountryId,

				bOnNet, 

			 	Session.g_oAPI.strAniReceived ) ;

	Session.g_oCallLegs[Session.nIdxB].strPAssertedIdentity = "<sip:" + fromPAI + "@" + from.url.host + ">";



	Server.logInfo("Setting PAI header for route id: "+Session.nIdxB);

	Server.logInfo("PAI: " + Session.g_oCallLegs[Session.nIdxB].strPAssertedIdentity);

}















]]></script>
          </scripts>
        </action>
        <action id="23" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=1012 y=158 ?>
          <!--Connected to Called Party-->
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.enableEvents(true) ;







Session.g_STATE = Session.s_STATE_CONNECTED_TO_CALLED ;



]]></script>
          </scripts>
        </action>
        <action id="27" plug-in="Standard.EndSession.1" ><?xtml-editor x=784 y=673 ?>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_oCallLegs[1].nTerminationReason = Session.s_TR_REINVITE_FAILED ;



]]></script>
          </scripts>
        </action>
        <action id="38" plug-in="Pactolus.SipResponse.1" ><?xtml-editor x=257 y=202 ?>
          <!--SIP/2.0 481 Call Leg/Transaction Does Not Exist-->
          <sip-response xmlns="urn:www.pactolus.com:xtml:sip" remove-via="0" reliable="0" increment-cseq-first="0" increment-cseq-last="0" >
            <call-id >oSipMsg.strCallId</call-id>
            <cseq >oSipMsg.strCSeq</cseq>
            <from >oSipMsg.strFrom</from>
            <status >"SIP/2.0 481 Call Leg/Transaction Does Not Exist"</status>
            <to >oSipMsg.strTo</to>
            <via >oSipMsg.strVia</via>
          </sip-response>
          <results >
            <result name="Default" link="40" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
        </action>
        <action id="39" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=580 y=34 ?>
          <!--ProxyCallWithoutRtpRelay-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;ProxyCallWithoutRtpRelay&quot;" return="bConnected" external-function="1" library="lib_voip.xml" >
            <parameter >g_oCallLegs[nIdxA]</parameter>
            <parameter >g_oCallLegs[nIdxB]</parameter>
            <parameter >30</parameter>
            <parameter >nSessionTimerA</parameter>
            <parameter >g_oCallLegs[nIdxA].bRefresher</parameter>
            <parameter >nSessionTimerB</parameter>
            <parameter >g_oCallLegs[nIdxB].bRefresher</parameter>
            <parameter >bTrue</parameter>
            <parameter >nFinalStatus</parameter>
            <parameter >bAlegHungUp</parameter>
          </function>
          <results >
            <result name="Default" link="48" stubbed="1"/>
            <result name="connected" link="44" stubbed="1" >bConnected == true</result>
            <result name="reinvite failed, still connected" link="47" stubbed="1" >bConnected == false



AND g_oCallLegs[0].bConnected == true



AND g_oCallLegs[1].bConnected == true</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[



]]></script>
            <script language="javascript" timing="last" ><![CDATA[if( !Session.bInviteOnHold ) {



	Session.g_oCallLegs[Session.nIdxB].strRemoteSdpForRefer = Session.g_oCallLegs[Session.nIdxB].strRemoteSdp ;



}



]]></script>
          </scripts>
        </action>
        <action id="40" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=454 y=341 ?>
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
        </action>
        <action id="41" plug-in="Pactolus.SipResponse.1" ><?xtml-editor x=267 y=394 ?>
          <!--200 OK with our sdp - not yet connected to B-->
          <sip-response xmlns="urn:www.pactolus.com:xtml:sip" remove-via="0" reliable="0" increment-cseq-first="0" increment-cseq-last="0" >
            <call-id >oSipMsg.strCallId</call-id>
            <contact >s_strLocalUri</contact>
            <content >g_oMS.strContent</content>
            <content-type >g_oMS.strContentType</content-type>
            <cseq >oSipMsg.strCSeq</cseq>
            <from >oSipMsg.strFrom</from>
            <status >"SIP/2.0 200 OK"</status>
            <to >oSipMsg.strTo</to>
            <via >oSipMsg.strVia</via>
          </sip-response>
          <results >
            <result name="Default" link="40" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("Not connected to B. Responding with our current SDP.");]]></script>
          </scripts>
        </action>
        <action id="42" plug-in="Standard.Timer.1" ><?xtml-editor x=1028 y=324 ?>
          <!--Set timer for B leg-->
          <timer xmlns="urn:www.pactolus.com:xtml:application" start="1" id="g_oCallLegs[nIdxB].nSessionTimerId" duration="nSessionTimer"/>
          <results >
            <result name="Default" link="23" stubbed="0"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_oCallLegs[Session.nIdxB].nSessionTimer = Session.nSessionTimerB ;



Session.g_oCallLegs[Session.nIdxB].bRefresher = true ;



Session.g_oCallLegs[Session.nIdxB].strSessionExpires = Session.nSessionTimerB.toString() + "; refresher=uac" ;



Session.nSessionTimer = Session.nSessionTimerB / 2;



Server.logInfo("Sending refreshing reINVITEs to B leg each " + Session.nSessionTimer + " seconds") ;



]]></script>
          </scripts>
        </action>
        <action id="43" plug-in="Standard.Timer.1" ><?xtml-editor x=773 y=320 ?>
          <!--Stop timer for B leg-->
          <timer xmlns="urn:www.pactolus.com:xtml:application" start="0" id="g_oCallLegs[nIdxB].nSessionTimerId" duration=""/>
          <results >
            <result name="Default" link="42" stubbed="0"/>
          </results>
        </action>
        <action id="44" plug-in="Pactolus.Branch.1" ><?xtml-editor x=644 y=215 ?>
          <results >
            <result name="Default" link="23" stubbed="0"/>
            <result name="switch - we now refresh" link="43" stubbed="0" >g_oCallLegs[nIdxB].bRefresher == true</result>
          </results>
        </action>
        <action id="45" plug-in="Pactolus.SipResponse.1" ><?xtml-editor x=264 y=584 ?>
          <!--200 OK with B's SDP-->
          <sip-response xmlns="urn:www.pactolus.com:xtml:sip" remove-via="0" reliable="0" increment-cseq-first="0" increment-cseq-last="0" >
            <call-id >oSipMsg.strCallId</call-id>
            <contact >s_strLocalUri</contact>
            <content >g_oCallLegs[nIdxB].strRemoteSdp</content>
            <content-type >"application/sdp"</content-type>
            <cseq >oSipMsg.strCSeq</cseq>
            <from >oSipMsg.strFrom</from>
            <require >"timer"</require>
            <session-expires >strSessionExpires</session-expires>
            <status >"SIP/2.0 200 OK"</status>
            <to >oSipMsg.strTo</to>
            <via >oSipMsg.strVia</via>
          </sip-response>
          <results >
            <result name="Default" link="23" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.strSessionExpires = String( Clib.atoi( Session.oSipMsg.strSessionExpires ) ) + "; refresher=uac" ;]]></script>
          </scripts>
        </action>
        <action id="46" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=278 y=758 ?>
          <!--TransferCall-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;TransferCall&quot;" return="bConnected" external-function="1" library="lib_voip.xml" >
            <parameter >g_oCallLegs[0]</parameter>
            <parameter >g_oCallLegs[1]</parameter>
            <parameter >oSipMsg</parameter>
            <parameter >s_strLocalUri</parameter>
            <parameter >g_oAPI</parameter>
            <parameter >g_oAccessLine</parameter>
            <parameter >s_strNiuAddress</parameter>
            <parameter >s_strPrimarySoftswitch</parameter>
            <parameter >s_strBackupSoftswitch</parameter>
            <parameter >s_strCarrierName</parameter>
            <parameter >s_nCaleaDelay</parameter>
            <parameter >g_oRate</parameter>
            <parameter >g_oSub</parameter>
            <parameter >bReferrerConnected</parameter>
            <parameter >oDummy</parameter>
          </function>
          <results >
            <result name="Default" link="27" stubbed="0"/>
            <result name="bConnected" link="53" stubbed="0" >bConnected == true</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[//Session.g_oCallLegs[2] = Session.g_oCallLegs[Session.nIdxA];



//Session.g_oCallLegs[1].bReferredTo = true;



Session.g_oCallLegs[Session.nIdxA].strTo = Session.g_oCallLegs[Session.nIdxA].strOriginalTo = Session.oSipMsg.strTo;



Session.g_bAttendedTransfer = true ;











]]></script>
            <script language="javascript" timing="last" ><![CDATA[Session.g_oCallLegs[Session.nIdxA].strFrom = Session.oSipMsg.strFrom;



Session.g_oCallLegs[Session.nIdxA].strCallId = Session.oSipMsg.strCallId;







js_calculate_uri_and_route( true, "SIP/2.0", 



	Session.oSipMsg.strFrom.toString(), 



	Session.oSipMsg.strContact.toString(), 



	Session.oSipMsg.strRecordRoute.toString(), 



	Session.g_oCallLegs[Session.nIdxA].strRemoteUri, 



	Session.g_oCallLegs[Session.nIdxA].strRoute ) ;



Session.g_oCallLegs[Session.nIdxA].strRequestUri = Session.g_oCallLegs[Session.nIdxA].strRemoteUri ;







Session.g_oCallLegs[Session.nIdxB].strCallType = Session.s_CT_TRANSFER;







Session.g_bDialogReplaced = true;







Server.enableEvents(true);











]]></script>
          </scripts>
        </action>
        <action id="47" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=787 y=116 ?>
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logError("reINVITE failed. Returning with last negotiated INVITE parameters.");







Session.g_oCallLegs[Session.nIdxA].strRemoteSdp = Session.g_oCallLegs[Session.nIdxA].strLastGoodSdp ;]]></script>
          </scripts>
        </action>
        <action id="48" plug-in="Standard.EndSession.1" ><?xtml-editor x=788 y=50 ?></action>
        <action id="49" plug-in="Pactolus.Branch.1" ><?xtml-editor x=253 y=53 ?>
          <results >
            <result name="Default" link="39" stubbed="0"/>
            <result name="g_bPlayingMOH" link="50" stubbed="0" >g_bPlayingMOH == true</result>
          </results>
        </action>
        <action id="50" plug-in="Pactolus.MGCPDelete.1" ><?xtml-editor x=452 y=152 ?>
          <dlcx xmlns="urn:www.pactolus.com:xtml:media" connection-id="g_oMS.strConnectionId" endpoint="g_oMS.strEndPoint" callid="g_oMS.strCallId" timeout="5" returns="" ms-type="g_oMS.strType" >
            <parameters >
              <quarantine step="0" loop="0" process="0" discard="0"/>
              <events ><![CDATA[]]></events>
              <signals ><![CDATA[]]></signals>
              <digit-map ><![CDATA[]]></digit-map>
            </parameters>
          </dlcx>
          <results >
            <result name="Default" link="39" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("Deleting MOH media server connection");



Session.g_bPlayingMOH = false;]]></script>
          </scripts>
        </action>
        <action id="51" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=488 y=913 ?>
          <!--bbtel_moh-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;bbtel_moh&quot;" return="nReturnValue" external-function="1" library="lib_voip.xml" >
            <parameter >g_oCallLegs[1]</parameter>
            <parameter >g_oMS</parameter>
            <parameter >g_oAPI</parameter>
            <parameter >g_oAccessLine.strLanguage</parameter>
            <parameter >g_nInterruptTimer</parameter>
            <parameter >g_nInterruptPlays</parameter>
            <parameter >0</parameter>
          </function>
          <results >
            <result name="Default" link="40" stubbed="0"/>
            <result name="bConnected" link="40" stubbed="0" >bConnected == true</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_bPlayingMOH = true;
]]></script>
            <script language="javascript" timing="last" ><![CDATA[if ( -99 == Session.nReturnValue ) {



	Session.g_bPlayingMOH = false;



}]]></script>
          </scripts>
        </action>
        <action id="52" plug-in="Pactolus.SipResponse.1" ><?xtml-editor x=256 y=895 ?>
          <!--200 OK with B's SDP-->
          <sip-response xmlns="urn:www.pactolus.com:xtml:sip" remove-via="0" reliable="0" increment-cseq-first="0" increment-cseq-last="0" >
            <call-id >oSipMsg.strCallId</call-id>
            <contact >s_strLocalUri</contact>
            <content >g_oCallLegs[nIdxB].strRemoteSdp</content>
            <content-type >"application/sdp"</content-type>
            <cseq >oSipMsg.strCSeq</cseq>
            <from >oSipMsg.strFrom</from>
            <session-expires >strSessionExpires</session-expires>
            <status >"SIP/2.0 200 OK"</status>
            <to >oSipMsg.strTo</to>
            <via >oSipMsg.strVia</via>
          </sip-response>
          <results >
            <result name="Default" link="51" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.strSessionExpires = String( Clib.atoi( Session.oSipMsg.strSessionExpires ) ) + "; refresher=uac" ;]]></script>
          </scripts>
        </action>
        <action id="53" plug-in="Pactolus.SipBye.1" ><?xtml-editor x=810 y=760 ?>
          <!--to replaced call leg-->
          <sip-bye xmlns="urn:www.pactolus.com:xtml:sip" add-record-route="0" add-via="1" handle-responses="0" increment-cseq-first="0" increment-cseq-last="0" >
            <call-id >oReplacedCallLeg.strCallId</call-id>
            <cseq >oReplacedCallLeg.strCSeq</cseq>
            <from >oReplacedCallLeg.strTo</from>
            <request-uri >oReplacedCallLeg.strRemoteUri</request-uri>
            <to >oReplacedCallLeg.strFrom</to>
          </sip-bye>
          <results >
            <result name="Default" link="23" stubbed="0"/>
            <result name="Success"/>
            <result name="Client error (4xx)"/>
            <result name="Server error (5xx)"/>
            <result name="Global error (6xx)"/>
            <result name="Timeout"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("Sending a BYE to call leg that we just replaced as a result of an attended transfer") ;]]></script>
          </scripts>
        </action>
      </actions>
    </function>
    <function name="OnRefer" start="42" event="OnRefer" returns="void" >
      <parameters >
        <parameter name="strAccept" type="string" pass="byref"/>
        <parameter name="strAcceptEncoding" type="string" pass="byref"/>
        <parameter name="strAcceptLanguage" type="string" pass="byref"/>
        <parameter name="strAllow" type="string" pass="byref"/>
        <parameter name="strAuthorization" type="string" pass="byref"/>
        <parameter name="strCallId" type="string" pass="byref"/>
        <parameter name="strContact" type="string" pass="byref"/>
        <parameter name="strContent" type="string" pass="byref"/>
        <parameter name="strContentDisposition" type="string" pass="byref"/>
        <parameter name="strContentType" type="string" pass="byref"/>
        <parameter name="strCSeq" type="string" pass="byref"/>
        <parameter name="strDate" type="string" pass="byref"/>
        <parameter name="strEncryption" type="string" pass="byref"/>
        <parameter name="strErrorInfo" type="string" pass="byref"/>
        <parameter name="strFrom" type="string" pass="byref"/>
        <parameter name="strMaxForwards" type="string" pass="byref"/>
        <parameter name="strMIMEVersion" type="string" pass="byref"/>
        <parameter name="strOrganization" type="string" pass="byref"/>
        <parameter name="strProxyAuthorization" type="string" pass="byref"/>
        <parameter name="strProxyRequire" type="string" pass="byref"/>
        <parameter name="strRecordRoute" type="string" pass="byref"/>
        <parameter name="strRequestURI" type="string" pass="byref"/>
        <parameter name="strReferTo" type="string" pass="byref"/>
        <parameter name="strReferredBy" type="string" pass="byref"/>
        <parameter name="strRequire" type="string" pass="byref"/>
        <parameter name="strResponseKey" type="string" pass="byref"/>
        <parameter name="strRoute" type="string" pass="byref"/>
        <parameter name="strSupported" type="string" pass="byref"/>
        <parameter name="strTimestamp" type="string" pass="byref"/>
        <parameter name="strTo" type="string" pass="byref"/>
        <parameter name="strUserAgent" type="string" pass="byref"/>
        <parameter name="strVia" type="string" pass="byref"/>
      </parameters>
      <local-vars >
        <var name="nIdxReferred" type="i4" >0</var>
        <var name="nIdxReferrer" type="i4" >0</var>
        <var name="strFromOnReferLeg" type="string" ></var>
        <var name="strToOnReferLeg" type="string" ></var>
        <var name="oSipResponse" type="object" ></var>
        <var name="strEvent" type="string" ></var>
        <var name="bCallIdMatch" type="boolean" >0</var>
        <var name="bGotResponse" type="boolean" >0</var>
        <var name="gGotAck" type="boolean" >0</var>
        <var name="bGotAck" type="boolean" >0</var>
        <var name="bGotByeFromReferrer" type="boolean" >0</var>
        <var name="bGotByeFromReferred" type="boolean" >0</var>
        <var name="nStatus" type="i4" >0</var>
        <var name="nTimeout" type="i4" >0</var>
        <var name="strMyVia" type="string" ></var>
        <var name="strFromOnReferredLeg" type="string" ></var>
        <var name="strToOnReferredLeg" type="string" ></var>
        <var name="bGotCancel" type="boolean" >0</var>
        <var name="strSipFragment" type="string" ></var>
        <var name="bNewSdp" type="boolean" >0</var>
        <var name="bGotResponseFromReferred" type="boolean" >0</var>
        <var name="bGotFinalResponseFromReferredTo" type="boolean" >0</var>
        <var name="bGotFinalResponseFromReferred" type="boolean" >0</var>
        <var name="bGotInvite" type="boolean" >0</var>
        <var name="oSipRequest" type="object" ></var>
        <var name="strViaOnReferredLegReInvite" type="string" ></var>
        <var name="bGotResponseC4" type="boolean" >0</var>
        <var name="bGotResponseC5" type="boolean" >0</var>
        <var name="strViaFromProxyCancelRequest" type="string" ></var>
        <var name="strViaOnC5" type="string" ></var>
        <var name="strViaOnC4" type="string" ></var>
        <var name="nReturnCode" type="i4" >0</var>
        <var name="bConnected" type="boolean" >0</var>
        <var name="bReverseToFromOnReferrer" type="boolean" >0</var>
        <var name="oDummy" type="object" ></var>
        <var name="bReplaces" type="boolean" >0</var>
        <var name="bInvalidReferTo" type="boolean" >0</var>
        <var name="oNotifyMsg" type="object" ></var>
        <var name="strResponseStatus" type="string" ></var>
        <var name="strEventRcvd" type="string" ></var>
        <var name="oAPI_orig" type="object" ></var>
        <var name="bReferrerConnected" type="boolean" >0</var>
        <var name="oCLegAPI" type="object" ></var>
        <var name="oReplacedCallLeg" type="object" ></var>
      </local-vars>
      <actions >
        <action id="42" plug-in="Pactolus.Branch.1" ><?xtml-editor x=20 y=20 ?>
          <results >
            <result name="Default" link="43" stubbed="0"/>
            <result name="Invalid ReferTo header" link="43" stubbed="0" >bInvalidReferTo == true</result>
            <result name="valid state for transfer" link="57" stubbed="0" >g_STATE == s_STATE_CONNECTED_TO_CALLED</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[if ( -1 != Session.strReferTo.indexOf("Replaces=")) {



	Session.bReplaces = true;



	Session.g_bAttendedTransfer = true;



}







Session.strResponseStatus = "SIP/2.0 488 Not Acceptable";







if ( 0 == Session.strReferTo.length ) {



	Session.strResponseStatus = "SIP/2.0 400 Bad Request";



}











]]></script>
          </scripts>
        </action>
        <action id="43" plug-in="Pactolus.SipResponse.1" ><?xtml-editor x=264 y=21 ?>
          <!--488 Not Acceptable-->
          <sip-response xmlns="urn:www.pactolus.com:xtml:sip" remove-via="0" reliable="0" increment-cseq-first="0" increment-cseq-last="0" >
            <call-id >strCallId</call-id>
            <cseq >strCSeq</cseq>
            <from >strFrom</from>
            <status >strResponseStatus</status>
            <to >strTo</to>
            <via >strVia</via>
          </sip-response>
          <results >
            <result name="Default" link="44" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
        </action>
        <action id="44" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=455 y=64 ?>
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
        </action>
        <action id="45" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=537 y=299 ?>
          <!--Connected to Called Party-->
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_STATE = Session.s_STATE_CONNECTED_TO_CALLED ;



Session.g_oCallLegs[1].bConnected = true;



















]]></script>
          </scripts>
        </action>
        <action id="46" plug-in="Standard.EndSession.1" ><?xtml-editor x=527 y=187 ?>
          <!--Not connected to Called Party-->
        </action>
        <action id="47" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=59 y=559 ?>
          <!--Transfer Call-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;TransferCall&quot;" return="bConnected" external-function="1" library="lib_voip.xml" >
            <parameter >g_oCallLegs[0]</parameter>
            <parameter >g_oCallLegs[1]</parameter>
            <parameter >oSipRequest</parameter>
            <parameter >s_strLocalUri</parameter>
            <parameter >g_oAPI</parameter>
            <parameter >g_oAccessLine</parameter>
            <parameter >s_strNiuAddress</parameter>
            <parameter >s_strPrimarySoftswitch</parameter>
            <parameter >s_strBackupSoftswitch</parameter>
            <parameter >s_strCarrierName</parameter>
            <parameter >s_nCaleaDelay</parameter>
            <parameter >g_oRate</parameter>
            <parameter >g_oSub</parameter>
            <parameter >bReferrerConnected</parameter>
            <parameter >oCLegAPI</parameter>
          </function>
          <results >
            <result name="Default" link="48" stubbed="0"/>
            <result name="Connected" link="59" stubbed="0" >bConnected == true</result>
            <result name="Transfer rejected" link="43" stubbed="1" >bConnected == false



AND g_oCallLegs[0].bConnected == true</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_oAPI.strCarrierName = Session.s_strCarrierName ;



/* for attended transfer, save callid of call leg being replaced so we can handle a BYE later for it */

if( Session.bReplaces ) {

	Session.g_strReplacedCallId = Session.strCallId ;

	Session.oReplacedCallLeg = Session.g_oCallLegs[0] ;

}





/* Save SIP Request Info */



Session.oSipRequest.strTo = Session.strTo ;



Session.oSipRequest.strFrom = Session.strFrom ;



Session.oSipRequest.strContact = Session.strContact ;



Session.oSipRequest.strRoute = Session.strRoute ;



Session.oSipRequest.strRequestUri = Session.strRequestURI ;



Session.oSipRequest.strCallId = Session.strCallId ;



Session.oSipRequest.strCSeq = Session.strCSeq ;



Session.oSipRequest.strVia = Session.strVia ;



Session.oSipRequest.strMaxForwards = Session.strMaxForwards ;



Session.oSipRequest.strRecordRoute = Session.strRecordRoute ;



Session.oSipRequest.strReferredBy = Session.strReferredBy ;



Session.oSipRequest.strReferTo = Session.strReferTo ;







Session.g_oCallLegs[1].strRemoteSdp = Session.g_oCallLegs[1].strRemoteSdpForRefer; 



/* dh: this information is used to construct the Diversion header, so we need to use a number that

	is a billing telephone number given by the carrier to the network service provider to use.

	Q: what if the ANI used here is an extension??

*/

Session.g_oCallLegs[1].strReferredBy = "<sip:" + Session.g_oAPI.strAniToSend + "@" + Server.sipAddress + ">" ;



Session.g_STATE = Session.s_STATE_TRANSFERRING_CALL ;







/* DH: if we're using shared-use billing, and creating a new call leg by doing a blind transfer, 



	then the new call leg will have its own billing id.



	If we're doing an attended transfer, then we're not creating a new call leg, we're simply



	moving the A leg of this call to a new destination.  We just keep billing this leg.



*/



if( !Session.g_bAttendedTransfer ) {



	Session.g_oSub.lBillingSessionId = Session.g_oSub.lReservationId = 0 ;







	//save Referrer's info for CDRs



	Session.g_oCallLegs[2] = Session.g_oCallLegs[0] ;



	Session.oAPI_orig = Session.g_oAPI ;



	Session.oRate_orig = Session.g_oRate;



	Session.oSub_orig = Session.g_oSub;



}



]]></script>
            <script language="javascript" timing="last" ><![CDATA[if ( Session.bConnected ) {



	if( !Session.g_bAttendedTransfer ) {



		Session.g_oCallLegs[0].lTimeAnswered = Server.getUTCTime();



	}







	/*  If the blind transfer was successful, we have now initiated two outbound call legs, 



		both of which are still up, and we'll need to write CDRs for both at call end.



		So I'm using these "_B" data structures to save information about the original



		outbound call leg, and I will bill that at call end.



		Note: before this, you could initiate a call to an off-net billable destination,



		then immediately transfer it to an extension next to you, and stop the billing.



		This fixes that gap.



	*/



	if ( !Session.g_bAttendedTransfer && !Session.g_bDialogReplaced ) {



		Session.g_bWriteBLegCDR = true;



		Session.g_oAPI_B = Session.oAPI_orig ;



		Session.g_oSub_B = Session.oSub_orig ;



		Session.g_oRate_B = Session.oRate_orig ;		



		Session.oAPI_orig.intOrigCountryId = Session.oAPI_orig.nOrigCountryId;



	}



}



else {

	Session.g_strReplacedCallId = "" ;

	Session.strResponseStatus = "SIP/2.0 503 Service Unavailable";



}



Server.logInfo("Returning from Transfer Call function with Connection status: " + Session.bConnected) ;



Server.logInfo("Call ID for Call leg[0]: " + Session.g_oCallLegs[0].strCallId + ", Connected status: " + Session.g_oCallLegs[0].bConnected) ;



Server.logInfo("Call ID for Call leg[1]: " + Session.g_oCallLegs[1].strCallId + ", Connected status: " + Session.g_oCallLegs[1].bConnected) ;







Server.enableEvents(true);]]></script>
          </scripts>
        </action>
        <action id="48" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=299 y=183 ?>
          <!--psAPIProcCallCompletion-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;psAPIProcCallCompletion&quot;" return="nReturnCode" external-function="1" library="lib_APISce.xml" >
            <parameter >oAPI_orig</parameter>
            <parameter >oSub_orig</parameter>
            <parameter >g_oCallLegs[2]</parameter>
            <parameter >g_oCallLegs[1]</parameter>
            <parameter >oRate_orig</parameter>
            <parameter >oDummy</parameter>
            <parameter >oDummy</parameter>
          </function>
          <results >
            <result name="Default" link="46" stubbed="0"/>
            <result name="bConnected" link="45" stubbed="0" >bConnected == true</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_oCallLegs[1].lTimeEnded = Server.getUTCTime() ;



Session.oAPI_orig.lPlatformSessionStartTime = Session.g_oCallLegs[1].lTimeStart; 



Session.oAPI_orig.nTerminationReason = Session.g_oCallLegs[1].nTerminationReason = Session.s_TR_CALLING_PARTY_HANGUP ;



Session.oAPI_orig.intOrigCountryId = Session.oAPI_orig.nOrigCountryId;































]]></script>
            <script language="javascript" timing="last" ><![CDATA[if ( 0 != Session.nReturnCode ) {



	Server.logError("Failed to write CDR for Referring Party") ;



}







Server.enableEvents(true);]]></script>
          </scripts>
        </action>
        <action id="57" plug-in="Pactolus.Branch.1" ><?xtml-editor x=5 y=176 ?>
          <results >
            <result name="Default" link="47" stubbed="0"/>
            <result name="g_bPlayingMOH" link="58" stubbed="0" >g_bPlayingMOH == true</result>
          </results>
        </action>
        <action id="58" plug-in="Pactolus.MGCPDelete.1" ><?xtml-editor x=110 y=290 ?>
          <dlcx xmlns="urn:www.pactolus.com:xtml:media" connection-id="g_oMS.strConnectionId" endpoint="g_oMS.strEndPoint" callid="g_oMS.strCallId" timeout="5" returns="" ms-type="g_oMS.strType" >
            <parameters >
              <quarantine step="0" loop="0" process="0" discard="0"/>
              <events ><![CDATA[]]></events>
              <signals ><![CDATA[]]></signals>
              <digit-map ><![CDATA[]]></digit-map>
            </parameters>
          </dlcx>
          <results >
            <result name="Default" link="47" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("Deleting MOH media server connection");



Session.g_bPlayingMOH = false;]]></script>
          </scripts>
        </action>
        <action id="59" plug-in="Pactolus.SipBye.1" ><?xtml-editor x=457 y=555 ?>
          <!--to replaced call leg-->
          <sip-bye xmlns="urn:www.pactolus.com:xtml:sip" add-record-route="0" add-via="1" handle-responses="0" increment-cseq-first="1" increment-cseq-last="0" >
            <call-id >oReplacedCallLeg.strCallId</call-id>
            <cseq >oReplacedCallLeg.strCSeq</cseq>
            <from >oReplacedCallLeg.strTo</from>
            <request-uri >oReplacedCallLeg.strRemoteUri</request-uri>
            <to >oReplacedCallLeg.strFrom</to>
          </sip-bye>
          <results >
            <result name="Default" link="45" stubbed="0"/>
            <result name="Success"/>
            <result name="Client error (4xx)"/>
            <result name="Server error (5xx)"/>
            <result name="Global error (6xx)"/>
            <result name="Timeout"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("Sending a BYE to call leg that we just replaced as a result of an attended transfer") ;]]></script>
          </scripts>
        </action>
      </actions>
      <text-objects >
        <text-object x-coord="631" y-coord="21" width="250" height="98" text="First, check to make sure the call is in a state where a transfer is allowed -- i.e. call is stable, and we are not currently already doing a transfer" font-name="Times New Roman" size="-16" red="0" green="0" blue="0" weight="0" underline="0" strikeout="0" point-size="12" italic="0"/>
      </text-objects>
    </function>
    <function name="OnAck" start="4" event="OnAck" returns="void" >
      <parameters >
        <parameter name="strAllowEvents" type="string" pass="byref"/>
        <parameter name="strAuthorization" type="string" pass="byref"/>
        <parameter name="strCallId" type="string" pass="byref"/>
        <parameter name="strContact" type="string" pass="byref"/>
        <parameter name="strContent" type="string" pass="byref"/>
        <parameter name="strContentDisposition" type="string" pass="byref"/>
        <parameter name="strContentEncoding" type="string" pass="byref"/>
        <parameter name="strContentLanguage" type="string" pass="byref"/>
        <parameter name="strContentType" type="string" pass="byref"/>
        <parameter name="strCSeq" type="string" pass="byref"/>
        <parameter name="strDate" type="string" pass="byref"/>
        <parameter name="strEncryption" type="string" pass="byref"/>
        <parameter name="strFrom" type="string" pass="byref"/>
        <parameter name="strMaxForwards" type="string" pass="byref"/>
        <parameter name="strMIMEVersion" type="string" pass="byref"/>
        <parameter name="strProxyAuthorization" type="string" pass="byref"/>
        <parameter name="strProxyRequire" type="string" pass="byref"/>
        <parameter name="strRecordRoute" type="string" pass="byref"/>
        <parameter name="strRequestURI" type="string" pass="byref"/>
        <parameter name="strRequire" type="string" pass="byref"/>
        <parameter name="strResponseKey" type="string" pass="byref"/>
        <parameter name="strRoute" type="string" pass="byref"/>
        <parameter name="strTimestamp" type="string" pass="byref"/>
        <parameter name="strTo" type="string" pass="byref"/>
        <parameter name="strUserAgent" type="string" pass="byref"/>
        <parameter name="strVia" type="string" pass="byref"/>
      </parameters>
      <local-vars >
        <var name="bUnknownCallId" type="boolean" >0</var>
        <var name="bSpiralCallId" type="boolean" >0</var>
        <var name="strFromSend" type="string" ></var>
        <var name="strToSend" type="string" ></var>
        <var name="nIdxA" type="i4" >0</var>
        <var name="nIdxB" type="i4" >0</var>
      </local-vars>
      <actions >
        <action id="4" plug-in="Pactolus.Branch.1" ><?xtml-editor x=26 y=79 ?>
          <results >
            <result name="Default" link="2" stubbed="0"/>
            <result name="spiral callid" link="3" stubbed="0" >bSpiralCallId == true</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.bUnknownCallId = Session.bSpiralCallId = false ;







if( Session.g_bSpiralTransfer && 



	(Session.strCallId == Session.g_oSpiralCallLegs[0].strCallId) ||



	(Session.strCallId == Session.g_oSpiralCallLegs[1].strCallId) ) {



	



	Session.bSpiralCallId = true; 



}



	



else if( Session.strCallId != Session.g_oCallLegs[0].strCallId &&



	Session.strCallId != Session.g_oCallLegs[1].strCallId ) {



		



		Session.bUnknownCallId = true ;



}]]></script>
          </scripts>
        </action>
        <action id="2" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=321 y=65 ?>
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
        </action>
        <action id="3" plug-in="Pactolus.SipAck.1" ><?xtml-editor x=239 y=179 ?>
          <!--Send down other call leg-->
          <sip-ack xmlns="urn:www.pactolus.com:xtml:sip" add-record-route="0" add-via="0" increment-cseq-first="0" increment-cseq-last="1" >
            <call-id >g_oSpiralCallLegs[nIdxB].strCallId</call-id>
            <cseq >g_oSpiralCallLegs[nIdxB].strCSeq</cseq>
            <from >strFromSend</from>
            <request-uri >g_oSpiralCallLegs[nIdxB].strRemoteUri</request-uri>
            <route >g_oSpiralCallLegs[nIdxB].strRoute</route>
            <to >strToSend</to>
            <via >g_oSpiralCallLegs[nIdxB].strVia</via>
          </sip-ack>
          <results >
            <result name="Default" link="2" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[/* determine which leg we're sending on, and whether we are a UAC or a UAS on that leg */



if( Session.strCallId == Session.g_oSpiralCallLegs[0].strCallId ) {



	Session.nIdxA = 0 ;



	Session.nIdxB = 1 ;



}



else {



	Session.nIdxA = 1 ;



	Session.nIdxB = 0 ;



}







if( Session.g_oSpiralCallLegs[Session.nIdxB].bUac ) {



	Session.strFromSend = Session.g_oSpiralCallLegs[Session.nIdxB].strFrom ;



	Session.strToSend = Session.g_oSpiralCallLegs[Session.nIdxB].strTo ;



}



else {



	Session.strFromSend = Session.g_oSpiralCallLegs[Session.nIdxB].strTo ;



	Session.strToSend = Session.g_oSpiralCallLegs[Session.nIdxB].strFrom ;



}



]]></script>
          </scripts>
        </action>
      </actions>
    </function>
    <function name="OnResponse" start="4" event="OnResponse" returns="void" >
      <parameters >
        <parameter name="strAccept" type="string" pass="byref"/>
        <parameter name="strAcceptEncoding" type="string" pass="byref"/>
        <parameter name="strAcceptLanguage" type="string" pass="byref"/>
        <parameter name="strAlertInfo" type="string" pass="byref"/>
        <parameter name="strAllow" type="string" pass="byref"/>
        <parameter name="strAllowEvents" type="string" pass="byref"/>
        <parameter name="strCallId" type="string" pass="byref"/>
        <parameter name="strCallInfo" type="string" pass="byref"/>
        <parameter name="strContact" type="string" pass="byref"/>
        <parameter name="strContent" type="string" pass="byref"/>
        <parameter name="strContentDisposition" type="string" pass="byref"/>
        <parameter name="strContentEncoding" type="string" pass="byref"/>
        <parameter name="strContentLanguage" type="string" pass="byref"/>
        <parameter name="strContentType" type="string" pass="byref"/>
        <parameter name="strCSeq" type="string" pass="byref"/>
        <parameter name="strDate" type="string" pass="byref"/>
        <parameter name="strEncryption" type="string" pass="byref"/>
        <parameter name="strErrorInfo" type="string" pass="byref"/>
        <parameter name="strFrom" type="string" pass="byref"/>
        <parameter name="strInReplyTo" type="string" pass="byref"/>
        <parameter name="strMIMEVersion" type="string" pass="byref"/>
        <parameter name="strMinSE" type="string" pass="byref"/>
        <parameter name="strOrganization" type="string" pass="byref"/>
        <parameter name="strPriority" type="string" pass="byref"/>
        <parameter name="strProxyAuthenticate" type="string" pass="byref"/>
        <parameter name="strRecordRoute" type="string" pass="byref"/>
        <parameter name="strRemotePartyID" type="string" pass="byref"/>
        <parameter name="strRequire" type="string" pass="byref"/>
        <parameter name="strRetryAfter" type="string" pass="byref"/>
        <parameter name="strRSeq" type="string" pass="byref"/>
        <parameter name="strServer" type="string" pass="byref"/>
        <parameter name="strSessionExpires" type="string" pass="byref"/>
        <parameter name="strStatus" type="string" pass="byref"/>
        <parameter name="strSubscriptionState" type="string" pass="byref"/>
        <parameter name="strSupported" type="string" pass="byref"/>
        <parameter name="strTimestamp" type="string" pass="byref"/>
        <parameter name="strTo" type="string" pass="byref"/>
        <parameter name="strUnsupported" type="string" pass="byref"/>
        <parameter name="strUserAgent" type="string" pass="byref"/>
        <parameter name="strVia" type="string" pass="byref"/>
        <parameter name="strWarning" type="string" pass="byref"/>
        <parameter name="strWWWAuthenticate" type="string" pass="byref"/>
      </parameters>
      <local-vars >
        <var name="bUnknownCallId" type="boolean" >0</var>
        <var name="bSpiralCallId" type="boolean" >0</var>
        <var name="nIdxA" type="i4" >0</var>
        <var name="nIdxB" type="i4" >0</var>
        <var name="strFromSend" type="string" ></var>
        <var name="strToSend" type="string" ></var>
        <var name="b487" type="boolean" >0</var>
        <var name="nIdx" type="i4" >0</var>
      </local-vars>
      <actions >
        <action id="4" plug-in="Pactolus.Branch.1" ><?xtml-editor x=44 y=144 ?>
          <results >
            <result name="Default" link="2" stubbed="0"/>
            <result name="487 Request Terminated" link="3" stubbed="0" >b487 == true</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.b487 = false ;



var status = new SipStatus( Session.strStatus ) ;







if( 487 != status.code ) {



	return ;



}







Session.nIdx = js_search_callid(Session.g_oSimRingCallLegs, Session.strCallId) ;



if( -1 == Session.nIdx ) {



	Server.logError("Received 487 response but call leg not found for callId: " + Session.strCallId ) ;



	return ;



}







Session.b487 = true ;]]></script>
          </scripts>
        </action>
        <action id="2" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=303 y=60 ?>
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("Received a response message with status: " + Session.strStatus ) ;



Server.logInfo("click to dial status is: " + Session.g_nClick2DialCode ) ;



var code = Clib.atoi( Session.strStatus ) ;







if( (180 == code || 183 == code) && 100 == Session.g_nClick2DialCode ) {



	Session.g_nClick2DialCode = 180 ;



	Session.g_strClick2DialStatus = "Ringing your phone" ;



}



]]></script>
          </scripts>
        </action>
        <action id="3" plug-in="Pactolus.SipAck.1" ><?xtml-editor x=318 y=249 ?>
          <!--to canceled outbound in simultaneous ring scenario-->
          <sip-ack xmlns="urn:www.pactolus.com:xtml:sip" add-record-route="0" add-via="0" increment-cseq-first="0" increment-cseq-last="0" >
            <call-id >g_oSimRingCallLegs[nIdx].strCallId</call-id>
            <cseq >g_oSimRingCallLegs[nIdx].strCSeq</cseq>
            <from >g_oSimRingCallLegs[nIdx].strFrom</from>
            <request-uri >g_oSimRingCallLegs[nIdx].strRequestUri</request-uri>
            <to >g_oSimRingCallLegs[nIdx].strTo</to>
            <via >g_oSimRingCallLegs[nIdx].strOriginalVia</via>
          </sip-ack>
          <results >
            <result name="Default" link="2" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
        </action>
      </actions>
    </function>
    <function name="OnSessionEnd" start="2" event="OnSessionEnd" returns="void" >
      <parameters >
        <parameter name="nSessionEndReason" type="i2" pass="byref"/>
      </parameters>
      <local-vars >
        <var name="nReturnCode" type="i4" >0</var>
        <var name="nIdxA" type="i4" >0</var>
        <var name="nIdxB" type="i4" >0</var>
        <var name="oDummy" type="object" ></var>
        <var name="nReturn" type="i4" >0</var>
      </local-vars>
      <actions >
        <action id="2" plug-in="Pactolus.Branch.1" ><?xtml-editor x=0 y=81 ?>
          <results >
            <result name="Default" link="11" stubbed="0"/>
            <result name="Write CDR" link="5" stubbed="0" >g_oAPI.bWriteCDR == true</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.enableEvents(false) ;]]></script>
          </scripts>
        </action>
        <action id="1" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=868 y=71 ?>
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.enableEvents(true) ;



Server.logInfo("Session has ended ");



Server.logInfo("Session end for Subscriber Id       : " + Session.g_oSub.lSubscriberId);



]]></script>
          </scripts>
        </action>
        <action id="5" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=242 y=362 ?>
          <!--VoipProcCallCompletion-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;psAPIProcCallCompletion&quot;" return="nReturnCode" external-function="1" library="lib_APISce.xml" >
            <parameter >g_oAPI</parameter>
            <parameter >g_oSub</parameter>
            <parameter >g_oCallLegs[nIdxA]</parameter>
            <parameter >g_oCallLegs[nIdxB]</parameter>
            <parameter >g_oRate</parameter>
            <parameter >oDummy</parameter>
            <parameter >oDummy</parameter>
          </function>
          <results >
            <result name="Default" link="8" stubbed="0"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[if ( true == Session.g_oCallLegs[0].bReferredTo && !Session.g_bAttendedTransfer ) {



	Session.nIdxB = 0 ;



	Session.nIdxA = 2 ;



	Session.g_oCallLegs[0].nTerminationReason = Session.g_oCallLegs[1].nTerminationReason ;



}



else if ( true == Session.g_oCallLegs[1].bReferredTo && !Session.g_bAttendedTransfer ) {



	Session.nIdxB = 1 ;



	Session.nIdxA = 2 ;



}



else {



	Session.nIdxB = 1 ;



	Session.nIdxA = 0 ;



}



Server.logInfo("A leg is index " + Session.nIdxA + " B leg is index " + Session.nIdxB ) ;







Session.g_oCallLegs[Session.nIdxB].lTimeEnded = Server.getUTCTime() ;



Session.g_oAPI.lPlatformSessionStartTime = Session.g_oCallLegs[Session.nIdxB].lTimeStart; 



]]></script>
            <script language="javascript" timing="last" ><![CDATA[Server.enableEvents(false);]]></script>
          </scripts>
        </action>
        <action id="6" plug-in="Pactolus.JavaStaticMethod.1" ><?xtml-editor x=635 y=28 ?>
          <!--unlockPin()-->
          <java xmlns="urn:www.pactolus.com:xtml:application" class="&quot;com.pactolus.psAPISceMisc&quot;" method="&quot;unlockPin&quot;" timeout="s_nShortTimeout" return="" method-return-var="nReturnCode" method-return-type="0" >
            <parameter type="in" var-type="string" >g_oAPI.strPlatformSessionId</parameter>
            <parameter type="in" var-type="string" >g_oAPI.strProcDBName</parameter>
            <parameter type="in" var-type="string" >g_oAPI.strPlatformSessionId</parameter>
            <parameter type="in" var-type="i8" >g_oSub.lSubscriberId</parameter>
          </java>
          <results >
            <result name="Default" link="1" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo ("********************* unlockPin parameters ***");



Server.logInfo ("Platform Session Id : " + Session.g_oAPI.strPlatformSessionId);



Server.logInfo ("DB Proc name        : " + Session.g_oAPI.strProcDBName);



Server.logInfo ("Platform Session Id : " + Session.g_oAPI.strPlatformSessionId);



Server.logInfo ("Subscriber Id       : " + Session.g_oSub.lSubscriberId);







]]></script>
            <script language="javascript" timing="last" ><![CDATA[Server.logInfo ("********************* unlockPin return code ***");



Server.logInfo ("Return code : " + Session.nReturnCode);]]></script>
          </scripts>
        </action>
        <action id="7" plug-in="Pactolus.JavaStaticMethod.1" ><?xtml-editor x=461 y=96 ?>
          <!--deleteOriginationBySessionId-->
          <java xmlns="urn:www.pactolus.com:xtml:application" class="&quot;com.pactolus.psAPISceMisc&quot;" method="&quot;deleteOriginationBySessionId&quot;" timeout="s_nShortTimeout" return="" method-return-var="nReturnCode" method-return-type="0" >
            <parameter type="in" var-type="string" >g_oAPI.strPlatformSessionId</parameter>
            <parameter type="in" var-type="string" >g_oAPI.strProcDBName</parameter>
            <parameter type="in" var-type="i8" >g_oSub.lSPId</parameter>
          </java>
          <results >
            <result name="Default" link="6" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo ("********************* deleteOriginationBySessionId parameters ***");



Server.logInfo ("Platform Session Id : " + Session.g_oAPI.strPlatformSessionId);



Server.logInfo ("DB Proc name        : " + Session.g_oAPI.strProcDBName);



Server.logInfo ("Service Provider Id : " + Session.g_oSub.lSPId);]]></script>
            <script language="javascript" timing="last" ><![CDATA[Server.logInfo ("********************* deleteOrginationBySessionId return code ***");



Server.logInfo ("Return code : " + Session.nReturnCode);]]></script>
          </scripts>
        </action>
        <action id="8" plug-in="Pactolus.Branch.1" ><?xtml-editor x=540 y=371 ?>
          <results >
            <result name="Default" link="7" stubbed="0"/>
            <result name="bWriteBLegCDR" link="10" stubbed="0" >g_bWriteBLegCDR == true</result>
          </results>
        </action>
        <action id="9" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=771 y=354 ?>
          <!--VoipProcCallCompletion for B leg-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;psAPIProcCallCompletion&quot;" return="nReturnCode" external-function="1" library="lib_APISce.xml" >
            <parameter >g_oAPI_B</parameter>
            <parameter >g_oSub_B</parameter>
            <parameter >g_oCallLegs[nIdxA]</parameter>
            <parameter >g_oCallLegs[nIdxB]</parameter>
            <parameter >oDummy</parameter>
            <parameter >oDummy</parameter>
            <parameter >oDummy</parameter>
          </function>
          <results >
            <result name="Default" link="7" stubbed="0"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_oAPI_B.nCallTerminationReason = Session.g_oAPI.nCallTerminationReason;



Session.g_oCallLegs[Session.nIdxB].strCallType = Session.g_oAPI_B.strCallType;



Session.g_oCallLegs[Session.nIdxA].strOrigFlag = "F";]]></script>
            <script language="javascript" timing="last" ><![CDATA[Server.enableEvents(false);]]></script>
          </scripts>
        </action>
        <action id="10" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=749 y=479 ?>
          <!--psAPIProcCallCompletion-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;psAPIProcCallCompletion&quot;" return="nReturnCode" external-function="1" library="lib_APISce.xml" >
            <parameter >g_oAPI_B</parameter>
            <parameter >g_oSub_B</parameter>
            <parameter >g_oCallLegs[2]</parameter>
            <parameter >g_oCallLegs[1]</parameter>
            <parameter >g_oRate_B</parameter>
            <parameter >oDummy</parameter>
            <parameter >oDummy</parameter>
          </function>
          <results >
            <result name="Default" link="7" stubbed="0"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[



























]]></script>
          </scripts>
        </action>
        <action id="11" plug-in="Pactolus.Branch.1" ><?xtml-editor x=209 y=49 ?>
          <!--Is this a billing reservation-->
          <results >
            <result name="Default" link="7" stubbed="0"/>
            <result name="lBillingSessionId &gt; 0 " link="12" stubbed="0" >g_oSub.lBillingSessionId &gt; 0</result>
          </results>
        </action>
        <action id="12" plug-in="Pactolus.JavaStaticMethod.1" ><?xtml-editor x=274 y=202 ?>
          <!--Rollback billing reservation-->
          <java xmlns="urn:www.pactolus.com:xtml:application" class="&quot;com.pactolus.psAPISceBalanceReservation&quot;" method="&quot;rollbackReservation&quot;" timeout="" return="" method-return-var="nReturn" method-return-type="0" >
            <parameter type="in" var-type="string" >g_oAPI.strPlatformSessionId</parameter>
            <parameter type="in" var-type="string" >g_oAPI.strProcDBName</parameter>
            <parameter type="in" var-type="i8" >g_oSub.lReservationId</parameter>
            <parameter type="in" var-type="i8" >g_oSub.lBillingSessionId</parameter>
            <parameter type="in" var-type="string" >"Call cancelled before completion."</parameter>
          </java>
          <results >
            <result name="Default" link="7" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("Rolling back reservation for non-complete call.");

Server.logInfo("Reservation Id: " + Session.g_oSub.lReservationId);

Server.logInfo("Billing Session Id: " + Session.g_oSub.lBillingSessionId);]]></script>
          </scripts>
        </action>
      </actions>
    </function>
    <function name="psAuthOriginate" start="22" event="psAuthOriginate" returns="i4" >
      <parameters >
        <parameter name="oSipMsg" type="object" pass="byref"/>
        <parameter name="bClick2Dial" type="boolean" pass="byref"/>
      </parameters>
      <local-vars >
        <var name="nReturnCode" type="i4" >-99</var>
        <var name="bHasCredentials" type="boolean" >0</var>
        <var name="strResponse" type="string" >SIP/2.0 503 Service Unavailable</var>
        <var name="idx" type="i4" >0</var>
        <var name="nPrepaidReturnCode" type="i4" >0</var>
        <var name="nPromptId" type="i4" >0</var>
        <var name="nMsgNumber" type="i4" >0</var>
        <var name="bSNMPEvent" type="boolean" >0</var>
        <var name="strErrorInfo" type="string" ></var>
        <var name="bIVRTransfer" type="boolean" >0</var>
        <var name="bRateCallAttempt" type="boolean" >0</var>
        <var name="bIVRMenu" type="boolean" >0</var>
        <var name="strContact" type="string" ></var>
        <var name="bRejectWithoutMsg" type="boolean" >0</var>
      </local-vars>
      <actions >
        <action id="22" plug-in="Pactolus.Branch.1" ><?xtml-editor x=16 y=88 ?>
          <results >
            <result name="Default" link="11" stubbed="0"/>
            <result name="click2dial" link="12" stubbed="0" >bClick2Dial == true</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[if ( Session.g_oAPI.strCallType == Session.s_CT_IVR_MENU ) {



	Session.bIVRMenu = true;



}



else if(  Session.g_oAPI.strCallType == Session.s_CT_IVR_TRANSFER ) {



	Session.bIVRTransfer = true ;



}]]></script>
          </scripts>
        </action>
        <action id="2" plug-in="Pactolus.Branch.1" ><?xtml-editor x=223 y=255 ?>
          <results >
            <result name="Default" link="4" stubbed="0"/>
            <result name="has credentials" link="12" stubbed="0" >bHasCredentials == true</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[



if( Session.g_oCallLegs[0].strProxyAuthorization.length > 0 ) {



	



	Session.bHasCredentials = true ;



		



	/* get values */



	var s = Session.g_oCallLegs[0].strProxyAuthorization.toString() ;



	if( !js_parse_value( s, "nonce", Session.g_oAccessLine.strNonce ) ||



		!js_parse_value( s, "uri", Session.g_oAccessLine.strUri ) ||



		!js_parse_value( s, "username", Session.g_oAccessLine.strUserName ) ||



		!js_parse_value( s, "realm", Session.g_oAccessLine.strRealm ) ||



		!js_parse_value( s, "response", Session.g_oAccessLine.strResponse ) )



	{



		Server.logError("failed to parse attributes for authentication") ;



	



		Server.logInfo("nonce:     " + Session.g_oAccessLine.strNonce ) ;



		Server.logInfo("username:  " + Session.g_oAccessLine.strUri ) ;



		Server.logInfo("username:  " + Session.g_oAccessLine.strUserName ) ;



		Server.logInfo("realm:     " + Session.g_oAccessLine.strRealm ) ;



		Server.logInfo("response:  " + Session.g_oAccessLine.strResponse ) ;



		Session.bHasAuthorizationHeader = false ;



	}



	else {



		Server.logInfo("nonce:     " + Session.g_oAccessLine.strNonce ) ;



		Server.logInfo("username:  " + Session.g_oAccessLine.strUserName ) ;



		Server.logInfo("uri:       " + Session.g_oAccessLine.strUri ) ;



		Server.logInfo("realm:     " + Session.g_oAccessLine.strRealm ) ;



		Server.logInfo("response:  " + Session.g_oAccessLine.strResponse ) ;



	}



}



else {



	Server.logInfo("No proxy authorization header provided") ;



	Session.bHasCredentials = false ;



}]]></script>
          </scripts>
        </action>
        <action id="3" plug-in="Pactolus.SipResponse.1" ><?xtml-editor x=688 y=130 ?>
          <!--SIP/2.0 407 Proxy Authentication Required-->
          <sip-response xmlns="urn:www.pactolus.com:xtml:sip" remove-via="0" reliable="0" increment-cseq-first="0" increment-cseq-last="0" >
            <call-id >g_oCallLegs[0].strCallId</call-id>
            <cseq >g_oCallLegs[0].strCSeq</cseq>
            <from >g_oCallLegs[0].strFrom</from>
            <proxy-authenticate >g_oCallLegs[0].strProxyAuthenticate</proxy-authenticate>
            <status >"SIP/2.0 407 Proxy Authentication Required"</status>
            <to >g_oCallLegs[0].strTo</to>
            <via >g_oCallLegs[0].strVia</via>
          </sip-response>
          <results >
            <result name="Default" link="10" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
            <result name="awaiting creds?" link="9" stubbed="0" >g_STATE == s_STATE_AWAITING_CALL</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[



/* set the realm value in the ProxyAuthenticate header as follows: 



	1. If the configuration is set to force a realm, use that



	2. If a "realm=" parameter exists in the Request-URI, use that



	3. If the host in the From header is not a dot decimal ip address use that



	4. Otherwise, if there is a default realm use that



*/



var pos ;



Session.g_oAccessLine.strRealm = "" ;







if( Session.s_strForcedRealm.length > 0 ) {



	Session.g_oAccessLine.strRealm = Session.s_strForcedRealm ;



}



else {



	var s = new String( Session.g_oCallLegs[0].strRequestURI ) ;



	pos = s.indexOf( ";domain=" ) ;



	if( -1 != pos ) {



		pos += 8; 	//advance past the keyword



		var pos2 = s.indexOf( " ", pos ) ;



		Session.g_oAccessLine.strRealm = s.substr( pos, pos2 - pos ) ;



	}



}







if( 0 == Session.g_oAccessLine.strRealm.length ) {



	var uri = new SipFrom( Session.oSipMsg.strFrom.toString() ) ;



	if( !(uri.url.host.charAt(0) >= '0' && uri.url.host.charAt(0) <= '9') ) {



		Session.g_oAccessLine.strRealm = uri.url.host ;



	}



}







if( 0 == Session.g_oAccessLine.strRealm.length && Session.s_strDefaultRealm.length > 0 ) {



	Session.g_oAccessLine.strRealm = Session.s_strDefaultRealm ;



}







Session.g_oCallLegs[0].strProxyAuthenticate = "Digest " ;



if( Session.g_oAccessLine.strRealm.length > 0 ) {



	Session.g_oCallLegs[0].strProxyAuthenticate += "realm=\"" ;



	Session.g_oCallLegs[0].strProxyAuthenticate += Session.g_oAccessLine.strRealm ;



	Session.g_oCallLegs[0].strProxyAuthenticate += "\", " ;



}



Session.g_oCallLegs[0].strProxyAuthenticate += "nonce=\"" + Session.g_oAccessLine.strNonce + "\"" ;



]]></script>
          </scripts>
        </action>
        <action id="4" plug-in="Pactolus.UserFunction.1" ><?xtml-editor x=434 y=192 ?>
          <!--Generate a nonce value-->
          <user-function xmlns="urn:www.pactolus.com:xtml:application" process="&quot;PACTOLUS_ps_c_adaptor&quot;" function="&quot;generate_nonce&quot;" timeout="3" return="" async="0" >
            <parameter >g_strSessionId</parameter>
            <parameter >g_oAccessLine.strNonce</parameter>
          </user-function>
          <results >
            <result name="Default" link="3" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_STATE = Session.s_STATE_AWAITING_CALL ;]]></script>
          </scripts>
        </action>
        <action id="5" plug-in="Standard.EndSession.1" ><?xtml-editor x=1466 y=291 ?></action>
        <action id="7" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=738 y=742 ?>
          <!--SUCCESS-->
          <return xmlns="urn:www.pactolus.com:xtml:application" value="nReturnCode"/>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[//moved from OnNewInvite:



	



	/* use From header from the incoming leg with our local ip; block caller id if requested unless this is a 911 call */







	Session.g_oCallLegs[1].strFrom = Session.g_oCallLegs[0].strFrom ;



	var from = new SipFrom( Session.g_oCallLegs[0].strFrom.toString() ) ;



	Server.logInfo("Setting host in From header on B leg to: " + Server.sipAddress ) ;



	Server.logInfo("Setting port in From header on B leg to: " + Server.sipPort ) ;



	



	from.url.host = Server.sipAddress ;



	from.url.port = Server.sipPort ;



	Session.g_oCallLegs[1].strFrom = from.encode() ;







	/* dh: when using Nextone SBC, the From header may be the auth id, not a real phone number.



		So we need to substitute in the ANI we have chosen to use.



	*/



	if( Session.g_oAPI.strAniToSend.length > 0 && "null" != Session.g_oAPI.strAniToSend ) {



		Session.g_oCallLegs[0].strSubscriberCallerId = Session.g_oCallLegs[0].strSvcProviderCallerId = Session.g_oAPI.strAniToSend ;



	}



	



	



	if( "T" == Session.g_oAccessLine.strBlockCallerIdFlag 



			&& !Session.g_oCallLegs[1].b911 



			&& Session.s_CT_SCHED_REMIND_ME != Session.g_oAPI.strCallType 



			&& Session.s_CT_VMAIL_RETRIEVAL != Session.g_oAPI.strCallType) {



			



 		/* dh: translate calling number before putting it in P-Asserted-Identity */



 		from.url.user = js_translate_calling_number_broadband(Session.s_strCarrierName, Session.g_oAPI.strAniToSend.toString());



	



		Session.g_oCallLegs[1].strPAssertedIdentity = "<" + from.url.encode() + ">" ;



		Session.g_oCallLegs[1].strPrivacy = "id" ;



		Session.g_oCallLegs[1].strRemotePartyId = "<" + from.url.encode() + ">;privacy=id" ;



		from.displayName = "\"Anonymous\"";



		from.url.user = "Restricted" ;



		Session.g_oCallLegs[1].strFrom = from.encode() ;	



		



		Session.g_oCallLegs[1].strPrivacy = Session.g_oCallLegs[0].strPrivacy = "id" ;



	} 



	else if( Session.g_oAPI.strAniToSend.length > 0 && null != Session.g_oAPI.strAniToSend ) {



		/* if this is a voice mail retreival or remind me call we need to use the subscriber's



		  phone number to look them up. In business broadband, the ani to use may be set to a number



		  that is not associated with the sub's access line, so we don't want to apply that here. */



		if ( Session.s_CT_SCHED_REMIND_ME != Session.g_oAPI.strCallType 



			&& Session.s_CT_VMAIL_RETRIEVAL != Session.g_oAPI.strCallType ) {



			var from = new SipFrom( Session.g_oCallLegs[1].strFrom.toString() ) ;



			from.url.user = js_translate_calling_number_broadband(Session.s_strCarrierName, Session.g_oAPI.strAniToSend.toString());



			



	 		/* dh: always send P-Asserted-Identity */



 			Session.g_oCallLegs[1].strPAssertedIdentity = "<" + from.url.encode() + ">" ;



			Session.g_oCallLegs[1].strFrom = from.encode() ;



		}	



		



		//if this is a 911 call, make sure we do have the display name blocked.



		if ( Session.g_oAPI.strCallType == Session.s_CT_911 ) {



			if ( undefined != from.displayName ) {



				var name = from.displayName.toLowerCase() ;



				if( -1 != name.indexOf( "anonymous" ) ) {



			  		from.displayName = Session.g_oAPI.strAniToSend.toString();



			  		Session.g_oCallLegs[1].strFrom = from.encode() ;



				}



			  	else if ( -1 != name.indexOf( "restricted" ) ) {



				  	from.displayName = Session.g_oAPI.strAniToSend.toString();



				  	Session.g_oCallLegs[1].strFrom = from.encode() ;



				}



				else if ( -1 != name.indexOf( "blocked" ) ) {



				  	from.displayName = Session.g_oAPI.strAniToSend.toString();



				  	Session.g_oCallLegs[1].strFrom = from.encode() ;



				}



			 }



		}	



		//if the display name does not have quotes, add them



		if ( undefined != from.displayName && null != from.displayName ) {



			if ( 0 != from.displayName.indexOf("\"")) {



				from.displayName = "\"" + from.displayName + "\"" ;



				Session.g_oCallLegs[1].strFrom = from.encode();



			}



		}



	}



	



	



	//click to dial calls will not have an a-leg sdp at this point, so skip any sdp mods



	if ( 0 < Session.g_oCallLegs[0].strRemoteSdp.length ) { 



	



		/* force PCMU on IVR calls if not already PCMA */



		//if( Session.s_CT_VMAIL_RETRIEVAL == Session.g_oAPI.strCallType



		//	|| Session.s_CT_IVR_ADMIN == Session.g_oAPI.strCallType



		//	|| Session.s_CT_IVR_MENU == Session.g_oAPI.strCallType ) {



		//



		//	if ( "PCMA" == Session.s_strCodec ) {



		//		Server.logInfo("Modifying SDP so PCMA is used for ivr connection") ;



		//		js_modifySdpForCodec( Session.g_oCallLegs[0].strRemoteSdp, 8 ) ;



		//	}



		//	else {



		//		Server.logInfo("Modifying SDP so PCMU is used for ivr connection") ;



		//		js_modifySdpForCodec( Session.g_oCallLegs[0].strRemoteSdp, 0 ) ;



		//	}



        //



		//}







		/* if a specific codec was selected, try that */
		var sdpUsed = new Sdp( Session.g_oCallLegs[0].strRemoteSdp.toString() ) ;
		Session.g_oCallLegs[0].strSdpToOfferB = Session.g_oCallLegs[0].strRemoteSdp ;

		if( Session.g_oAccessLine.strCodec.length > 0 ) {
			if( 0 == Clib.strcmpi( "PCMU", Session.g_oAccessLine.strCodec ) ) {
				Server.logInfo("Modifying SDP so PCMU is the preferred codec") ;
				js_modifySdpForCodec( Session.g_oCallLegs[0].strSdpToOfferB, 0 ) ;
				sdpUsed = new Sdp( Session.g_oCallLegs[0].strSdpToOfferB.toString() ) 
			}
			else if( 0 == Clib.strcmpi( "G729", Session.g_oAccessLine.strCodec ) ) {
				Server.logInfo("Modifying SDP so G729 is the preferred codec") ;
				js_modifySdpForCodec( Session.g_oCallLegs[0].strSdpToOfferB, 18 ) ;
				sdpUsed = new Sdp( Session.g_oCallLegs[0].strSdpToOfferB.toString() ) ;
			}
		} 
		else {
		// We are now forcing it to be G.711 for every outdial
			Server.logInfo("Modifying SDP so PCMU is the preferred codec as default") ;
			js_modifySdpForCodec( Session.g_oCallLegs[0].strSdpToOfferB, 0 ) ;
			sdpUsed = new Sdp( Session.g_oCallLegs[0].strSdpToOfferB.toString() ) ;
		}

		/* save payload type */
		if( sdpUsed.media.length > 0 && sdpUsed.media[0].rtpMaps.length > 0 ) {
			Session.g_oAPI.nRTPEncoding = Session.g_oCallLegs[1].nPayloadType = sdpUsed.media[0].rtpMaps[0].type ;
			if( null != Session.g_oCallLegs[1].nRtpClockRate ) {
				Session.g_oCallLegs[1].nRtpClockRate = sdpUsed.media[0].rtpMaps[0].clockRate ;
			}
			else {
				Session.g_oCallLegs[1].nRtpClockRate = 8000 ;
			}
		}
	}



	



	Session.g_oCallLegs[1].strCallType = Session.g_oAPI.strCallType ;



	Session.g_oCallLegs[1].strEnteredDestNbr = Session.g_oAPI.strDestReceived ;







	/* perform number translations for dialing */



	if ( Session.g_oAPI.strDestToSend == "911" || Session.g_oAPI.strDestToSend == "1911" ||



		 Session.g_oAPI.strDestToSend == "0911" || Session.g_oAPI.strDestToSend == Session.s_strLocalEmergencyNumber ) {



		 	Session.g_bDoNotModifyDest = true;



		 }



	if ( Session.s_CT_NORMAL == Session.g_oAPI.strCallType || 



		(Session.s_CT_911 == Session.g_oAPI.strCallType && !Session.g_bDoNotModifyDest)) {



		var bOnNet = ("1" == Session.g_oAPI.strDestOnNet ? true : false ) ;



		Server.logInfo("About to translate dest: " + Session.g_oAPI.strDestToSend +" this is an " + (bOnNet ? "on-net call" : "off-net call") ) ;



		Session.g_oCallLegs[1].strOutdialDestNbr = js_translate_destination_broadband( Session.s_strCarrierName, 



			Session.g_oAPI.strDestToSend, Session.g_oAPI.nOrigCountryId, bOnNet, Session.g_oAPI.strAniToSend ) ;



			



		if(Session.g_oAPI.strPrimaryRouteCode != "" && Session.g_oAPI.strPrimaryRouteCode != undefined) {



			if( Session.s_bUseSonusRouting ) {



				var from = new SipFrom( Session.g_oCallLegs[1].strFrom ) ;



				from.url.otg = Session.g_oAPI.strPrimaryRouteCode ;



				Session.g_oCallLegs[1].strFrom = from.encode() ;



			}



			else if( Session.s_RT_OFF_NET == Clib.atoi(Session.g_oAPI.strDestOnNet) ){



				Session.g_oCallLegs[1].strOutdialDestNbr = Session.g_oAPI.strPrimaryRouteCode + "" + Session.g_oCallLegs[1].strOutdialDestNbr;



			}



		}	



					



	}



	else {



	



		Session.g_oCallLegs[1].strOutdialDestNbr = Session.g_oAPI.strDestToSend ;



		



		if(Session.g_oAPI.strPrimaryRouteCode != "" && Session.g_oAPI.strPrimaryRouteCode != undefined ) {



			if( Session.s_bUseSonusRouting ) {



				var from = new SipFrom( Session.g_oCallLegs[1].strFrom ) ;



				from.url.otg = Session.g_oAPI.strPrimaryRouteCode ;



				Session.g_oCallLegs[1].strFrom = from.encode() ;



			}



			else if( Session.s_RT_OFF_NET == Clib.atoi(Session.g_oAPI.strDestOnNet ) ){



				Session.g_oCallLegs[1].strOutdialDestNbr = Session.g_oAPI.strPrimaryRouteCode + "" + Session.g_oCallLegs[1].strOutdialDestNbr;



			}



		}			



		



	}



	Server.logInfo("Outdial destination number: " + Session.g_oCallLegs[1].strOutdialDestNbr ) ;







	/* do not use rtp relay if the corresponding configuration parameter is set */



	if ( Session.s_bRelayIntraSiteMedia || "T" == Session.g_oAPI.strRelayMediaFlag){



		Session.g_oAPI.bRelayMedia = true;



		Server.logInfo("Media will be routed through SBC");



	}else if ( "F" == Session.g_oAPI.strRelayMediaFlag ) {



		Session.g_oAPI.bRelayMedia = false;



		Server.logInfo("Callers are using the same NAT device; media will NOT be routed through SBC") ;



	}



	



	







	Session.g_oCallLegs[1].strCallType = Session.g_oAPI.strCallType ;



	Session.g_oCallLegs[1].strWiretapFlag = Session.g_oAccessLine.strWiretapFlag ;



	Session.g_oCallLegs[1].strWiretapDest = Session.g_oAccessLine.strWiretapDest ;



	Session.g_oCallLegs[1].strIntlDestFlag = Session.g_oAPI.strIntlDestFlag ;



	Session.g_oCallLegs[1].nDestCountryId = Session.g_oAPI.nDestCountryId ;



	Session.g_oCallLegs[1].strDestCallingCode = Session.g_oAPI.strDestCallingCode ;



	Session.g_oCallLegs[1].strDestAreaCode = Session.g_oAPI.strDestAreaCode ;



	Session.g_oCallLegs[1].strDestRouteType = Session.g_oAPI.strDestOnNet ;











	Session.g_oCallLegs[1].strCallId = js_CreateUniqueCallId() ;



	Session.g_oCallLegs[1].strCSeq = "1 INVITE" ;



	Session.g_oCallLegs[1].bUac = true ;



	



	/* set the call duration based on the lesser of the rated time (if any) and the 



		service-level call duration (if any)



	*/



	if( Session.g_oVoipService.nMaxCallDuration > 0 && Session.g_oVoipService.nMaxCallDuration < Session.g_oSub.nSecondsAvailable ) {



		Session.g_oSub.nSecondsAvailable = Session.g_oVoipService.nMaxCallDuration ;



	}



	







Server.enableEvents(true) ;]]></script>
          </scripts>
        </action>
        <action id="8" plug-in="Pactolus.SipResponse.1" ><?xtml-editor x=786 y=347 ?>
          <!--Send appropriate non-success response-->
          <sip-response xmlns="urn:www.pactolus.com:xtml:sip" remove-via="0" reliable="0" increment-cseq-first="0" increment-cseq-last="0" >
            <call-id >g_oCallLegs[0].strCallId</call-id>
            <cseq >g_oCallLegs[0].strRemoteCSeq</cseq>
            <from >g_oCallLegs[0].strFrom</from>
            <status >strResponse</status>
            <to >g_oCallLegs[0].strTo</to>
            <via >g_oCallLegs[0].strVia</via>
            <additional-parameters >
              <error-info >strErrorInfo</error-info>
            </additional-parameters>
          </sip-response>
          <results >
            <result name="Default" link="32" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.enableEvents(true) ;]]></script>
          </scripts>
        </action>
        <action id="9" plug-in="Standard.Timer.1" ><?xtml-editor x=948 y=181 ?>
          <!--Set a timer to wait for INVITE w/ credentials-->
          <timer xmlns="urn:www.pactolus.com:xtml:application" start="1" id="g_lRetryInviteTimer" duration="10"/>
          <results >
            <result name="Default" link="10" stubbed="0"/>
          </results>
        </action>
        <action id="10" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=1130 y=92 ?>
          <return xmlns="urn:www.pactolus.com:xtml:application" value="-1"/>
        </action>
        <action id="11" plug-in="Standard.Timer.1" ><?xtml-editor x=234 y=112 ?>
          <!--Stop credential timer-->
          <timer xmlns="urn:www.pactolus.com:xtml:application" start="0" id="g_lRetryInviteTimer" duration=""/>
          <results >
            <result name="Default" link="2" stubbed="0"/>
          </results>
        </action>
        <action id="12" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=25 y=311 ?>
          <!--VoipAuthenticateOrigination-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;VoipAuthenticateOrigination&quot;" return="nReturnCode" external-function="1" library="lib_APISce.xml" >
            <parameter >g_oAPI</parameter>
            <parameter >g_oAccessLine</parameter>
            <parameter >g_oVoipService</parameter>
            <parameter >strResponse</parameter>
            <parameter >g_oSub</parameter>
          </function>
          <results >
            <result name="Default" link="26" stubbed="0"/>
            <result name="success" link="21" stubbed="0" >nReturnCode == 0</result>
            <result name="call back - no calls in last 24" link="7" stubbed="0" >nReturnCode == s_CB_NO_CALLS_IN_24</result>
            <result name="911 Call" link="7" stubbed="0" >nReturnCode != -9



AND g_oAPI.strCallType == s_CT_911



AND nReturnCode != -19</result>
            <result name="911 Call - Not enabled" link="25" stubbed="0" >(nReturnCode == -9



OR nReturnCode == -19)



AND g_oAPI.strCallType == s_CT_911</result>
            <result name="Low Balance" link="25" stubbed="0" >nReturnCode == -13



AND g_oAPI.strCallType != s_CT_PREPAID_IVR</result>
            <result name="PIN Locked" link="25" stubbed="0" >nReturnCode == -15</result>
            <result name="Account Expired" link="25" stubbed="0" >nReturnCode == -14</result>
            <result name="Subscriber disabled" link="25" stubbed="0" >nReturnCode == -3</result>
            <result name="Service Provider disabled" link="25" stubbed="0" >nReturnCode == -4</result>
            <result name="Phone disabled" link="25" stubbed="0" >nReturnCode == -5</result>
            <result name="restricted destination" link="25" stubbed="0" >nReturnCode == -6



OR nReturnCode == -8</result>
            <result name="no caller id" link="25" stubbed="0" >nReturnCode == -7</result>
            <result name="max streams for line" link="25" stubbed="0" >nReturnCode == -10</result>
            <result name="max streams for provider" link="25" stubbed="0" >nReturnCode == -11</result>
            <result name="dest unreachable" link="25" stubbed="0" >nReturnCode == -12</result>
            <result name="DB error" link="25" stubbed="0" >nReturnCode == -99</result>
            <result name="max external streams" link="25" stubbed="0" >nReturnCode == -17</result>
            <result name="low balance - prepaid ivr" link="21" stubbed="0" >g_oAPI.strCallType == s_CT_PREPAID_IVR</result>
            <result name="credit exhausted, AZC disabled" >bRejectWithoutMsg == true</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.enableEvents(false) ;







Session.bSNMPEvent = false;]]></script>
            <script language="javascript" timing="middle" ><![CDATA[Server.logInfo("psAuthOriginate call type: " + Session.g_oAPI.strCallType);



if ( Session.g_oAPI.strCallType == Session.s_CT_911 && 



	(Session.g_oAPI.nEmergencyRouteType != Session.s_E911_ROUTE_FORWARD &&



	Session.g_oAPI.nEmergencyRouteType != Session.s_E911_ROUTE_REDIRECT) ) {



	Session.nReturnCode = -19;



}







//rh: if this is a low balance call, send it to the IVR if prepaid, play prompt if Postpaid-rated.	



if ( -13 == Session.nReturnCode ) {



	if (Session.g_oAPI.nBillingType == Session.s_BT_PREPAID)



	{



		Session.g_oAPI.strCallType = Session.s_CT_PREPAID_IVR ;



		Server.logInfo("Subscriber has low balance; transfer to prepaid IVR");



		Session.g_bLowBalance = true;



	}



	else



	{



		Session.nPromptId = 507;



		Server.logInfo("Subscriber has low balance; play prompt");



	}



}







if( 0 == Session.nReturnCode ||



	-13 == Session.nReturnCode) // Low Balance ... proceed with call



{



	



	



		



	/* set up the routes in the proxy list, if no routes provided then use primary softswitch */



	for( var i = 0; i < 5; i++ ) {



		if( 0 == Session.g_oAPI.strRoute[i].length ) break ;



		Session.g_oProxyList[i] = Session.g_oAPI.strRoute[i] ;



	}



	



	/* special call types */

	 if( Session.g_oAPI.strCallType == Session.s_CT_VMAIL_RETRIEVAL ) {



		Server.logInfo("Voice mail retrieval call") ;



		Session.g_oCallLegs[1].strDestRouteType = Session.s_RT_ON_NET ;



		Session.g_oProxyList[0] = Session.s_strNiuAddress + ";target=pcs_vmail_retrieve" ;



		if ( 0 < Session.g_oAPI.nActionValueId ) {



			Session.g_oProxyList[0] += ";vmail_account_id=" ;



			Session.g_oProxyList[0] += Session.g_oAPI.nActionValueId ;



		}



		else if ( 0 < Session.g_oAPI.lVoiceMailId ) {



			Session.g_oProxyList[0] += ";vmail_account_id=" ;



			Session.g_oProxyList[0] += Session.g_oAPI.lVoiceMailId ;



		}



		Session.g_oProxyList[0] += ";access_line_id=" ;



		Session.g_oProxyList[0] += Session.g_oAccessLine.lAccessLineId;



		



			



		Session.g_oVoipService.nMaxCallDuration = 1000;



	}



	else if( Session.g_oAPI.strCallType == Session.s_CT_CONFERENCE ) {



		Server.logInfo("Conference call") ;



		Session.g_oCallLegs[1].strDestRouteType = Session.s_RT_ON_NET ;



		



		/* send passcode and service provider id to the app so it doesn't have to look them up */



		Session.g_oProxyList[0] = Session.s_strNiuAddress + ";target=conference;passcode=" ;



		Session.g_oProxyList[0] += Session.g_oAPI.strSubPasscode ;



		Session.g_oProxyList[0] += ";sp_id=" ;



		Session.g_oProxyList[0] += Session.g_oSub.lSPId ;







	}



	else if( Session.g_oAPI.strCallType == Session.s_CT_PREPAID_IVR ) {



		Server.logInfo("Prepaid IVR") ;



		Session.g_oCallLegs[1].strDestRouteType = Session.s_RT_ON_NET ;



		



		/* send subscriber id to the app so it doesn't have to look it up */



		Session.g_oProxyList[0] = Session.s_strNiuAddress + ";target=pcs_voip_prepaid_ivr;sub_id=" ;



		Session.g_oProxyList[0] += Session.g_oSub.lSubscriberId ;



		Session.g_oProxyList[0] += ";sp_id=" ;



		Session.g_oProxyList[0] += Session.g_oSub.lSPId ;



		Session.g_oProxyList[0] += ";off_id=" ;



		Session.g_oProxyList[0] += Session.g_oSub.nPrimaryOfferingId ;



		Session.g_oProxyList[0] += ";curr_id=" ;



		Session.g_oProxyList[0] += Session.g_oSub.nCurrencyId ;



		Session.g_oProxyList[0] += ";lang=" ;



		Session.g_oProxyList[0] += Session.g_oAccessLine.strLanguage ;



		Session.g_oProxyList[0] += ";exp_type=" ;



		Session.g_oProxyList[0] += Session.g_oSub.nExpirationType ;



		Session.g_oProxyList[0] += ";bal=" ;



		Session.g_oProxyList[0] += Math.round(Session.g_oSub.fPrepaidBalance*100)/100 ;



		if (Session.g_bLowBalance == true)



		{



			Session.g_oProxyList[0] += ";force=yes" ;



		}



		



		Session.g_oVoipService.nMaxCallDuration = 1000;



	}



	else if (Session.g_oAPI.strCallType == Session.s_CT_INTERNAL_CALL ) {



	



		/* reject on-net calls for postpaid-rated subscribers with no credit remaining if zero cost calling disabled */



		if( 2 == Session.g_oAPI.nBillingType &&



			"T" == Session.g_oAPI.strRateCallsFlag && "T" == Session.g_oAPI.strCreditLimitFlag &&



			Session.g_oAPI.fCreditUsed >= Session.g_oAPI.fCreditLimit &&



			"F" == Session.g_oAPI.strAllowZeroCostFlag ) {



		



			Server.logInfo("Rejecting on-net origination attempt for subscriber who has reached credit limit because zero cost calling is disabled for this service") ;



			Session.strResponse = "SIP/2.0 480 Temporarily Unavailable" ;



			Session.bRejectWithoutMsg = true ;



			Session.strErrorInfo = "Insufficient funds (credit limit reached and zero cost calling not allowed)" ;	



			



		}



		Server.logInfo("Internal Call") ;



		Session.g_oCallLegs[1].strDestRouteType = Session.s_RT_ON_NET ;



		



		Session.g_oProxyList[0] = Session.s_strNiuAddress + ";target=pcs_voip_terminate" ;



		Session.g_oProxyList[0] += ";dept_id=" ;



		Session.g_oProxyList[0] += Session.g_oAPI.lDeptId ;



		



		



	}



	else if (Session.g_oAPI.strCallType == Session.s_CT_IVR_MENU ) {



		Server.logInfo("Auto Attendant/IVR Menu") ;



		Session.g_oCallLegs[1].strDestRouteType = Session.s_RT_ON_NET ;



		Session.g_oCallLegs[1].strEnteredDestNbr = Session.g_oAPI.strDestReceived ;



				



		if ( 0 < Session.g_oAPI.strReceptionPhone.length & "null" != Session.g_oAPI.strReceptionPhone ) {



			Server.logInfo("Trying receptionist number before routing to IVR: " + Session.g_oAPI.strReceptionPhone);



			Session.g_oCallLegs[1].strOutdialDestNbr = Session.g_oAPI.strDestToSend = Session.g_oAPI.strReceptionPhone ;



			Session.g_bTryReceptionist = true;



			Session.g_oAPI.bTryReceptionist = true;



			Session.g_oProxyList[0] = Session.s_strNiuAddress + ";target=pcs_voip_terminate" ;



			Session.g_oProxyList[0] += ";dept_id=" ;



			Session.g_oProxyList[0] += Session.g_oAPI.lDeptId ;



			Session.g_oProxyList[0] += ";ReceptionRNA=";



			Session.g_oProxyList[0] += Session.g_oAPI.nRNATimeout;



			Session.g_oAPI.nReceptionRNATimeout = Session.g_oAPI.nRNATimeout;



		}



		else {



			Session.g_oProxyList[0] = Session.s_strNiuAddress + ";target=pcs_voip_ivr" ;



			Session.g_oProxyList[0] += ";dept_id=" ;



			Session.g_oProxyList[0] += Session.g_oAPI.lDeptId ;



			Session.g_oProxyList[0] += ";ivr_id=" ;



			Session.g_oProxyList[0] += Session.g_oAPI.nActionValueId ;



		}



	}



	else if (Session.g_oAPI.strCallType == Session.s_CT_IVR_ADMIN ) {



		Server.logInfo("Auto Attendant/IVR Admin Menu") ;



		Session.g_oCallLegs[1].strDestRouteType = Session.s_RT_ON_NET ;







		Session.g_oProxyList[0] = Session.s_strNiuAddress + ";target=pcs_voip_admin_ivr" ;



		Session.g_oProxyList[0] += ";dept_id=" ;



		Session.g_oProxyList[0] += Session.g_oAPI.lDeptId ;



	}



	else if (Session.g_oAPI.strCallType == Session.s_CT_HUNT_GROUP ) {



		Server.logInfo("Call to a Hunt Group");



		Session.g_oCallLegs[1].strDestRouteType = Session.s_RT_ON_NET ;







		Session.g_oProxyList[0] = Session.s_strNiuAddress + ";target=pcs_voip_terminate" ;



		Session.g_oProxyList[0] += ";dept_id=" ;



		Session.g_oProxyList[0] += Session.g_oAPI.lDeptId ;



	}



	/* last number callback */



	else if( Session.g_oAPI.strCallType == Session.s_CT_CALL_RETURN ) {



		Server.logInfo("Last number call back") ;



		Session.g_oCallLegs[1].strCallType = Session.g_oAPI.strCallType ;



		Session.g_oCallLegs[1].strEnteredDestNbr = Session.g_oAPI.strDestReceived ;



		Session.g_oCallLegs[1].strOutdialDestNbr = Session.g_oAPI.strOutdialDestNumber	 ;



		



		Session.g_oVoipService.nMaxCallDuration = 1000;



	}



	/* schedule wake up call */



	else if( Session.g_oAPI.strCallType == Session.s_CT_SCHED_REMIND_ME ) {



		Server.logInfo("Schedule Wake Up Call");



		Session.g_oCallLegs[1].strCallType = Session.g_oAPI.strCallType ;



		Session.g_oCallLegs[1].strDestRouteType = Session.s_RT_ON_NET ;



		Session.g_oProxyList[0] = Session.s_strNiuAddress + ";target=pcs_set_reminder" ;



		



		Session.g_oVoipService.nMaxCallDuration = 1000;



	}



	else if ( Session.g_oAPI.strCallType == Session.s_CT_911 ) {



		Server.logInfo("This is an e-911 call");



		Session.g_oCallLegs[1].b911 = true;



		Session.g_oCallLegs[1].b911_ECRC = false;



		



		if( 0 == Session.g_oProxyList.length ) {



			Session.g_oProxyList[0] = Session.s_strPrimarySoftswitch ;



			if( Session.s_strBackupSoftswitch.length > 0 ) {



				Session.g_oProxyList[1] = Session.s_strBackupSoftswitch ;



			}



		}



		



		if ( Session.g_oAPI.nEmergencyRouteType == Session.s_E911_ROUTE_FORWARD ) {



			Server.logInfo("The emergency call will be routed via a forwarding phone number");



			Session.g_oAPI.strDestToSend = Session.g_oAPI.strEmergencyRoute1;



			Session.g_oCallLegs[1].b911_Forward = true;



		}



		else if ( Session.g_oAPI.nEmergencyRouteType == Session.s_E911_ROUTE_REDIRECT ) {



			Server.logInfo("The emergency call will be routed via a redirect server");



			Session.g_oCallLegs[1].b911_Forward = false;



		}



		Session.g_oEmergencyRoutes[0] = Session.g_oAPI.strEmergencyRoute1;



		Server.logInfo("Emergency Route 1 <" + Session.g_oEmergencyRoutes[0] + ">");



		if ( null != Session.g_oAPI.strEmergencyRoute2 && 0 < Session.g_oAPI.strEmergencyRoute2.length ) {



			Session.g_oEmergencyRoutes[1] = Session.g_oAPI.strEmergencyRoute2 ;



			Server.logInfo("Emergency Route 2 <" + Session.g_oEmergencyRoutes[1] + ">");



		}	



		if ( null != Session.g_oAPI.strEmergencyRoute3 && 0 < Session.g_oAPI.strEmergencyRoute3.length ) {



			Session.g_oEmergencyRoutes[2] = Session.g_oAPI.strEmergencyRoute3 ;



			Server.logInfo("Emergency Route 3 <" + Session.g_oEmergencyRoutes[2] + ">");



		}



	}



    /* normal call -- IP completion */



	else if( Session.s_RT_ON_NET == Clib.atoi(Session.g_oAPI.strDestOnNet) ) {



		/* if the application is configured to send all on-net calls via the softswitch, 



			treat it similarly to an off-net call from a routing perspective



		*/



		Session.g_oCallLegs[1].strDestRouteType = Session.s_RT_ON_NET ;



		if( Session.s_bRouteOnNetViaSoftswitch ) {



			Server.logInfo("IP to IP call, via softswitch") ;



			Session.g_oProxyList[0] = Session.s_strPrimarySoftswitch ;



			if( Session.s_strBackupSoftswitch.length > 0 ) {



				Session.g_oProxyList[1] = Session.s_strBackupSoftswitch ;



			}



		}



		else {



			Server.logInfo("IP to IP call, via terminate app") ;



			Session.g_oProxyList[0] = Session.s_strNiuAddress + ";target=pcs_voip_terminate" ;



			



			/* DH: include the caller's dept id, in case this is an extension to extension call */



			if( Session.g_oAPI.lDeptId > 0 && Session.g_oAPI.strCallType == Session.s_CT_INTERNAL_CALL ) {



				Session.g_oProxyList[0] += ";dept_id=" ;



				Session.g_oProxyList[0] += Session.g_oAPI.lDeptId ;



			}



		}



	}	



	/* normal call -- PSTN completion */



	else if( 0 == Session.g_oProxyList.length ) {



		Session.g_oProxyList[0] = Session.s_strPrimarySoftswitch ;



		if( Session.s_strBackupSoftswitch.length > 0 ) {



			Session.g_oProxyList[1] = Session.s_strBackupSoftswitch ;



		}



	}



	



	Session.g_oCallLegs[0].nOrigCountryId = Session.g_oAPI.nOrigCountryId ;



	Session.g_oCallLegs[0].strOrigCallingCode = Session.g_oAPI.strOrigCallingCode ;



	Session.g_oCallLegs[0].strOrigAreaCode = Session.g_oAPI.strOrigAreaCode ;



	



	/* save some information in the API global object that we will need dest auth and cdr */



	Session.g_oAPI.lServiceProviderId = Session.g_oSub.lSPId ;



	Session.g_oSub.nServiceId = Session.g_oVoipService.nSvcId ;



	Session.g_oAPI.strStrippedOrigNumber = Session.g_oAPI.strAniToSend; 



	Session.g_oAPI.lPhoneNumberId = Session.g_oAccessLine.lPhoneNumberId ;



	Session.g_oAPI.lWiretapOrderId = Session.g_oAccessLine.lWiretapOrderId ;



	Session.g_oAPI.strDestinationNumber = Session.g_oAPI.strAuthDestNumber ;







	



}	







/* if the db call fails for any reason and this is a 911 call, we still need to attempt to put it through */



else if ( -9 != Session.nReturnCode && -19 != Session.nReturnCode &&



			(Session.g_oAPI.strDestReceived == Session.s_strLocalEmergencyNumber ||



			("911" == Session.s_strLocalEmergencyNumber && 



			(Session.g_oAPI.strDestReceived == "911" || Session.g_oAPI.strDestReceived == "0911" || Session.g_oAPI.strDestReceived == "1911" )))) {	



	Server.logInfo("authOrigination failed. This is an E-911 call. Setting outdial parameters.")



	Session.g_oCallLegs[1].strCallType = Session.g_oAPI.strCallType = Session.s_CT_911;



	Session.g_oAPI.nEmergencyRouteType = Session.s_nEmergencyRouteType;



	Session.g_oCallLegs[1].strEnteredDestNbr = Session.g_oAPI.strDestReceived ;



	if ( Session.g_oAPI.strDestReceived == "0911"  || Session.g_oAPI.strDestReceived == "1911" ) {



		Session.g_oAPI.strDestToSend = "911" ;



	}



	else {



		Session.g_oAPI.strDestToSend = Session.s_strLocalEmergencyNumber;



	}



	Session.g_oAPI.strDestOnNet = "2" ;



	if( 0 == Session.g_oProxyList.length ) {



		Session.g_oProxyList[0] = Session.s_strPrimarySoftswitch ;



		if( Session.s_strBackupSoftswitch.length > 0 ) {



			Session.g_oProxyList[1] = Session.s_strBackupSoftswitch ;



		}



	}	



	Session.g_oCallLegs[1].b911 = true;



	Session.g_oCallLegs[1].b911_ECRC = false;



	Session.g_oCallLegs[1].b911_Forward = false;



	if ( Session.s_E911_ROUTE_FORWARD == Session.s_nEmergencyRouteType ) {



		Session.g_oCallLegs[1].b911_Forward = true;



		Session.g_oEmergencyRoutes[0] = Session.g_oAPI.strDestToSend = Session.s_strEmergencyForwardingNbr1;



		Server.logInfo("Emergency Route 1 <" + Session.g_oEmergencyRoutes[0] + ">");



		if ( 0 < Session.s_strEmergencyForwardingNbr2.length ) {



			Session.g_oEmergencyRoutes[1] = Session.s_strEmergencyForwardingNbr2 ;



			Server.logInfo("Emergency Route 2 <" + Session.g_oEmergencyRoutes[1] + ">");



		}	



		if ( 0 < Session.s_strEmergencyForwardingNbr3.length ) {



			Session.g_oEmergencyRoutes[2] = Session.s_strEmergencyForwardingNbr3;



			Server.logInfo("Emergency Route 3 <" + Session.g_oEmergencyRoutes[2] + ">");



		}



	}



	else {



		Session.g_oEmergencyRoutes[0] = Session.s_strPrimaryPSAP;



		Server.logInfo("Emergency Route 1 <" + Session.g_oEmergencyRoutes[0] + ">");



		if ( 0 < Session.s_strBackupPSAP.length ) {



			Session.g_oEmergencyRoutes[1] = Session.s_strBackupPSAP ;



			Server.logInfo("Emergency Route 2 <" + Session.g_oEmergencyRoutes[1] + ">");



		}	



		if ( 0 < Session.s_strECRC.length ) {



			Session.g_oEmergencyRoutes[2] = Session.s_strECRC;



			Server.logInfo("Emergency Route 3 <" + Session.g_oEmergencyRoutes[2] + ">");



		}



	}



}



else {



	switch (Session.nReturnCode)



	{



	case -3: 



			Server.logInfo("Subscriber disabled"); 



			Session.strErrorInfo = "Subscriber disabled";



			Session.nPromptId = 370;



			Session.nMsgNumber = 1005;



			break ;



	case -4: 



			Server.logInfo("Service provider disabled"); 



			Session.strErrorInfo = "Service Provider disabled";



			Session.nPromptId = 370;



			Session.nMsgNumber = 1004;



			break ;



	case -5: 



			Server.logInfo("Phone disabled"); 



			Session.strErrorInfo = "Phone disabled";



			Session.nPromptId = 370;



			Session.nMsgNumber = 7000;



			break ;



	case -6: 	



			Server.logInfo("Restricted destination"); 



			Session.strErrorInfo = "Restricted destination";



			Session.nPromptId = 513;



			Session.nMsgNumber = 0;



			break ;



	case -7: 



			Server.logInfo("No caller id"); 



			Session.strErrorInfo = "No Caller ID";



			Session.nPromptId = 2007;



			Session.nMsgNumber = 0;



			break ;



	case -8: 



			Server.logInfo("PSTN call not allowed for this class of service"); 



			Session.strErrorInfo = "PSTN not allowed";



			Session.nPromptId = 513;



			Session.nMsgNumber = 0;



			break ;



	case -9: 



			Server.logInfo("E911 call not allowed for this subscriber"); 



			Session.strErrorInfo = "E911 not enabled for user";



			//Session.nPromptId = 4527;



			Session.nPromptId = 381;



			Session.nMsgNumber = 0;



			break ;



	case -10: 



			Server.logInfo("Maximum streams reached for this access line"); 



			Session.strResponse = "SIP/2.0 480 Temporarily Unavailable" ;



			Session.strErrorInfo = "Max calls for Access Line";



			Session.nPromptId = 370;



			Session.nMsgNumber = 0;



			break ;



	case -11: 



			Server.logInfo("Maximum streams reached for this service provider"); 



			Session.strResponse = "SIP/2.0 480 Temporarily Unavailable" ;



			Session.strErrorInfo = "Max calls for Service Provider";



			Session.nPromptId = 370;



			Session.nMsgNumber = 0;



			break ;



	case -12: 



			Server.logInfo("Destination Unreachable") ;



			Session.strResponse = "SIP/2.0 485 Ambiguous" ;



			Session.strErrorInfo = "Destination Unreachable";



			Session.nPromptId = 375;



			Session.nMsgNumber = 0;



			break ;



	case -14: 



			Server.logInfo("Account expired") ;



			Session.strErrorInfo = "Account expired";



			Session.nPromptId = 505;



			Session.nMsgNumber = 1015;



			break ;



	case -15: 



			Server.logInfo("PIN Locked") ;



			Session.strErrorInfo = "PIN locked";



			Session.nPromptId = 338;



			Session.nMsgNumber = 1011;



			break ;



	case -17:



			Server.logInfo("Maximum external streams already in use");



			Session.strErrorInfo = "Max external streams";



			Session.nPromptId = 370;



			Session.nMsgNumber = 0;



			break;		



	case -19:



			Server.logInfo("Platform Owner does not support E-911 calls");



			Session.strErrorInfo = "E-911 not supported by Platform";



			//Session.nPromptId = 4527;



			Session.nPromptId = 381;



			Session.nMsgNumber = 0;	



			break;



	case -99: 



			Server.logError("DB error during device registration"); 



			Session.strErrorInfo = "DB error";



			Session.nPromptId = 305;



			Session.nMsgNumber = 1001;



			Session.bSNMPEvent = true;



			break ;



	default: 



			Server.logError("Unknown error : " + Session.nReturnCode ) ; 



			Session.nMsgNumber = 0;



			Session.nPromptId = 0;



			Session.bSNMPEvent = true;



			break ;



	}	



}]]></script>
            <script language="javascript" timing="last" ><![CDATA[







// initialize the seconds available for this call to the max call duration



// it may get overwritten in AuthDest but that's ok ... need to do it at the



// end seeing the star codes need a large max call duration



Session.g_oSub.nSecondsAvailable = Session.g_oVoipService.nMaxCallDuration;







Session.nReturnCode = 0;



Server.enableEvents(true) ;























]]></script>
          </scripts>
        </action>
        <action id="13" plug-in="Pactolus.MGCPPlay.1" ><?xtml-editor x=919 y=715 ?>
          <!--Play specified prompt-->
          <play xmlns="urn:www.pactolus.com:xtml:media" connection-id="g_oMS.strConnectionId" endpoint="g_oMS.strEndPoint" callid="g_oMS.strCallId" repeat="1" timeout="40" ms-type="s_strMsType" returns="nReturnCode" start-play="1" interrupt="0" return-immediate="0" digit-map="" language="&quot;eng&quot;" digits="" retry-count="" clear-digits="1" terminating-digit="" quick-collect="0" digit-timer="" >
            <audio type="index" >nPromptId</audio>
          </play>
          <results >
            <result name="Default" link="27" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
        </action>
        <action id="14" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=760 y=559 ?>
          <!--DirectCallerToMS-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;DirectCallerToMS&quot;" return="nReturnCode" external-function="1" library="lib_mediaserver.xml" >
            <parameter >g_oCallLegs[0]</parameter>
            <parameter >g_oMS</parameter>
          </function>
          <results >
            <result name="Default" link="8" stubbed="0"/>
            <result name="success" link="13" stubbed="0" >nReturnCode == 0</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_oCallLegs[0].strContent = Session.g_oCallLegs[0].strRemoteSdp;











]]></script>
            <script language="javascript" timing="last" ><![CDATA[if ( 0 == Session.nReturnCode ) {



	Session.g_oCallLegs[0].bConnected = true ;



}



else {



	Session.strResponse = "SIP/2.0 503 Service Unavailable" ;



}]]></script>
          </scripts>
        </action>
        <action id="15" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=981 y=484 ?>
          <!--HangUpParty-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;HangUpParty&quot;" return="" external-function="1" library="lib_callcontrol.xml" >
            <parameter >g_oCallLegs[0]</parameter>
            <parameter >s_strLocalUri</parameter>
          </function>
          <results >
            <result name="Default" link="5" stubbed="0"/>
          </results>
        </action>
        <action id="17" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=70 y=766 ?>
          <!--psAPIAuthorizeDestination-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;psAPIAuthorizeDestination&quot;" return="nPrepaidReturnCode" external-function="1" library="lib_APISce.xml" >
            <parameter >g_oAPI</parameter>
            <parameter >g_oRate</parameter>
            <parameter >g_oSub</parameter>
            <parameter >g_oCallLegs[1]</parameter>
            <parameter >g_oCallLegs[0]</parameter>
          </function>
          <results >
            <result name="Default" link="7" stubbed="0"/>
            <result name="destination restricted" link="23" stubbed="0" >nPrepaidReturnCode == -3</result>
            <result name="insufficient digits" link="23" stubbed="0" >nPrepaidReturnCode == -4</result>
            <result name="no destination given" link="23" stubbed="0" >nPrepaidReturnCode == -5</result>
            <result name="time avail &lt; min threshold" link="23" stubbed="0" >nPrepaidReturnCode == -6



AND bClick2Dial == false



AND g_oAPI.strCallType != s_CT_PREPAID_IVR</result>
            <result name="no subrate - block call" link="23" stubbed="0" >nPrepaidReturnCode == -7</result>
            <result name="dest not in phone list" link="23" stubbed="0" >nPrepaidReturnCode == -8</result>
            <result name="success - unlimited time" >nPrepaidReturnCode == 1</result>
            <result name="no rates" link="23" stubbed="0" >nPrepaidReturnCode == -9</result>
            <result name="low balance &amp; click2dial" link="30" stubbed="0" >bClick2Dial == true



AND (nPrepaidReturnCode == -6



OR nPrepaidReturnCode == -10)</result>
            <result name="zero cost enabled - rated call" link="23" stubbed="0" >nPrepaidReturnCode == -10



AND bClick2Dial == false



AND g_oAPI.strCallType != s_CT_PREPAID_IVR</result>
            <result name="out of calling plan" link="23" stubbed="0" >nPrepaidReturnCode == -11</result>
          </results>
          <scripts >
            <script language="javascript" timing="middle" ><![CDATA[//set the message number



switch( Session.nPrepaidReturnCode ) {



	case -3: //destination restricted



	case -7: //no subrate - block call



	case -8: //dest not in phone list



	case -9: //no rates



		Session.nPromptId = 513 ; break ;







	case -4: //insufficient digits



	case -5: //no destination given



		Session.nPromptId = 514 ; break ;







	case -6: //time avail < min threshold



	case -10: // zero cost enabled and rates applied for call



			//in this case, forward to the ivr for recharge, given them 15 mins to recharge



			if (Session.g_oAPI.nBillingType == Session.s_BT_PREPAID)



			{



				Session.g_oAPI.strCallType = Session.s_CT_PREPAID_IVR ;



			}



			else



			{



				Session.nPromptId = 507;



			}



			break;



	case -11: //BLOCK_CALL_OUT_OF_CALLING_PLAN



		Server.logInfo("Auth Dest returned -11: Block call - out of calling plan.");



		Session.nPromptId = 513;



		break;	







	default:



		break ;



}



]]></script>
            <script language="javascript" timing="last" ><![CDATA[//set the single max call timer, we'll use for both prepaid and postpaid



Server.logInfo("There are " + Session.g_oSub.nSecondsAvailable + " seconds for this call."); 



Server.logInfo("Result id = " + Result.id); 



Server.logInfo("Return code = " + Session.nPrepaidReturnCode); 







// set the API strDestToSend to the the one that's passed back from AuthDest



// in case AuthDest changed it ...



//Session.g_oAPI.strDestToSend = Session.g_oCallLegs[1].strOutdialDestNbr;



//rh - authOrig does all of the required number translation. It's possible to have the



// service level dialing rules overwritten in authDest, so just use the one that came 



// back from authOrig.



Session.g_oCallLegs[1].strOutdialDestNbr = Session.g_oAPI.strDestToSend;



 



// if the CallType is s_CT_PREPAID_IVR then finish setting the call up for



// the forwarding to IVR. This was broken out seeing this can occur two ways



if (Session.g_oAPI.strCallType == Session.s_CT_PREPAID_IVR)



{



	// reset the rate object so we do not charge for the call ...



	js_initRATE (Session.g_oRate);







	Session.g_oCallLegs[1].strDestRouteType = Session.s_RT_ON_NET ;







	/* send subscriber id to the app so it doesn't have to look it up */



	Session.g_oProxyList[0] = Session.s_strNiuAddress + ";target=pcs_voip_prepaid_ivr;sub_id=" ;



	Session.g_oProxyList[0] += Session.g_oSub.lSubscriberId ;



	Session.g_oProxyList[0] += ";sp_id=" ;



	Session.g_oProxyList[0] += Session.g_oSub.lSPId ;



	Session.g_oProxyList[0] += ";off_id=" ;



	Session.g_oProxyList[0] += Session.g_oSub.nPrimaryOfferingId ;



	Session.g_oProxyList[0] += ";curr_id=" ;



	Session.g_oProxyList[0] += Session.g_oSub.nCurrencyId ;



	Session.g_oProxyList[0] += ";lang=" ;



	Session.g_oProxyList[0] += Session.g_oAccessLine.strLanguage ;



	Session.g_oProxyList[0] += ";exp_type=" ;



	Session.g_oProxyList[0] += Session.g_oSub.nExpirationType ;



	Session.g_oProxyList[0] += ";bal=" ;



	Session.g_oProxyList[0] += Math.round(Session.g_oSub.fPrepaidBalance*100)/100 ;



	Session.g_oProxyList[0] += ";force=yes" ;







	Session.g_oVoipService.nMaxCallDuration = 1000 ;



}



]]></script>
          </scripts>
        </action>
        <action id="19" plug-in="Pactolus.MGCPPlay.1" ><?xtml-editor x=841 y=850 ?>
          <!--Play message indicating why call cannot be completed-->
          <play xmlns="urn:www.pactolus.com:xtml:media" connection-id="g_oMS.strConnectionId" endpoint="g_oMS.strEndPoint" callid="g_oMS.strCallId" repeat="1" timeout="40" ms-type="s_strMsType" returns="nReturnCode" start-play="1" interrupt="0" return-immediate="0" digit-map="" language="g_oAccessLine.strLanguage" digits="" retry-count="" clear-digits="1" terminating-digit="" quick-collect="0" digit-timer="" >
            <audio type="index" >nPromptId</audio>
          </play>
          <results >
            <result name="Default" link="15" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
        </action>
        <action id="20" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=561 y=852 ?>
          <!--DirectCallerToMS-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;DirectCallerToMS&quot;" return="nReturnCode" external-function="1" library="lib_mediaserver.xml" >
            <parameter >g_oCallLegs[0]</parameter>
            <parameter >g_oMS</parameter>
          </function>
          <results >
            <result name="Default" link="8" stubbed="0"/>
            <result name="success" link="19" stubbed="0" >nReturnCode == 0</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_oCallLegs[0].strContent = Session.g_oCallLegs[0].strRemoteSdp;











]]></script>
            <script language="javascript" timing="last" ><![CDATA[if ( 0 == Session.nReturnCode ) {



	Session.g_oCallLegs[0].bConnected = true ;



}



else {



	Session.strResponse = "SIP/2.0 503 Service Unavailable" ;



}]]></script>
          </scripts>
        </action>
        <action id="21" plug-in="Pactolus.Branch.1" ><?xtml-editor x=278 y=668 ?>
          <results >
            <result name="Default" link="7" stubbed="0"/>
            <result name="Rate this call?" link="17" stubbed="0" >bRateCallAttempt == true</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.nReturnCode = 0;



if (Session.g_oAPI.nBillingType == Session.s_BT_POSTPAID)



{



	Session.g_oAPI.strPostPaidFlag = "T";



}







Session.bRateCallAttempt = false ;



if ( Session.g_oAPI.bRateCalls && Session.s_CT_NORMAL == Session.g_oAPI.strCallType ) {
//	(Session.s_CT_INTERNAL_CALL == Session.g_oAPI.strCallType ||
//	(Session.s_CT_NORMAL == Session.g_oAPI.strCallType ||
//	Session.s_CT_SCHED_REMIND_ME == Session.g_oAPI.strCallType ) ){

	if (Session.s_RT_ON_NET == Clib.atoi(Session.g_oAPI.strDestOnNet)) {
		Server.logInfo("IP to IP call - call will not be rated");
		Session.bRateCallAttempt = false ;
	} else {
		Session.bRateCallAttempt = true ;
		Server.logInfo("This call attempt will be rated") ;
	}


}]]></script>
          </scripts>
        </action>
        <action id="23" plug-in="Pactolus.Branch.1" ><?xtml-editor x=335 y=855 ?>
          <results >
            <result name="Default" link="20" stubbed="0"/>
            <result name="click2dial" link="24" stubbed="0" >bClick2Dial == true</result>
          </results>
        </action>
        <action id="24" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=549 y=1018 ?>
          <!--FAILURE-->
          <return xmlns="urn:www.pactolus.com:xtml:application" value="nPrepaidReturnCode"/>
        </action>
        <action id="25" plug-in="Pactolus.Branch.1" ><?xtml-editor x=398 y=520 ?>
          <results >
            <result name="Default" link="14" stubbed="0"/>
            <result name="click2dial" link="24" stubbed="0" >bClick2Dial == true</result>
            <result name="IVR Menu" link="29" stubbed="0" >bIVRMenu == true</result>
            <result name="IVR Transfer" link="33" stubbed="0" >bIVRTransfer == true</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[if( Session.bClick2Dial ) {



	Session.nPrepaidReturnCode = Session.nReturnCode ;



}]]></script>
          </scripts>
        </action>
        <action id="26" plug-in="Pactolus.Branch.1" ><?xtml-editor x=527 y=368 ?>
          <results >
            <result name="Default" link="8" stubbed="0"/>
            <result name="click2dial" link="24" stubbed="1" >bClick2Dial == true</result>
          </results>
        </action>
        <action id="27" plug-in="Pactolus.Branch.1" ><?xtml-editor x=972 y=604 ?>
          <results >
            <result name="Default" link="15" stubbed="0"/>
            <result name="nMsgNumber != 0" link="29" stubbed="0" >nMsgNumber != 0</result>
          </results>
        </action>
        <action id="29" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=1232 y=463 ?>
          <!--Play message number and then hangup-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;PlayMsgNumberAndHangup&quot;" return="nReturnCode" external-function="0" library="" >
            <parameter >g_oMS</parameter>
            <parameter >g_oCallLegs[0]</parameter>
            <parameter >nMsgNumber</parameter>
            <parameter >"eng"</parameter>
          </function>
          <results >
            <result name="Default" link="5" stubbed="0"/>
          </results>
        </action>
        <action id="30" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=394 y=1091 ?>
          <!--FAILURE-->
          <return xmlns="urn:www.pactolus.com:xtml:application" value="s_LOW_BALANCE_CLICK2DIAL"/>
        </action>
        <action id="31" plug-in="Pactolus.UserFunction.1" ><?xtml-editor x=1215 y=295 ?>
          <!--PACTOLUS_ps_snmp_event-->
          <user-function xmlns="urn:www.pactolus.com:xtml:application" process="&quot;PACTOLUS_ps_snmp_event&quot;" function="&quot;increment_event_counter&quot;" timeout="s_nShortTimeout" return="nReturnCode" async="0" >
            <parameter >"dbase-error"</parameter>
          </user-function>
          <results >
            <result name="Default" link="5" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="last" ><![CDATA[Server.logError("Log SNMP event returned: " + Session.nReturnCode + ", exit on " + Result.name);]]></script>
          </scripts>
        </action>
        <action id="32" plug-in="Pactolus.Branch.1" ><?xtml-editor x=967 y=348 ?>
          <results >
            <result name="Default" link="5" stubbed="0"/>
            <result name="SNMPEvent" link="31" stubbed="0" >bSNMPEvent == true</result>
          </results>
        </action>
        <action id="33" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=609 y=616 ?>
          <!--outdial from MS-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;MSOutdialParty&quot;" return="nReturnCode" external-function="1" library="lib_mediaserver.xml" >
            <parameter >g_oCallLegs[0]</parameter>
            <parameter >g_oMS</parameter>
            <parameter >strContact</parameter>
          </function>
          <results >
            <result name="Default" link="15" stubbed="0"/>
            <result name="success" link="13" stubbed="0" >nReturnCode == 0</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("Outdialing from MS, ms type: " + Session.g_oMS.strType ) ;



Server.logInfo("Request-URI for remote party: " + Session.g_oCallLegs[0].strRemoteUri ) ;



Server.logInfo("Remote SDP: " + Session.g_oCallLegs[0].strRemoteSdp ) ;]]></script>
          </scripts>
        </action>
      </actions>
      <text-objects >
        <text-object x-coord="45" y-coord="24" width="808" height="75" text="If the INVITE request does not have a ProxyAuthorization header, reject it.



Otherwise, validate the credentials and allow only valid, active subscribers to pass." font-name="Times New Roman" size="-20" red="0" green="0" blue="0" weight="400" underline="0" strikeout="0" point-size="12" italic="0"/>
      </text-objects>
    </function>
    <function name="ActivateSubscriber" start="1" event="ActivateSubscriber" returns="boolean" >
      <local-vars >
        <var name="bActivated" type="boolean" >0</var>
        <var name="nReturnCode" type="i4" >0</var>
        <var name="bPostActivationIndexPrompt" type="boolean" >0</var>
        <var name="bPostActivationUrlPrompt" type="boolean" >0</var>
        <var name="strDigits" type="string" ></var>
        <var name="nRetries" type="i4" >0</var>
        <var name="bCorrectPinEntered" type="boolean" >0</var>
        <var name="nMsgNo" type="i4" >0</var>
      </local-vars>
      <actions >
        <action id="1" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=28 y=32 ?>
          <!--DirectCallerToMS-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;DirectCallerToMS&quot;" return="nReturnCode" external-function="1" library="lib_mediaserver.xml" >
            <parameter >g_oCallLegs[0]</parameter>
            <parameter >g_oMS</parameter>
          </function>
          <results >
            <result name="Default" link="18" stubbed="0"/>
            <result name="success" link="16" stubbed="0" >nReturnCode == 0</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_oCallLegs[0].strContent = Session.g_oCallLegs[0].strRemoteSdp;



]]></script>
            <script language="javascript" timing="last" ><![CDATA[if ( 0 == Session.nReturnCode ) {



	Session.g_oCallLegs[0].bConnected = true ;



}]]></script>
          </scripts>
        </action>
        <action id="2" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=825 y=656 ?>
          <return xmlns="urn:www.pactolus.com:xtml:application" value="bActivated"/>
        </action>
        <action id="6" plug-in="Pactolus.MGCPPlay.1" ><?xtml-editor x=318 y=192 ?>
          <!--prompt and collect activation pin-->
          <play xmlns="urn:www.pactolus.com:xtml:media" connection-id="g_oMS.strConnectionId" endpoint="g_oMS.strEndPoint" callid="g_oMS.strCallId" repeat="1" timeout="s_nLongTimeout" ms-type="g_oMS.strType" returns="nReturnCode" start-play="1" interrupt="1" return-immediate="0" digit-map="&quot;(x.#|x.T)&quot;" language="g_oAccessLine.strLanguage" digits="strDigits" retry-count="3" clear-digits="1" terminating-digit="" quick-collect="0" digit-timer="" >
            <audio type="index" >2001</audio>
            <audio type="index" >2002</audio>
            <timeout-prompt type="index" >552</timeout-prompt>
          </play>
          <results >
            <result name="Default" link="20" stubbed="1"/>
            <result name="Success" link="7" stubbed="0"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
        </action>
        <action id="7" plug-in="Pactolus.Branch.1" ><?xtml-editor x=61 y=363 ?>
          <results >
            <result name="Default" link="8" stubbed="1"/>
            <result name="correct pin entered" link="25" stubbed="0" >bCorrectPinEntered == true</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.nRetries++ ;



Server.logInfo("pin entered: " + Session.strDigits + ", correct pin: " + Session.g_oAccessLine.strActivationPin ) ;



Session.bCorrectPinEntered = false ;



if( Session.strDigits == Session.g_oAccessLine.strActivationPin ) {



	Session.bCorrectPinEntered = true ;



}]]></script>
          </scripts>
        </action>
        <action id="8" plug-in="Pactolus.MGCPPlay.1" ><?xtml-editor x=545 y=166 ?>
          <!--Invalid pin prompt-->
          <play xmlns="urn:www.pactolus.com:xtml:media" connection-id="g_oMS.strConnectionId" endpoint="g_oMS.strEndPoint" callid="g_oMS.strCallId" repeat="1" timeout="s_nLongTimeout" ms-type="g_oMS.strType" returns="nReturnCode" start-play="1" interrupt="1" return-immediate="0" digit-map="" language="g_oAccessLine.strLanguage" digits="" retry-count="" clear-digits="1" terminating-digit="" quick-collect="0" digit-timer="" >
            <audio type="index" >2005</audio>
          </play>
          <results >
            <result name="Default" link="6" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
            <result name="retries exceeded" link="20" stubbed="1" >nRetries &gt;= 3</result>
          </results>
        </action>
        <action id="16" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=71 y=190 ?>
          <!--PlayBrandingPrompt - First use-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;PlayBrandingPrompt&quot;" return="nReturnCode" external-function="1" library="lib_mediaserver.xml" >
            <parameter >g_oMS</parameter>
            <parameter >g_oAccessLine.strLanguage</parameter>
            <parameter >g_oVoipService.strPreActivationPromptType</parameter>
            <parameter >g_oVoipService.nPreActivationPromptIndex</parameter>
            <parameter >g_oVoipService.strPreActivationPromptUrl</parameter>
          </function>
          <results >
            <result name="Default" link="6" stubbed="0"/>
          </results>
          <scripts >
            <script language="javascript" timing="last" ><![CDATA[Server.logInfo("Play Branding Prompt - first use returns: " + Session.nReturnCode) ;]]></script>
          </scripts>
        </action>
        <action id="17" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=510 y=464 ?>
          <!--PlayBrandingPrompt - Successful activation-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;PlayBrandingPrompt&quot;" return="" external-function="1" library="lib_mediaserver.xml" >
            <parameter >g_oMS</parameter>
            <parameter >g_oAccessLine.strLanguage</parameter>
            <parameter >g_oVoipService.strSuccessActivationPromptType</parameter>
            <parameter >g_oVoipService.nSuccessActivationPromptIndex</parameter>
            <parameter >g_oVoipService.strSuccessActivationPromptUrl</parameter>
          </function>
          <results >
            <result name="Default" link="21" stubbed="0"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.bActivated = true ;]]></script>
          </scripts>
        </action>
        <action id="18" plug-in="Pactolus.SipResponse.1" ><?xtml-editor x=294 y=19 ?>
          <!--503 Service Unavailable-->
          <sip-response xmlns="urn:www.pactolus.com:xtml:sip" remove-via="0" reliable="0" increment-cseq-first="0" increment-cseq-last="0" >
            <call-id >g_oCallLegs[0].strCallId</call-id>
            <cseq >g_oCallLegs[0].strCSeq</cseq>
            <from >g_oCallLegs[0].strFrom</from>
            <status >"SIP/2.0 480 Temporarily Unavailable"</status>
            <to >g_oCallLegs[0].strTo</to>
            <via >g_oCallLegs[0].strVia</via>
          </sip-response>
          <results >
            <result name="Default" link="19" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
        </action>
        <action id="19" plug-in="Standard.EndSession.1" ><?xtml-editor x=535 y=38 ?></action>
        <action id="20" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=15 y=628 ?>
          <!--PlayBrandingPrompt - Failed activation-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;PlayBrandingPrompt&quot;" return="" external-function="1" library="lib_mediaserver.xml" >
            <parameter >g_oMS</parameter>
            <parameter >g_oAccessLine.strLanguage</parameter>
            <parameter >g_oVoipService.strFailActivationPromptType</parameter>
            <parameter >g_oVoipService.nFailActivationPromptIndex</parameter>
            <parameter >g_oVoipService.strFailActivationPromptUrl</parameter>
          </function>
          <results >
            <result name="Default" link="23" stubbed="0"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.nMsgNo = Session.s_nMSG_NUM_BAD_ACTIVATION_PIN ;]]></script>
          </scripts>
        </action>
        <action id="21" plug-in="Pactolus.MGCPPlay.1" ><?xtml-editor x=750 y=445 ?>
          <!--play prompt confirming service activation-->
          <play xmlns="urn:www.pactolus.com:xtml:media" connection-id="g_oMS.strConnectionId" endpoint="g_oMS.strEndPoint" callid="g_oMS.strCallId" repeat="1" timeout="s_nLongTimeout" ms-type="g_oMS.strType" returns="nReturnCode" start-play="1" interrupt="1" return-immediate="0" digit-map="" language="g_oAccessLine.strLanguage" digits="" retry-count="" clear-digits="1" terminating-digit="" quick-collect="0" digit-timer="" >
            <audio type="index" >2003</audio>
            <audio type="index" >2004</audio>
          </play>
          <results >
            <result name="Default" link="24" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
        </action>
        <action id="23" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=339 y=675 ?>
          <!--PlayMsgNumberAndHangup-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;PlayMsgNumberAndHangup&quot;" return="" external-function="0" library="" >
            <parameter >g_oMS</parameter>
            <parameter >g_oCallLegs[0]</parameter>
            <parameter >nMsgNo</parameter>
            <parameter >g_oAccessLine.strLanguage</parameter>
          </function>
          <results >
            <result name="Default" link="2" stubbed="1"/>
          </results>
        </action>
        <action id="24" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=615 y=654 ?>
          <!--HangUpParty-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;HangUpParty&quot;" return="" external-function="1" library="lib_callcontrol.xml" >
            <parameter >g_oCallLegs[0]</parameter>
            <parameter >s_strLocalUri</parameter>
          </function>
          <results >
            <result name="Default" link="2" stubbed="0"/>
          </results>
        </action>
        <action id="25" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=257 y=443 ?>
          <!--VoipActivateAccessLine-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;VoipActivateAccessLine&quot;" return="nReturnCode" external-function="1" library="lib_APISce.xml" >
            <parameter >g_oAPI</parameter>
            <parameter >g_oAccessLine.lAccessLineId</parameter>
            <parameter >strDigits</parameter>
          </function>
          <results >
            <result name="Default" link="20" stubbed="0"/>
            <result name="success" link="17" stubbed="0" >nReturnCode == 0</result>
            <result name="DB Error" link="23" stubbed="0" >nReturnCode == -99</result>
          </results>
          <scripts >
            <script language="javascript" timing="last" ><![CDATA[if( 0 != Session.nReturnCode ) {



	Server.logError("Unexpected failure validating activation pin. " +



		"Pin entered: " + Session.strDigits + ". Pin retrieved: " + Session.g_oAccessLine.strActivationPin + ". Return code: " + Session.nReturnCode ) ;



}



if( -99 == Session.nReturnCode ) {



	Session.nMsgNo = Session.s_nMSG_NUM_JVM_ERROR ;



}]]></script>
          </scripts>
        </action>
      </actions>
    </function>
    <function name="PlayMsgNumberAndHangup" start="5" event="PlayMsgNumberAndHangup" returns="void" >
      <parameters >
        <parameter name="oMS" type="object" pass="byref"/>
        <parameter name="oCallLeg" type="object" pass="byref"/>
        <parameter name="nMsgNumber" type="i4" pass="byref"/>
        <parameter name="strLanguage" type="string" pass="byref"/>
      </parameters>
      <local-vars >
        <var name="nReturnCode" type="i4" >0</var>
        <var name="strCallStart" type="string" ></var>
      </local-vars>
      <actions >
        <action id="5" plug-in="Pactolus.Branch.1" ><?xtml-editor x=71 y=134 ?>
          <results >
            <result name="Default" link="1" stubbed="0"/>
            <result name="failed 911 Call" link="10" stubbed="0" >g_oAPI.strCallType == s_CT_911</result>
          </results>
        </action>
        <action id="1" plug-in="Pactolus.MGCPPlay.1" ><?xtml-editor x=365 y=86 ?>
          <!--Play message number and goodbye-->
          <play xmlns="urn:www.pactolus.com:xtml:media" connection-id="oMS.strConnectionId" endpoint="oMS.strEndPoint" callid="oMS.strCallId" repeat="1" timeout="s_nLongTimeout" ms-type="oMS.strType" returns="" start-play="1" interrupt="1" return-immediate="0" digit-map="" language="strLanguage" digits="" retry-count="" clear-digits="1" terminating-digit="" quick-collect="0" digit-timer="" >
            <audio type="index" >365</audio>
            <audio type="number" >nMsgNumber</audio>
            <audio type="silence" >1</audio>
            <audio type="index" >322</audio>
          </play>
          <results >
            <result name="Default" link="4" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
        </action>
        <action id="3" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=887 y=167 ?>
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
        </action>
        <action id="4" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=632 y=141 ?>
          <!--HangUpParty-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;HangUpParty&quot;" return="" external-function="1" library="lib_callcontrol.xml" >
            <parameter >oCallLeg</parameter>
            <parameter >s_strLocalUri</parameter>
          </function>
          <results >
            <result name="Default" link="3" stubbed="0"/>
          </results>
        </action>
        <action id="6" plug-in="Pactolus.UserFunction.1" ><?xtml-editor x=893 y=384 ?>
          <!--PACTOLUS_ps_snmp_event-->
          <user-function xmlns="urn:www.pactolus.com:xtml:application" process="&quot;PACTOLUS_ps_snmp_event&quot;" function="&quot;increment_event_counter&quot;" timeout="s_nShortTimeout" return="nReturnCode" async="0" >
            <parameter >"dbase-error"</parameter>
          </user-function>
          <results >
            <result name="Default" link="3" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="last" ><![CDATA[Server.logError("Log SNMP event returned: " + Session.nReturnCode + ", exit on " + Result.name);]]></script>
          </scripts>
        </action>
        <action id="7" plug-in="Pactolus.MGCPPlay.1" ><?xtml-editor x=409 y=329 ?>
          <!--Play message number and goodbye-->
          <play xmlns="urn:www.pactolus.com:xtml:media" connection-id="oMS.strConnectionId" endpoint="oMS.strEndPoint" callid="oMS.strCallId" repeat="1" timeout="s_nLongTimeout" ms-type="oMS.strType" returns="" start-play="1" interrupt="1" return-immediate="0" digit-map="" language="strLanguage" digits="" retry-count="" clear-digits="1" terminating-digit="" quick-collect="0" digit-timer="" >
            <audio type="silence" >.5</audio>
            <audio type="index" >nMsgNumber</audio>
            <audio type="silence" >.5</audio>
            <audio type="index" >322</audio>
          </play>
          <results >
            <result name="Default" link="4" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
        </action>
        <action id="10" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=118 y=354 ?>
          <!--VoipSendEmergencyCallFailureEmail-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;VoipSendEmergencyCallFailureEmail&quot;" return="nReturnCode" external-function="1" library="lib_APISce.xml" >
            <parameter >g_oAPI</parameter>
            <parameter >g_oSub</parameter>
            <parameter >strCallStart</parameter>
          </function>
          <results >
            <result name="Default" link="7" stubbed="0"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[var callStart = new Date();



callStart.setUTCMilliseconds(Session.g_oCallLegs[1].lTimeStart);



Session.strCallStart = callStart.toGMTString();







]]></script>
          </scripts>
        </action>
      </actions>
    </function>
    <function name="OnTimer" start="1" event="OnTimer" returns="void" >
      <parameters >
        <parameter name="nTimerId" type="i4" pass="byref"/>
      </parameters>
      <local-vars >
        <var name="nSecondsToPlay" type="i4" >0</var>
        <var name="nReturn" type="i4" >0</var>
        <var name="nStatus" type="i4" >0</var>
        <var name="strTo" type="string" ></var>
        <var name="strFrom" type="string" ></var>
        <var name="nSessionTimer" type="i4" >0</var>
        <var name="bPlayInterrupt" type="boolean" >0</var>
      </local-vars>
      <actions >
        <action id="1" plug-in="Pactolus.Branch.1" ><?xtml-editor x=28 y=267 ?>
          <results >
            <result name="Default" link="2" stubbed="0"/>
            <result name="credential timer" link="3" stubbed="0" >nTimerId == g_lRetryInviteTimer</result>
            <result name="threshold 1" link="15" stubbed="0" >nTimerId == g_oTimer.lThresholdTimer1</result>
            <result name="threshold 2" link="15" stubbed="0" >nTimerId == g_oTimer.lThresholdTimer2</result>
            <result name="threshold 3" link="15" stubbed="0" >nTimerId == g_oTimer.lThresholdTimer3</result>
            <result name="max duration" link="13" stubbed="0" >nTimerId == g_oTimer.lMaxCallDuration</result>
            <result name="refresh B leg" link="17" stubbed="0" >nTimerId == g_oCallLegs[1].nSessionTimerId</result>
            <result name="moh interrupt timer" link="21" stubbed="0" >nTimerId == g_nInterruptTimer</result>
            <result name="reservation timer" link="22" stubbed="0" >nTimerId == g_oTimer.lReservationTimer</result>
          </results>
          <scripts >
            <script language="javascript" timing="last" ><![CDATA[switch( Result.id ) {



	case 3:



		Session.nSecondsToPlay = Session.g_oAPI.nWarningThreshold1 ;



		break ;



		



	case 4:



		Session.nSecondsToPlay = Session.g_oAPI.nWarningThreshold2 ;



		break ;



		



	case 5:



		Session.nSecondsToPlay = Session.g_oAPI.nWarningThreshold3 ;



		break ;



		



	default:



		break ;



}



		



		]]></script>
          </scripts>
        </action>
        <action id="2" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=6 y=34 ?>
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logError("Unexpected timer id: " + Session.nTimerId ) ;]]></script>
          </scripts>
        </action>
        <action id="3" plug-in="Standard.EndSession.1" ><?xtml-editor x=103 y=88 ?></action>
        <action id="5" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=680 y=240 ?>
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
        </action>
        <action id="6" plug-in="Pactolus.Hold.1" ><?xtml-editor x=313 y=686 ?>
          <!--Put A on hold-->
          <cc-hold xmlns="urn:www.pactolus.com:xtml:sip-cc" to="strFrom" from="strTo" ingress-gateway="g_oCallLegs[0].strRemoteUri" cseq="g_oCallLegs[0].strCSeq" call-id="g_oCallLegs[0].strCallId" sdp="g_oCallLegs[1].strRemoteSdp" status="nStatus" route="g_oCallLegs[0].strRoute" record-route="" contact="g_oCallLegs[0].strContact"/>
          <results >
            <result name="Default" link="14" stubbed="1"/>
            <result name="Success" link="8" stubbed="0"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[if( Session.g_oCallLegs[0].bUac ) {



	Session.strTo = Session.g_oCallLegs[0].strTo ;



	Session.strFrom = Session.g_oCallLegs[0].strFrom ;



}



else {



	Session.strTo = Session.g_oCallLegs[0].strFrom ;



	Session.strFrom = Session.g_oCallLegs[0].strTo ;



}]]></script>
          </scripts>
        </action>
        <action id="8" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=570 y=695 ?>
          <!--outdial from MS-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;MSOutdialParty&quot;" return="nReturn" external-function="1" library="lib_mediaserver.xml" >
            <parameter >g_oCallLegs[0]</parameter>
            <parameter >g_oMS</parameter>
            <parameter >g_oCallLegs[0].strContact</parameter>
          </function>
          <results >
            <result name="Default" link="14" stubbed="1"/>
            <result name="success" link="9" stubbed="0" >nReturn == s_RET_SUCCESS</result>
            <result name="caller hung up" >nReturn == s_RET_CALLER_HUNGUP</result>
          </results>
        </action>
        <action id="9" plug-in="Pactolus.MGCPPlay.1" ><?xtml-editor x=799 y=702 ?>
          <!--Goodbye-->
          <play xmlns="urn:www.pactolus.com:xtml:media" connection-id="g_oMS.strConnectionId" endpoint="g_oMS.strEndPoint" callid="g_oMS.strCallId" repeat="1" timeout="s_nLongTimeout" ms-type="g_oMS.strType" returns="" start-play="1" interrupt="0" return-immediate="0" digit-map="" language="g_oAccessLine.strLanguage" digits="" retry-count="" clear-digits="0" terminating-digit="" quick-collect="0" digit-timer="" >
            <audio type="index" >322</audio>
          </play>
          <results >
            <result name="Default" link="10" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
        </action>
        <action id="10" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=1050 y=748 ?>
          <!--delete MS connection-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;DeleteMSConnection&quot;" return="" external-function="1" library="lib_mediaserver.xml" >
            <parameter >g_oMS</parameter>
          </function>
          <results >
            <result name="Default" link="14" stubbed="0"/>
          </results>
        </action>
        <action id="11" plug-in="Standard.EndSession.1" ><?xtml-editor x=679 y=932 ?></action>
        <action id="13" plug-in="Pactolus.SipBye.1" ><?xtml-editor x=73 y=664 ?>
          <!--Hang up B-->
          <sip-bye xmlns="urn:www.pactolus.com:xtml:sip" add-record-route="0" add-via="1" timeout="3" handle-responses="1" increment-cseq-first="0" increment-cseq-last="0" >
            <call-id >g_oCallLegs[1].strCallId</call-id>
            <contact >g_oCallLegs[1].strContact</contact>
            <cseq >g_oCallLegs[1].strCSeq</cseq>
            <from >g_oCallLegs[1].strFrom</from>
            <request-uri >g_oCallLegs[1].strRemoteUri</request-uri>
            <route >g_oCallLegs[1].strRoute</route>
            <to >g_oCallLegs[1].strTo</to>
          </sip-bye>
          <results >
            <result name="Default" link="6" stubbed="0"/>
            <result name="Success"/>
            <result name="Client error (4xx)"/>
            <result name="Server error (5xx)"/>
            <result name="Global error (6xx)"/>
            <result name="Timeout"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_oCallLegs[1].nTerminationReason = Session.g_oAPI.nCallTerminationReason = Session.s_TR_NO_MONEY;



Server.logInfo("Caller ran out of money (and time)") ;



]]></script>
          </scripts>
        </action>
        <action id="14" plug-in="Pactolus.SipBye.1" ><?xtml-editor x=345 y=885 ?>
          <!--Hang up A-->
          <sip-bye xmlns="urn:www.pactolus.com:xtml:sip" add-record-route="0" add-via="1" timeout="3" handle-responses="1" increment-cseq-first="0" increment-cseq-last="0" >
            <call-id >g_oCallLegs[0].strCallId</call-id>
            <contact >g_oCallLegs[0].strContact</contact>
            <cseq >g_oCallLegs[0].strCSeq</cseq>
            <from >strFrom</from>
            <request-uri >g_oCallLegs[0].strRemoteUri</request-uri>
            <route >g_oCallLegs[0].strRoute</route>
            <to >strTo</to>
          </sip-bye>
          <results >
            <result name="Default" link="11" stubbed="0"/>
            <result name="Success"/>
            <result name="Client error (4xx)"/>
            <result name="Server error (5xx)"/>
            <result name="Global error (6xx)"/>
            <result name="Timeout"/>
            <result name="Error"/>
          </results>
        </action>
        <action id="15" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=328 y=237 ?>
          <!--bbtelPlayThresholdsPrompt-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;bbtelPlayThresholdsPrompt&quot;" return="" external-function="1" library="lib_voip.xml" >
            <parameter >g_oCallLegs[0]</parameter>
            <parameter >g_oCallLegs[1]</parameter>
            <parameter >g_oMS</parameter>
            <parameter >g_oAPI</parameter>
            <parameter >nSecondsToPlay</parameter>
          </function>
          <results >
            <result name="Default" link="5" stubbed="0"/>
          </results>
        </action>
        <action id="16" plug-in="Standard.Timer.1" ><?xtml-editor x=839 y=496 ?>
          <!--reset B leg session timer-->
          <timer xmlns="urn:www.pactolus.com:xtml:application" start="1" id="g_oCallLegs[1].nSessionTimerId" duration="nSessionTimer"/>
          <results >
            <result name="Default" link="18" stubbed="0"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.nSessionTimer = Session.g_oCallLegs[1].nSessionTimer / 2 ;



Server.logInfo("Next refreshing reINVITE on B leg in: " + Session.nSessionTimer + " seconds ") ;]]></script>
          </scripts>
        </action>
        <action id="17" plug-in="Pactolus.SipInvite.1" ><?xtml-editor x=531 y=352 ?>
          <!--Send reINVITE on B leg-->
          <sip-invite xmlns="urn:www.pactolus.com:xtml:sip" add-record-route="0" add-via="1" handle-responses="1" follow-redirection="0" final-response-status="nStatus" response-content="" response-content-type="" final-request-uri="" timeout-for-final-response="20" timeout-for-provisional-response="s_nShortTimeout" record-route="" contact="" response-to="" use-session-timer="0" session-expires="" min-supported-session-timer="" refresher="" remote-party-id="" increment-cseq-first="0" increment-cseq-last="0" >
            <authorization >g_oCallLegs[0].strAuthorization</authorization>
            <call-id >g_oCallLegs[1].strCallId</call-id>
            <contact >s_strLocalUri</contact>
            <content >g_oCallLegs[0].strRemoteSdp</content>
            <content-disposition >g_oCallLegs[0].strContentDisposition</content-disposition>
            <content-type >g_oCallLegs[0].strContentType</content-type>
            <cseq >g_oCallLegs[1].strCSeq</cseq>
            <encryption >g_oCallLegs[0].strEncryption</encryption>
            <from >g_oCallLegs[1].strFrom</from>
            <proxy-authorization >g_oCallLegs[0].strProxyAuthorization</proxy-authorization>
            <proxy-require >g_oCallLegs[0].strProxyRequire</proxy-require>
            <request-uri >g_oCallLegs[1].strRemoteUri</request-uri>
            <require >g_oCallLegs[0].strRequire</require>
            <response-key >g_oCallLegs[0].strResponseKey</response-key>
            <route >g_oCallLegs[1].strRoute</route>
            <session-expires >g_oCallLegs[1].strSessionExpires</session-expires>
            <supported >"timer"</supported>
            <to >g_oCallLegs[1].strTo</to>
          </sip-invite>
          <results >
            <result name="Default" link="20" stubbed="0"/>
            <result name="Success" link="16" stubbed="0"/>
            <result name="Redirect (3xx)"/>
            <result name="Client error (4xx)"/>
            <result name="Server error (5xx)"/>
            <result name="Global error (6xx)"/>
            <result name="Provisional Timeout"/>
            <result name="Final Timeout"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("Time to send session timer refresh to B leg");



Server.enableEvents(false) ;]]></script>
            <script language="javascript" timing="last" ><![CDATA[Server.enableEvents(true) ;]]></script>
          </scripts>
        </action>
        <action id="18" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=1124 y=511 ?>
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
        </action>
        <action id="19" plug-in="Standard.EndSession.1" ><?xtml-editor x=1064 y=354 ?></action>
        <action id="20" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=827 y=355 ?>
          <!--Hang Up Party-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;HangUpParty&quot;" return="" external-function="1" library="lib_callcontrol.xml" >
            <parameter >g_oCallLegs[0]</parameter>
            <parameter >s_strLocalUri</parameter>
          </function>
          <results >
            <result name="Default" link="19" stubbed="0"/>
          </results>
        </action>
        <action id="21" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=144 y=1131 ?>
          <!--bbtel_moh-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;bbtel_moh&quot;" return="" external-function="1" library="lib_voip.xml" >
            <parameter >g_oCallLegs[1]</parameter>
            <parameter >g_oMS</parameter>
            <parameter >g_oAPI</parameter>
            <parameter >g_oAccessLine.oSub.strLanguage</parameter>
            <parameter >g_nInterruptTimer</parameter>
            <parameter >g_nInterruptPlays</parameter>
            <parameter >bPlayInterrupt</parameter>
          </function>
          <results >
            <result name="Default" link="18" stubbed="0"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_nInterruptPlays++;



Session.bPlayInterrupt = true;



Server.logInfo("Playing Interrupt Message");]]></script>
          </scripts>
        </action>
        <action id="22" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=422 y=47 ?>
          <!--commitAndReserve-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;psAPICommitAndReserve&quot;" return="nReturn" external-function="1" library="lib_APISce.xml" >
            <parameter >g_oAPI</parameter>
            <parameter >g_oRate</parameter>
            <parameter >g_oSub</parameter>
            <parameter >g_oCallLegs[1]</parameter>
            <parameter >g_oCallLegs[0]</parameter>
          </function>
          <results >
            <result name="Default" link="23" stubbed="0"/>
            <result name="error returned - exit call " link="13" stubbed="1" >nReturn != 0</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.nReturn = 0;]]></script>
          </scripts>
        </action>
        <action id="23" plug-in="Standard.Timer.1" ><?xtml-editor x=677 y=47 ?>
          <!--Set reservation timer for shared use billing-->
          <timer xmlns="urn:www.pactolus.com:xtml:application" start="1" id="g_oTimer.lReservationTimer" duration="g_oSub.nReservedSeconds"/>
          <results >
            <result name="Default" link="5" stubbed="0"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("Setting reservation timer for " + Session.g_oAPI.nCommitInterval + " seconds") ;



]]></script>
          </scripts>
        </action>
      </actions>
      <text-objects >
        <text-object x-coord="263" y-coord="595" width="469" height="44" text="Call timer has expired.



Terminate call after playing final message to subscriber." font-name="Times New Roman" size="-20" red="0" green="0" blue="0" weight="400" underline="0" strikeout="0" point-size="12" italic="0"/>
        <text-object x-coord="322" y-coord="174" width="336" height="25" text="Play warning prompt and then continue" font-name="Times New Roman" size="-20" red="0" green="0" blue="0" weight="400" underline="0" strikeout="0" point-size="12" italic="0"/>
      </text-objects>
    </function>
    <function name="LastNumbCallback" start="1" event="LastNumbCallback" returns="void" >
      <parameters >
        <parameter name="oMS" type="object" pass="byref"/>
        <parameter name="oCallLeg" type="object" pass="byref"/>
        <parameter name="nCallerIDFound" type="i4"/>
      </parameters>
      <local-vars >
        <var name="nReturnCode" type="i4" >0</var>
        <var name="strLastNumber" type="string" ></var>
        <var name="iNoCallerIdPrompt" type="i4" >0</var>
        <var name="bPlayCallId" type="boolean" >0</var>
      </local-vars>
      <actions >
        <action id="1" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=24 y=54 ?>
          <!--DirectCallerToMS-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;DirectCallerToMS&quot;" return="nReturnCode" external-function="1" library="lib_mediaserver.xml" >
            <parameter >g_oCallLegs[0]</parameter>
            <parameter >g_oMS</parameter>
          </function>
          <results >
            <result name="Default" link="4" stubbed="0"/>
            <result name="success" link="5" stubbed="0" >nReturnCode == 0</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_oCallLegs[0].strContent = Session.g_oCallLegs[0].strRemoteSdp;]]></script>
          </scripts>
        </action>
        <action id="2" plug-in="Pactolus.MGCPPlay.1" ><?xtml-editor x=347 y=287 ?>
          <!--Play Last Number Redialed-->
          <play xmlns="urn:www.pactolus.com:xtml:media" connection-id="g_oMS.strConnectionId" endpoint="g_oMS.strEndPoint" callid="g_oMS.strCallId" repeat="1" timeout="s_nLongTimeout" ms-type="g_oMS.strType" returns="nReturnCode" start-play="1" interrupt="1" return-immediate="0" digit-map="" language="g_oAccessLine.strLanguage" digits="" retry-count="" clear-digits="1" terminating-digit="" quick-collect="0" digit-timer="" >
            <audio type="index" >2006</audio>
            <audio type="digits" >strLastNumber</audio>
          </play>
          <results >
            <result name="Default" link="4" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.strLastNumber = Session.g_oAPI.strDestToSend ;



Server.logInfo("Last Number to announce: " + Session.strLastNumber) ;]]></script>
          </scripts>
        </action>
        <action id="4" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=619 y=213 ?>
          <!--HangUpParty-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;HangUpParty&quot;" return="nReturnCode" external-function="1" library="lib_callcontrol.xml" >
            <parameter >oCallLeg</parameter>
            <parameter >s_strLocalUri</parameter>
          </function>
          <results >
            <result name="Default" link="9" stubbed="0"/>
          </results>
        </action>
        <action id="5" plug-in="Pactolus.Branch.1" ><?xtml-editor x=100 y=253 ?>
          <!--CallerIdFound?-->
          <results >
            <result name="Default" link="7" stubbed="0"/>
            <result name="Play Caller ID" link="2" stubbed="0" >bPlayCallId == true</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.bPlayCallId = true ;

Server.logInfo("Checking last Number to announce: " + Session.g_oAPI.strDestToSend) ;






if ( Session.s_CB_NO_CALLS_IN_24 == Session.nCallerIDFound ) {



	Session.iNoCallerIdPrompt = 2008 ;



	Session.bPlayCallId = false ;



}



else if ( 0 == Session.g_oAPI.strDestToSend.length ||



			Clib.strspn( Session.g_oAPI.strDestToSend.toString(), "0123456789+" ) != 



			Session.g_oAPI.strDestToSend.length ) {







	Session.bPlayCallId = false ;



	Session.iNoCallerIdPrompt = 2007 ;



}



















	



















]]></script>
          </scripts>
        </action>
        <action id="7" plug-in="Pactolus.MGCPPlay.1" ><?xtml-editor x=352 y=463 ?>
          <!--Play prompt for no call id found, or call id blocked.-->
          <play xmlns="urn:www.pactolus.com:xtml:media" connection-id="g_oMS.strConnectionId" endpoint="g_oMS.strEndPoint" callid="g_oMS.strCallId" repeat="1" timeout="s_nLongTimeout" ms-type="g_oMS.strType" returns="nReturnCode" start-play="1" interrupt="1" return-immediate="0" digit-map="" language="g_oAccessLine.strLanguage" digits="" retry-count="" clear-digits="1" terminating-digit="" quick-collect="0" digit-timer="" >
            <audio type="index" >iNoCallerIdPrompt</audio>
          </play>
          <results >
            <result name="Default" link="4" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
        </action>
        <action id="9" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=820 y=230 ?>
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
        </action>
      </actions>
    </function>
    <function name="OnCancel" start="1" event="OnCancel" returns="void" >
      <parameters >
        <parameter name="strAccept" type="string" pass="byref"/>
        <parameter name="strAcceptEncoding" type="string" pass="byref"/>
        <parameter name="strAcceptLanguage" type="string" pass="byref"/>
        <parameter name="strAuthorization" type="string" pass="byref"/>
        <parameter name="strCallId" type="string" pass="byref"/>
        <parameter name="strContent" type="string" pass="byref"/>
        <parameter name="strContentDisposition" type="string" pass="byref"/>
        <parameter name="strContentType" type="string" pass="byref"/>
        <parameter name="strCSeq" type="string" pass="byref"/>
        <parameter name="strDate" type="string" pass="byref"/>
        <parameter name="strEncryption" type="string" pass="byref"/>
        <parameter name="strErrorInfo" type="string" pass="byref"/>
        <parameter name="strFrom" type="string" pass="byref"/>
        <parameter name="strMaxForwards" type="string" pass="byref"/>
        <parameter name="strProxyAuthorization" type="string" pass="byref"/>
        <parameter name="strProxyRequire" type="string" pass="byref"/>
        <parameter name="strRecordRoute" type="string" pass="byref"/>
        <parameter name="strRequestURI" type="string" pass="byref"/>
        <parameter name="strRequire" type="string" pass="byref"/>
        <parameter name="strResponseKey" type="string" pass="byref"/>
        <parameter name="strRoute" type="string" pass="byref"/>
        <parameter name="strSupported" type="string" pass="byref"/>
        <parameter name="strTimestamp" type="string" pass="byref"/>
        <parameter name="strTo" type="string" pass="byref"/>
        <parameter name="strUserAgent" type="string" pass="byref"/>
        <parameter name="strVia" type="string" pass="byref"/>
      </parameters>
      <local-vars >
        <var name="strEvent" type="string" ></var>
      </local-vars>
      <actions >
        <action id="1" plug-in="Pactolus.SipResponse.1" ><?xtml-editor x=37 y=44 ?>
          <!--200 OK-->
          <sip-response xmlns="urn:www.pactolus.com:xtml:sip" remove-via="0" reliable="0" increment-cseq-first="0" increment-cseq-last="0" >
            <call-id >strCallId</call-id>
            <cseq >strCSeq</cseq>
            <from >strFrom</from>
            <status >"SIP/2.0 200 OK"</status>
            <to >strTo</to>
            <via >strVia</via>
          </sip-response>
          <results >
            <result name="Default" link="2" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.enableEvents(false) ;







Session.g_oAPI.nCallTerminationReason = Session.s_TR_CALLING_PARTY_HANGUP ;]]></script>
          </scripts>
        </action>
        <action id="2" plug-in="Pactolus.SipResponse.1" ><?xtml-editor x=253 y=47 ?>
          <!--487 to INVITE-->
          <sip-response xmlns="urn:www.pactolus.com:xtml:sip" remove-via="0" reliable="0" increment-cseq-first="0" increment-cseq-last="0" >
            <call-id >g_oCallLegs[0].strCallId</call-id>
            <cseq >g_oCallLegs[0].strCSeq</cseq>
            <from >g_oCallLegs[0].strFrom</from>
            <status >"SIP/2.0 487 Request Terminated"</status>
            <to >g_oCallLegs[0].strTo</to>
            <via >g_oCallLegs[0].strVia</via>
          </sip-response>
          <results >
            <result name="Default" link="4" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
        </action>
        <action id="4" plug-in="Standard.WaitEvent.1" ><?xtml-editor x=461 y=60 ?>
          <wait xmlns="urn:www.pactolus.com:xtml:communication" timeout="s_nShortTimeout" recv-name="strEvent" >
            <msg name="Pactolus.EveSipAck.1" >
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
            </msg>
          </wait>
          <results >
            <result name="Default" link="6" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.enableEvents(true) ;]]></script>
          </scripts>
        </action>
        <action id="5" plug-in="Standard.EndSession.1" ><?xtml-editor x=892 y=74 ?></action>
        <action id="6" plug-in="Pactolus.Branch.1" ><?xtml-editor x=661 y=73 ?>
          <results >
            <result name="Default" link="5" stubbed="0"/>
            <result name="A-leg connected" link="7" stubbed="0" >g_oCallLegs[0].bConnected == true</result>
            <result name="B-leg connected" link="8" stubbed="0" >g_oCallLegs[0].bConnected == false



AND g_oCallLegs[1].bConnected == true</result>
          </results>
        </action>
        <action id="7" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=905 y=164 ?>
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
        </action>
        <action id="8" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=901 y=277 ?>
          <!--HangUpBLeg-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;HangUpParty&quot;" return="" external-function="1" library="lib_callcontrol.xml" >
            <parameter >g_oCallLegs[1]</parameter>
            <parameter >s_strLocalUri</parameter>
          </function>
          <results >
            <result name="Default" link="5" stubbed="0"/>
          </results>
        </action>
      </actions>
    </function>
    <function name="OnClick2Dial" start="27" event="Click2Dial" returns="void" >
      <parameters >
        <parameter name="strSrcIpAddress" type="string" pass="byref"/>
        <parameter name="nPort" type="i4" pass="byref"/>
        <parameter name="strTransactionId" type="string" pass="byref"/>
        <parameter name="strRealm" type="string" pass="byref"/>
        <parameter name="strAuthenticationName" type="string" pass="byref"/>
        <parameter name="strCallingNumber" type="string" pass="byref"/>
        <parameter name="strCalledNumber" type="string" pass="byref"/>
      </parameters>
      <local-vars >
        <var name="strContact" type="string" ></var>
        <var name="strRecordRoute" type="string" ></var>
        <var name="nReturn" type="i4" >0</var>
        <var name="RET_PHONE_OFFLINE" type="i4" >-1</var>
        <var name="RET_SUCCESS" type="i4" >0</var>
        <var name="RET_DB_ERROR" type="i4" >-99</var>
        <var name="bTrue" type="boolean" >1</var>
        <var name="strResponse" type="string" ></var>
        <var name="idx" type="i4" >0</var>
        <var name="strCode" type="string" ></var>
        <var name="strVia" type="string" ></var>
        <var name="strDummy" type="string" ></var>
        <var name="lAccessLineId" type="i8" >0</var>
        <var name="lFiller" type="i8" >0</var>
        <var name="nFiller" type="i4" >0</var>
      </local-vars>
      <actions >
        <action id="27" plug-in="Pactolus.UserFunction.1" ><?xtml-editor x=209 y=29 ?>
          <!--strip_digits: calling number-->
          <user-function xmlns="urn:www.pactolus.com:xtml:application" process="&quot;PACTOLUS_ps_c_adaptor&quot;" function="&quot;strip_digits&quot;" timeout="2" return="" async="0" >
            <parameter >strCallingNumber</parameter>
            <parameter >strCallingNumber</parameter>
          </user-function>
          <results >
            <result name="Default" link="28" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
        </action>
        <action id="1" plug-in="Standard.EndSession.1" ><?xtml-editor x=823 y=356 ?></action>
        <action id="2" plug-in="Pactolus.SOAPMessage.1" ><?xtml-editor x=43 y=646 ?>
          <!--Outdial in progress-->
          <SOAP xmlns="urn:www.pactolus.com:xtml:communication" destination-ip="strSrcIpAddress" transaction="strTransactionId" message-name="&quot;BbtelClick2DialResponse&quot;" destination-port="nPort" destination-type="4" destination-session="" waiting-session-selected="" xml-namespace="" >
            <parameter tag="&quot;code&quot;" value="&quot;200&quot;"/>
            <parameter tag="&quot;text&quot;" value="&quot;Outdial in progress&quot;"/>
          </SOAP>
          <results >
            <result name="Default" link="7" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_strClick2DialStatus = "Ringing your phone" ;



Session.g_nClick2DialCode = 180 ;]]></script>
          </scripts>
        </action>
        <action id="3" plug-in="Pactolus.JavaStaticMethod.1" ><?xtml-editor x=29 y=128 ?>
          <!--getSipAddress-->
          <java xmlns="urn:www.pactolus.com:xtml:application" class="&quot;com.pactolus.broadband.psAPISceRegister&quot;" method="&quot;getSipAddress&quot;" timeout="" return="" method-return-var="nReturn" method-return-type="0" >
            <parameter type="in" var-type="string" >g_oAPI.strPlatformSessionId</parameter>
            <parameter type="in" var-type="string" >g_oAPI.strProcDBName</parameter>
            <parameter type="in" var-type="string" >strCallingNumber</parameter>
            <parameter type="in" var-type="string" >strRealm</parameter>
            <parameter type="in" var-type="i8" >lFiller</parameter>
            <parameter type="in" var-type="i8" >g_oAccessLine.lAccessLineId</parameter>
            <parameter type="in" var-type="i4" >nFiller</parameter>
            <parameter type="inout" var-type="string" >strContact</parameter>
            <parameter type="inout" var-type="string" >strRecordRoute</parameter>
            <parameter type="inout" var-type="string" >strDummy</parameter>
          </java>
          <results >
            <result name="Default" link="4" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
            <result name="phone online" link="8" stubbed="0" >nReturn == RET_SUCCESS



AND 'Result'  == 'Success'</result>
            <result name="phone offline" link="4" stubbed="0" >nReturn == RET_PHONE_OFFLINE



AND 'Result'  == 'Success'</result>
            <result name="DB Error" >nReturn != RET_SUCCESS



AND 'Result'  == 'Success'</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("Src address: " + Session.strSrcIpAddress ) ;



Server.logInfo("Src port: " + Session.nPort ) ;



Server.logInfo("Sip realm: " + Session.strRealm ) ;



Server.logInfo("username: " + Session.strAuthenticationName ) ;



Server.logInfo("calling number: " + Session.strCallingNumber ) ;



Server.logInfo("called number: " + Session.strCalledNumber ) ;



Server.logInfo("return code: " + Session.nReturn ) ;











Session.g_oAccessLine.strUserName = Session.strAuthenticationName ;



Session.g_oAPI.strDestReceived = Session.strCalledNumber ;



Session.g_oAPI.strAniReceived = Session.strCallingNumber ;







Session.g_oCallLegs[0].strCallingNumber = Session.strCallingNumber ;



Session.g_oCallLegs[0].strCalledNumber = Session.strCalledNumber ;



Session.g_oCallLegs[0].strSvcProviderCallerId = Session.g_oCallLegs[0].strSubscriberCallerId = Session.strCallingNumber ;



Session.g_oCallLegs[0].strOrigFlag = "T" ;



Session.g_oCallLegs[0].strOrigRouteType = Session.s_RT_ON_NET ;



Session.g_oCallLegs[0].strFrom = "<sip:" + Session.strCallingNumber + "@" + Server.sipAddress + ":" +



	Server.sipPort + ">;tag=" + Server.getUTCTime() ;







	



Session.nReturn = Session.RET_DB_ERROR ;







Session.strCode = "480" ;



Session.strResponse = "Service is temporarily unavailable; try your call again later" ;]]></script>
            <script language="javascript" timing="last" ><![CDATA[Server.logInfo("Result '" + Result.name + "'(" + Result.id + ") calling getSipAddress " ) ;



Server.logInfo("Contact: " + Session.strContact ) ;



Server.logInfo("Record Route: " + Session.strRecordRoute ) ;







if( 6 == Result.id ) {



	Session.strResponse = "Your phone is offline" ;



	Session.strCode = "407" ;



}



else if( 7 != Result.id ) {



	Session.strResponse = "A system error has occurred" ;



	Session.strCode = "480" ;



}]]></script>
          </scripts>
        </action>
        <action id="4" plug-in="Pactolus.SOAPMessage.1" ><?xtml-editor x=424 y=173 ?>
          <!--failure response-->
          <SOAP xmlns="urn:www.pactolus.com:xtml:communication" destination-ip="strSrcIpAddress" transaction="strTransactionId" message-name="&quot;BbtelClick2DialResponse&quot;" destination-port="nPort" destination-type="4" destination-session="" waiting-session-selected="" xml-namespace="" >
            <parameter tag="&quot;code&quot;" value="strCode"/>
            <parameter tag="&quot;text&quot;" value="strResponse"/>
          </SOAP>
          <results >
            <result name="Default" link="1" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("Sending failure reason: " + Session.strResponse + "(" + Session.strCode + ") to click2dial request") ;]]></script>
          </scripts>
        </action>
        <action id="7" plug-in="Pactolus.SipInvite.1" ><?xtml-editor x=41 y=796 ?>
          <!--connect to subscriber phone-->
          <sip-invite xmlns="urn:www.pactolus.com:xtml:sip" add-record-route="0" add-via="1" handle-responses="1" follow-redirection="0" final-response-status="" response-content="g_oCallLegs[0].strRemoteSdp" response-content-type="" final-request-uri="g_oCallLegs[0].strRemoteUri" timeout-for-final-response="s_nLongTimeout" timeout-for-provisional-response="s_nShortTimeout" record-route="strRecordRoute" contact="strContact" response-to="g_oCallLegs[0].strTo" use-session-timer="0" session-expires="" min-supported-session-timer="" refresher="" remote-party-id="" increment-cseq-first="0" increment-cseq-last="0" >
            <call-id >g_oCallLegs[0].strCallId</call-id>
            <contact >g_oCallLegs[0].strContact</contact>
            <content >g_oCallLegs[0].strSdp</content>
            <content-type >"application/sdp"</content-type>
            <cseq >g_oCallLegs[0].strCSeq</cseq>
            <from >g_oCallLegs[0].strFrom</from>
            <request-uri >g_oCallLegs[0].strRemoteUri</request-uri>
            <route >g_oCallLegs[0].strRoute</route>
            <to >g_oCallLegs[0].strTo</to>
            <via >strVia</via>
          </sip-invite>
          <results >
            <result name="Default" link="26" stubbed="0"/>
            <result name="Success" link="25" stubbed="0"/>
            <result name="Redirect (3xx)"/>
            <result name="Client error (4xx)"/>
            <result name="Server error (5xx)"/>
            <result name="Global error (6xx)"/>
            <result name="Provisional Timeout"/>
            <result name="Final Timeout" link="30" stubbed="0"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_oCallLegs[0].strOrigRouteType = Session.g_oAPI.strOrigOnNet ;



Session.g_oCallLegs[1].strDestRouteType = Session.g_oAPI.strDestOnNet ;







Session.g_oCallLegs[0].strSdp = Session.g_oMS.strSdp ;







/* route is specified in terms of a Contact and, optionally, Record-Route header */



	



js_calculate_uri_and_route( true, "SIP/2.0", Session.g_oCallLegs[0].strFrom.toString(), 



	Session.strContact.toString(), 



	Session.strRecordRoute.toString(), 



	Session.g_oCallLegs[0].strRemoteUri, 



	Session.g_oCallLegs[0].strRoute ) ;



	



Session.g_oCallLegs[0].strRequestURI = Session.g_oCallLegs[0].strRemoteUri ;







if( null != Session.g_oCallLegs[0].strRoute.toString() && Session.g_oCallLegs[0].strRoute.toString().length > 0 ) {



	var na = new SipNameAddr( Session.g_oCallLegs[0].strRoute.toString() ) ;



	na.url.phoneNumber = Session.strCalledNumber ;



	Session.g_oCallLegs[0].strTo = "<sip:" + Session.strCalledNumber + "@" + na.url.host ;



	if( null != na.url.port && 5060 != na.url.port ) {



		Session.g_oCallLegs[0].strTo +=  ":" ;



		Session.g_oCallLegs[0].strTo += na.url.port ;



	} 



	Session.g_oCallLegs[0].strTo +=	">" ;



}



else {



	var to = new SipTo(Session.g_oCallLegs[0].strRemoteUri.toString()) ;



	Session.g_oCallLegs[0].strTo = to.encode();



}







Session.g_oCallLegs[0].strContact = Session.s_strLocalUri ;



Session.g_oCallLegs[0].strCallId = js_CreateUniqueCallId() ;



Session.g_oCallLegs[0].strCSeq = "1 INVITE" ;











Session.g_oCallLegs[0].bReverseFromTo = false ;



Session.g_oCallLegs[0].bUac = true ;







Session.g_oCallLegs[0].bAttemptedToOutdial = true; 



Session.g_oCallLegs[0].bCurrentlyDialing = true ;







Session.g_oCallLegs[0].nState = Session.s_LEG_STATE_DIALING ;







]]></script>
          </scripts>
        </action>
        <action id="8" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=39 y=337 ?>
          <!--psAuthOriginate-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;psAuthOriginate&quot;" return="nReturn" external-function="0" library="" >
            <parameter >g_oCallLegs[0]</parameter>
            <parameter >bTrue</parameter>
          </function>
          <results >
            <result name="Default" link="4" stubbed="1"/>
            <result name="authentication success" link="11" stubbed="0" >nReturn == 0</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.nReturn = Session.RET_DB_ERROR ;]]></script>
            <script language="javascript" timing="last" ><![CDATA[switch( Session.nReturn ) {



case 0:



	Session.g_oCallLegs[1].strOutdialDestNbr = js_translate_destination_broadband( Session.s_strCarrierName, 



			Session.g_oAPI.strDestToSend, Session.g_oAPI.nOrigCountryId, parseInt(Session.g_oAPI.strDestOnNet) == Session.s_RT_ON_NET, Session.g_oAPI.strAniToSend ) ;



	Session.g_oAPI.bWriteCDR = true ;



	Server.logInfo("Successfully called authOriginate") ;



	break ;







case -1: Session.strResponse = "Phone not authorized" ; Session.strCode = "403"; break ;



case -2: Session.strResponse = "Phone not found"; Session.strCode = "404"; break ;



case -3: Session.strResponse = "Account is disabled"; Session.strCode = "405"; break ;



case -4: Session.strResponse = "Service Provider is disabled"; Session.strCode = "406"; break ;



case -5: Session.strResponse = "Phone is not active"; Session.strCode = "407"; break ;



case -6: Session.strResponse = "Calls are not allowed to the requested number"; Session.strCode = "408"; break ;



case -8: Session.strResponse = "Calls are only allowed to other subscriber phones";Session.strCode = "408";  break ;



case -9: Session.strResponse = "911 calls are not allowed"; Session.strCode = "409"; break ;



case -10: Session.strResponse = "There are currently calls in progress from your phone";Session.strCode = "410";  break ;



case -11: Session.strResponse = "The maximum number of calls has been reached for your service provider";Session.strCode = "411";  break ;



case -12: Session.strResponse = "The requested number is not reachable"; Session.strCode = "413"; break ;



case Session.s_LOW_BALANCE_CLICK2DIAL: Session.strResponse = "The account does not have sufficient funds to make this call" ; Session.strCode = "414"; break ;



case -14: Session.strResponse = "The account has expired"; Session.strCode = "415"; break ;



case -15: Session.strResponse = "A call is already in progress from your phone"; Session.strCode = "410"; break ;



default:



	Session.strResponse = "A system error has occurred" ;Session.strCode = "480";  break ;



}



]]></script>
          </scripts>
        </action>
        <action id="11" plug-in="Pactolus.MGCPCreate.1" ><?xtml-editor x=43 y=507 ?>
          <crcx xmlns="urn:www.pactolus.com:xtml:media" callid="g_oMS.strCallId" remote-sdp="" mode="inactive" capability="0" returns="nReturn" endpoint="g_oMS.strEndPoint" connection-id="g_oMS.strConnectionId" local-sdp="g_oMS.strSdp" packetization-period="s_nPacketizationPeriod" codec="0" timeout="s_nShortTimeout" local-connection-options="" second-endpoint-id="" telephone-events="0" ms-type="g_oMS.strType" >
            <parameters >
              <quarantine step="0" loop="0" process="0" discard="0"/>
              <events ><![CDATA[]]></events>
              <signals ><![CDATA[]]></signals>
              <digit-map ><![CDATA[]]></digit-map>
            </parameters>
          </crcx>
          <results >
            <result name="Default" link="4" stubbed="1"/>
            <result name="Success" link="2" stubbed="0"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[if( 2 != Result.id ) {



	Session.strResponse = "A system error has occurred" ;



}]]></script>
          </scripts>
        </action>
        <action id="14" plug-in="Pactolus.MGCPDelete.1" ><?xtml-editor x=830 y=914 ?>
          <dlcx xmlns="urn:www.pactolus.com:xtml:media" connection-id="g_oMS.strConnectionId" endpoint="g_oMS.strEndPoint" callid="g_oMS.strCallId" timeout="s_nShortTimeout" returns="" ms-type="s_strMsType" >
            <parameters >
              <quarantine step="0" loop="0" process="0" discard="0"/>
              <events ><![CDATA[]]></events>
              <signals ><![CDATA[]]></signals>
              <digit-map ><![CDATA[]]></digit-map>
            </parameters>
          </dlcx>
          <results >
            <result name="Default" link="15" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
        </action>
        <action id="15" plug-in="Pactolus.Outdial.1" ><?xtml-editor x=1030 y=862 ?>
          <!--outdial-->
          <Outdial xmlns="urn:www.pactolus.com:xtml:sip-cc" calling-number="g_oCallLegs[0].strCallingNumber" called-number="g_oCallLegs[1].strOutdialDestNbr" preferred-carrier="" codec="-1" reliable-provisional-responses="1" timeout="s_nLongTimeout" returns="nReturn" ms-type="" calling-connect-type="0" calling-capability="0" from="g_oCallLegs[0].strTo" via="" ingress-gateway="g_oCallLegs[0].strRemoteUri" session-timer-a="0" hold-a-first="0" interrupt-on-long-pound="0" session-timer-value-a="" telephone-events="0" rtp-request-a="0" rtp-endpoint-a="" route-callingparty="g_oCallLegs[0].strRoute" record-route-callingparty="g_oCallLegs[0].strRecordRoute" contact-callingparty="g_oCallLegs[0].strContact" egress-gateway="g_oCallLegs[1].strRemoteUri" sdp-b="g_oCallLegs[1].strRemoteSdp" callid-b="g_oCallLegs[1].strCallId" cseq-b="g_oCallLegs[1].strCSeq" sip-status="" to-b="g_oCallLegs[1].strTo" from-b="g_oCallLegs[1].strFrom" session-timer-b="0" session-timer-value-b="" backup-ss="" route="g_oCallLegs[1].strRoute" record-route="g_oCallLegs[1].strRecordRoute" contact="g_oCallLegs[1].strContact" rtp-request-b="0" rtp-endpoint-b="" refresher="" remote-party-id="" play-ringback="0" language="" ringback-prompt="" capability="1" ringback-codec="-1" packetization-period="" calling-packetization="" connection-id="" mgcp-call-id="" ms-sdp="" endpoint="" to="g_oCallLegs[0].strFrom" callid-a="g_oCallLegs[0].strCallId" cseq-a="g_oCallLegs[0].strCSeq" sdp-a="g_oCallLegs[0].strRemoteSdp" >
            <additional-parameters >
              <privacy >g_oCallLegs[1].strPrivacy</privacy>
              <p-asserted-identity >g_oCallLegs[1].strPAssertedIdentity</p-asserted-identity>
            </additional-parameters>
          </Outdial>
          <results >
            <result name="Default" link="19" stubbed="0"/>
            <result name="Success" link="29" stubbed="0"/>
            <result name="Ring no answer"/>
            <result name="Busy" link="16" stubbed="1"/>
            <result name="Caller DTMF interrupt"/>
            <result name="Called party error"/>
            <result name="Calling party error"/>
            <result name="Other error"/>
            <result name="Resource unavailable"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_oCallLegs[1].nState = Session.s_LEG_STATE_DIALING ;







Session.g_oCallLegs[1].bAttemptedToOutdial = true; 



Session.g_oCallLegs[1].bCurrentlyDialing = true ;







Session.g_oCallLegs[1].strRequestUri = Session.g_oProxyList[Session.idx] ;







Session.g_oCallLegs[1].strCallId = js_CreateUniqueCallId() ;



Session.g_oCallLegs[1].strRemoteUri = Session.g_oCallLegs[1].strRequestUri ;



Session.g_oCallLegs[1].strContact = Session.s_strLocalUri ;



	



Session.g_oCallLegs[0].bRefresher = false ;



Session.g_oCallLegs[1].bRefresher = true ;







Session.g_oCallLegs[1].lTimeStart = Server.getUTCTime() ;







Session.g_oCallLegs[1].strTo = "" ;



Server.logInfo("Outdialing number: " + Session.g_oCallLegs[1].strOutdialDestNbr ) ;







]]></script>
            <script language="javascript" timing="last" ><![CDATA[Session.g_oCallLegs[1].bCurrentlyDialing = false;







if( 2 != Result.id ) {



	Session.g_oCallLegs[1].nState = Session.s_LEG_STATE_NONE ;



}



]]></script>
          </scripts>
        </action>
        <action id="16" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=46 y=1059 ?>
          <!--outdial from MS-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;MSOutdialParty&quot;" return="nReturn" external-function="1" library="lib_mediaserver.xml" >
            <parameter >g_oCallLegs[0]</parameter>
            <parameter >g_oMS</parameter>
            <parameter >g_oCallLegs[0].strContact</parameter>
          </function>
          <results >
            <result name="Default" link="19" stubbed="1"/>
            <result name="success" link="17" stubbed="0" >nReturn == s_RET_SUCCESS</result>
            <result name="caller hung up" >nReturn == s_RET_CALLER_HUNGUP</result>
          </results>
        </action>
        <action id="17" plug-in="Pactolus.MGCPPlay.1" ><?xtml-editor x=294 y=1081 ?>
          <!--line is busy-->
          <play xmlns="urn:www.pactolus.com:xtml:media" connection-id="g_oMS.strConnectionId" endpoint="g_oMS.strEndPoint" callid="g_oMS.strCallId" repeat="1" timeout="40" ms-type="s_strMsType" returns="nReturn" start-play="1" interrupt="0" return-immediate="0" digit-map="" language="g_oAccessLine.strLanguage" digits="" retry-count="" clear-digits="1" terminating-digit="" quick-collect="0" digit-timer="" >
            <audio type="index" >549</audio>
            <audio type="index" >550</audio>
            <audio type="index" >2004</audio>
          </play>
          <results >
            <result name="Default" link="18" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
        </action>
        <action id="18" plug-in="Pactolus.MGCPDelete.1" ><?xtml-editor x=497 y=1107 ?>
          <dlcx xmlns="urn:www.pactolus.com:xtml:media" connection-id="g_oMS.strConnectionId" endpoint="g_oMS.strEndPoint" callid="g_oMS.strCallId" timeout="s_nShortTimeout" returns="" ms-type="s_strMsType" >
            <parameters >
              <quarantine step="0" loop="0" process="0" discard="0"/>
              <events ><![CDATA[]]></events>
              <signals ><![CDATA[]]></signals>
              <digit-map ><![CDATA[]]></digit-map>
            </parameters>
          </dlcx>
          <results >
            <result name="Default" link="19" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
        </action>
        <action id="19" plug-in="Pactolus.SipBye.1" ><?xtml-editor x=812 y=1137 ?>
          <!--Hang up A-->
          <sip-bye xmlns="urn:www.pactolus.com:xtml:sip" add-record-route="0" add-via="1" timeout="3" handle-responses="1" increment-cseq-first="0" increment-cseq-last="0" >
            <call-id >g_oCallLegs[0].strCallId</call-id>
            <contact >g_oCallLegs[0].strContact</contact>
            <cseq >g_oCallLegs[0].strCSeq</cseq>
            <from >g_oCallLegs[0].strFrom</from>
            <request-uri >g_oCallLegs[0].strRemoteUri</request-uri>
            <route >g_oCallLegs[0].strRoute</route>
            <to >g_oCallLegs[0].strTo</to>
          </sip-bye>
          <results >
            <result name="Default" link="1" stubbed="1"/>
            <result name="Success"/>
            <result name="Client error (4xx)"/>
            <result name="Server error (5xx)"/>
            <result name="Global error (6xx)"/>
            <result name="Timeout"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_oCallLegs[0].nState = Session.s_LEG_STATE_NONE ;]]></script>
          </scripts>
        </action>
        <action id="20" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=1073 y=617 ?>
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_oCallLegs[1].lTimeAnswered = Server.getUTCTime() ;







Session.g_oCallLegs[1].bConnected = true ;



Session.g_oCallLegs[0].bConnected = true ;







Session.g_oCallLegs[0].nState = Session.s_LEG_STATE_CONNECTED;



Session.g_oCallLegs[1].nState = Session.s_LEG_STATE_CONNECTED;







Server.enableEvents(true) ;







Session.g_oCallLegs[0].strRemoteSdpForRefer = Session.g_oCallLegs[0].strRemoteSdp ;



Session.g_oCallLegs[1].strRemoteSdpForRefer = Session.g_oCallLegs[1].strRemoteSdp ;







Session.g_STATE = Session.s_STATE_CONNECTED_TO_CALLED ;]]></script>
          </scripts>
        </action>
        <action id="22" plug-in="Pactolus.Branch.1" ><?xtml-editor x=413 y=908 ?>
          <results >
            <result name="Default" link="23" stubbed="0"/>
            <result name="play time remaining" link="24" stubbed="0" >g_oAPI.nBillingType == s_BT_PREPAID



AND ((g_oSub.nSecondsAvailable &lt; g_oAccessLine.nMinTimeAnnounce



AND g_oAccessLine.nMinTimeAnnounce &gt; 0)



OR g_oAccessLine.nMinTimeAnnounce == -1)



AND g_oAPI.strCallType == s_CT_NORMAL</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_oCallLegs[0].bCurrentlyDialing = false ;



Session.g_oCallLegs.nState = Session.s_LEG_STATE_CONNECTED ;







js_calculate_uri_and_route( true, "SIP/2.0", Session.g_oCallLegs[0].strFrom.toString(), 



	Session.strContact.toString(), 



	Session.strRecordRoute.toString(), 



	Session.g_oCallLegs[0].strRemoteUri, 



	Session.g_oCallLegs[0].strRoute ) ;



Server.logInfo("Min Time announce: " + Session.g_oAccessLine.nMinTimeAnnounce ) ;



Server.logInfo("Call timer: " + Session.g_oSub.nSecondsAvailable ) ;]]></script>
          </scripts>
        </action>
        <action id="23" plug-in="Pactolus.MGCPPlay.1" ><?xtml-editor x=628 y=832 ?>
          <!--Please hold..-->
          <play xmlns="urn:www.pactolus.com:xtml:media" connection-id="g_oMS.strConnectionId" endpoint="g_oMS.strEndPoint" callid="g_oMS.strCallId" repeat="1" timeout="40" ms-type="s_strMsType" returns="nReturn" start-play="1" interrupt="0" return-immediate="0" digit-map="" language="g_oAccessLine.strLanguage" digits="" retry-count="" clear-digits="1" terminating-digit="" quick-collect="0" digit-timer="" >
            <audio type="index" >517</audio>
          </play>
          <results >
            <result name="Default" link="14" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
        </action>
        <action id="24" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=582 y=983 ?>
          <!--PlayTimeRemaining-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;PlayTimeRemaining&quot;" return="" external-function="0" library="" >
            <parameter >g_oSub.nSecondsAvailable</parameter>
          </function>
          <results >
            <result name="Default" link="23" stubbed="0"/>
          </results>
        </action>
        <action id="25" plug-in="Pactolus.MGCPModify.1" ><?xtml-editor x=230 y=882 ?>
          <mdcx xmlns="urn:www.pactolus.com:xtml:media" connection-id="g_oMS.strConnectionId" endpoint="g_oMS.strEndPoint" callid="g_oMS.strCallId" returns="nReturn" remote-sdp="g_oCallLegs[0].strRemoteSdp" mode="send/receive" packetization-period="" codec="-1" timeout="s_nShortTimeout" local-connection-options="" second-endpoint-id="" ms-type="g_oMS.strType" >
            <parameters >
              <quarantine step="0" loop="0" process="0" discard="0"/>
              <events ><![CDATA[]]></events>
              <signals ><![CDATA[]]></signals>
              <digit-map ><![CDATA[]]></digit-map>
            </parameters>
          </mdcx>
          <results >
            <result name="Default" link="22" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_strClick2DialStatus = "Connected" ;



Session.g_nClick2DialCode = 200 ;]]></script>
          </scripts>
        </action>
        <action id="26" plug-in="Pactolus.Sleep.1" ><?xtml-editor x=365 y=791 ?>
          <sleep xmlns="urn:www.pactolus.com:xtml:application" duration="5"/>
          <results >
            <result name="Default" link="1" stubbed="0"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_strClick2DialStatus = "Unable to connect" ;



Session.g_nClick2DialCode = 503 ;]]></script>
          </scripts>
        </action>
        <action id="28" plug-in="Pactolus.UserFunction.1" ><?xtml-editor x=507 y=28 ?>
          <!--strip_digits: called number-->
          <user-function xmlns="urn:www.pactolus.com:xtml:application" process="&quot;PACTOLUS_ps_c_adaptor&quot;" function="&quot;strip_digits&quot;" timeout="2" return="" async="0" >
            <parameter >strCalledNumber</parameter>
            <parameter >strCalledNumber</parameter>
          </user-function>
          <results >
            <result name="Default" link="31" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
        </action>
        <action id="29" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=1070 y=738 ?>
          <!--bbtelSetTimers-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;bbtelSetTimers&quot;" return="" external-function="1" library="lib_voip.xml" >
            <parameter >g_oTimer</parameter>
            <parameter >g_oSub.nSecondsAvailable</parameter>
            <parameter >g_oAPI.nWarningThreshold1</parameter>
            <parameter >g_oAPI.nWarningThreshold2</parameter>
            <parameter >g_oAPI.nWarningThreshold3</parameter>
            <parameter >g_oSub.nReservedSeconds</parameter>
          </function>
          <results >
            <result name="Default" link="20" stubbed="0"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[js_calculate_uri_and_route( false, "SIP/2.0", 



			Session.g_oCallLegs[1].strFrom.toString(), 



			Session.g_oCallLegs[1].strContact.toString(), 



			Session.g_oCallLegs[1].strRecordRoute.toString(), 



			Session.g_oCallLegs[1].strRemoteUri, 



			Session.g_oCallLegs[1].strRoute ) ;







Session.g_oCallLegs[0].strRequestURI = Session.g_oCallLegs[0].strRemoteUri ;







Session.g_oCallLegs[1].nState = Session.s_LEG_STATE_CONNECTED ;



]]></script>
          </scripts>
        </action>
        <action id="30" plug-in="Pactolus.SipCancel.1" ><?xtml-editor x=355 y=663 ?>
          <!--Cancel A leg-->
          <sip-bye xmlns="urn:www.pactolus.com:xtml:sip" add-record-route="0" add-via="0" timeout="4" handle-responses="1" increment-cseq-first="0" increment-cseq-last="0" >
            <call-id >g_oCallLegs[0].strCallId</call-id>
            <cseq >g_oCallLegs[0].strCSeq</cseq>
            <from >g_oCallLegs[0].strFrom</from>
            <request-uri >g_oCallLegs[0].strRemoteUri</request-uri>
            <route >g_oCallLegs[0].strRoute</route>
            <to >g_oCallLegs[0].strTo</to>
            <via >strVia</via>
          </sip-bye>
          <results >
            <result name="Default" link="26" stubbed="0"/>
            <result name="Success"/>
            <result name="Timeout"/>
            <result name="Error"/>
          </results>
        </action>
        <action id="31" plug-in="Pactolus.JavaStaticMethod.1" ><?xtml-editor x=812 y=63 ?>
          <!--Get access line id.-->
          <java xmlns="urn:www.pactolus.com:xtml:application" class="&quot;com.pactolus.psAPISceMisc&quot;" method="&quot;lookupAccessLineIdByAuthname&quot;" timeout="" return="" method-return-var="lAccessLineId" method-return-type="1" >
            <parameter type="in" var-type="string" >g_oAPI.strPlatformSessionId</parameter>
            <parameter type="in" var-type="string" >g_oAPI.strProcDBName</parameter>
            <parameter type="in" var-type="string" >strAuthenticationName</parameter>
            <parameter type="in" var-type="string" >strRealm</parameter>
          </java>
          <results >
            <result name="Default" link="3" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[InitVars();]]></script>
            <script language="javascript" timing="last" ><![CDATA[Server.logInfo("Retrieved Access Line ID: " + Session.lAccessLineId);







if( 0 < Session.lAccessLineId ) {



	Session.g_oAccessLine.lAccessLineId = Session.lAccessLineId;



}]]></script>
          </scripts>
        </action>
      </actions>
    </function>
    <function name="PlayTimeRemaining" start="3" event="" returns="void" >
      <parameters >
        <parameter name="nTimeRemaining" type="i4" pass="byref"/>
      </parameters>
      <local-vars >
        <var name="nReturn" type="i4" >0</var>
        <var name="bEvenMinutes" type="boolean" >0</var>
        <var name="nMinutes" type="i4" >0</var>
        <var name="nSeconds" type="i4" >0</var>
      </local-vars>
      <actions >
        <action id="3" plug-in="Pactolus.Branch.1" ><?xtml-editor x=31 y=288 ?>
          <results >
            <result name="Default" link="2" stubbed="0"/>
            <result name="unlimited" link="1" stubbed="1" >nTimeRemaining &lt;= 0</result>
            <result name="1 second" link="4" stubbed="0" >nTimeRemaining == 1</result>
            <result name="&lt; 1 minute" link="5" stubbed="0" >nTimeRemaining &lt; 60</result>
            <result name="1 minute" link="6" stubbed="0" >nTimeRemaining == 60</result>
            <result name="&lt; 2 minutes" link="8" stubbed="0" >nMinutes &lt; 2</result>
            <result name="even minutes" link="7" stubbed="0" >bEvenMinutes == true</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.nMinutes = Session.nTimeRemaining / 60 ;



Session.nSeconds = Session.nTimeRemaining % 60 ;







if( 0 == Session.nSeconds ) {



	Session.bEvenMinutes = true ;



}







]]></script>
          </scripts>
        </action>
        <action id="1" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=651 y=265 ?>
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
        </action>
        <action id="2" plug-in="Pactolus.MGCPPlay.1" ><?xtml-editor x=275 y=44 ?>
          <!--x minutes, y seconds-->
          <play xmlns="urn:www.pactolus.com:xtml:media" connection-id="g_oMS.strConnectionId" endpoint="g_oMS.strEndPoint" callid="g_oMS.strCallId" repeat="1" timeout="40" ms-type="s_strMsType" returns="nReturn" start-play="1" interrupt="0" return-immediate="0" digit-map="" language="g_oAccessLine.strLanguage" digits="" retry-count="" clear-digits="1" terminating-digit="" quick-collect="0" digit-timer="" >
            <audio type="silence" >.5</audio>
            <audio type="index" >515</audio>
            <audio type="number" >nMinutes</audio>
            <audio type="index" >415</audio>
            <audio type="number" >nSeconds</audio>
            <audio type="index" >422</audio>
            <audio type="index" >516</audio>
          </play>
          <results >
            <result name="Default" link="1" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
        </action>
        <action id="4" plug-in="Pactolus.MGCPPlay.1" ><?xtml-editor x=277 y=183 ?>
          <!--1 second-->
          <play xmlns="urn:www.pactolus.com:xtml:media" connection-id="g_oMS.strConnectionId" endpoint="g_oMS.strEndPoint" callid="g_oMS.strCallId" repeat="1" timeout="40" ms-type="s_strMsType" returns="nReturn" start-play="1" interrupt="0" return-immediate="0" digit-map="" language="g_oAccessLine.strLanguage" digits="" retry-count="" clear-digits="1" terminating-digit="" quick-collect="0" digit-timer="" >
            <audio type="silence" >.5</audio>
            <audio type="index" >515</audio>
            <audio type="number" >nSeconds</audio>
            <audio type="index" >421</audio>
            <audio type="index" >516</audio>
          </play>
          <results >
            <result name="Default" link="1" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
        </action>
        <action id="5" plug-in="Pactolus.MGCPPlay.1" ><?xtml-editor x=285 y=365 ?>
          <!--y seconds-->
          <play xmlns="urn:www.pactolus.com:xtml:media" connection-id="g_oMS.strConnectionId" endpoint="g_oMS.strEndPoint" callid="g_oMS.strCallId" repeat="1" timeout="40" ms-type="s_strMsType" returns="nReturn" start-play="1" interrupt="0" return-immediate="0" digit-map="" language="g_oAccessLine.strLanguage" digits="" retry-count="" clear-digits="1" terminating-digit="" quick-collect="0" digit-timer="" >
            <audio type="silence" >.5</audio>
            <audio type="index" >515</audio>
            <audio type="number" >nSeconds</audio>
            <audio type="index" >422</audio>
            <audio type="index" >516</audio>
          </play>
          <results >
            <result name="Default" link="1" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
        </action>
        <action id="6" plug-in="Pactolus.MGCPPlay.1" ><?xtml-editor x=287 y=514 ?>
          <!--1 minute-->
          <play xmlns="urn:www.pactolus.com:xtml:media" connection-id="g_oMS.strConnectionId" endpoint="g_oMS.strEndPoint" callid="g_oMS.strCallId" repeat="1" timeout="40" ms-type="s_strMsType" returns="nReturn" start-play="1" interrupt="0" return-immediate="0" digit-map="" language="g_oAccessLine.strLanguage" digits="" retry-count="" clear-digits="1" terminating-digit="" quick-collect="0" digit-timer="" >
            <audio type="silence" >.5</audio>
            <audio type="index" >515</audio>
            <audio type="number" >nMinutes</audio>
            <audio type="index" >308</audio>
            <audio type="index" >516</audio>
          </play>
          <results >
            <result name="Default" link="1" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
        </action>
        <action id="7" plug-in="Pactolus.MGCPPlay.1" ><?xtml-editor x=288 y=795 ?>
          <!--x minutes-->
          <play xmlns="urn:www.pactolus.com:xtml:media" connection-id="g_oMS.strConnectionId" endpoint="g_oMS.strEndPoint" callid="g_oMS.strCallId" repeat="1" timeout="40" ms-type="s_strMsType" returns="nReturn" start-play="1" interrupt="0" return-immediate="0" digit-map="" language="g_oAccessLine.strLanguage" digits="" retry-count="" clear-digits="1" terminating-digit="" quick-collect="0" digit-timer="" >
            <audio type="silence" >.5</audio>
            <audio type="index" >515</audio>
            <audio type="number" >nMinutes</audio>
            <audio type="index" >309</audio>
            <audio type="index" >516</audio>
          </play>
          <results >
            <result name="Default" link="1" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
        </action>
        <action id="8" plug-in="Pactolus.MGCPPlay.1" ><?xtml-editor x=292 y=643 ?>
          <!--1 minute, y seconds-->
          <play xmlns="urn:www.pactolus.com:xtml:media" connection-id="g_oMS.strConnectionId" endpoint="g_oMS.strEndPoint" callid="g_oMS.strCallId" repeat="1" timeout="40" ms-type="s_strMsType" returns="nReturn" start-play="1" interrupt="0" return-immediate="0" digit-map="" language="g_oAccessLine.strLanguage" digits="" retry-count="" clear-digits="1" terminating-digit="" quick-collect="0" digit-timer="" >
            <audio type="silence" >.5</audio>
            <audio type="index" >515</audio>
            <audio type="number" >nMinutes</audio>
            <audio type="index" >308</audio>
            <audio type="number" >nSeconds</audio>
            <audio type="index" >422</audio>
            <audio type="index" >516</audio>
          </play>
          <results >
            <result name="Default" link="1" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
        </action>
      </actions>
    </function>
    <function name="OnClick2DialQuery" start="1" event="Click2DialQuery" returns="void" >
      <parameters >
        <parameter name="strSrcAddress" type="string" pass="byref"/>
        <parameter name="nPort" type="i4" pass="byref"/>
        <parameter name="strTransactionId" type="string" pass="byref"/>
      </parameters>
      <actions >
        <action id="1" plug-in="Pactolus.SOAPMessage.1" ><?xtml-editor x=34 y=62 ?>
          <SOAP xmlns="urn:www.pactolus.com:xtml:communication" destination-ip="strSrcAddress" transaction="strTransactionId" message-name="&quot;BbtelClick2DialQueryResponse&quot;" destination-port="nPort" destination-type="4" destination-session="" waiting-session-selected="" xml-namespace="" >
            <parameter tag="&quot;code&quot;" value="g_nClick2DialCode"/>
            <parameter tag="&quot;text&quot;" value="g_strClick2DialStatus"/>
          </SOAP>
          <results >
            <result name="Default" link="2" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
        </action>
        <action id="2" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=325 y=59 ?>
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
        </action>
      </actions>
    </function>
    <function name="OnInfo" start="1" event="Info" returns="void" >
      <parameters >
        <parameter name="strAccept" type="string" pass="byref"/>
        <parameter name="strAcceptEncoding" type="string" pass="byref"/>
        <parameter name="strAcceptLanguage" type="string" pass="byref"/>
        <parameter name="strAuthorization" type="string" pass="byref"/>
        <parameter name="strCallId" type="string" pass="byref"/>
        <parameter name="strContact" type="string" pass="byref"/>
        <parameter name="strContent" type="string" pass="byref"/>
        <parameter name="strContentDisposition" type="string" pass="byref"/>
        <parameter name="strContentType" type="string" pass="byref"/>
        <parameter name="strCSeq" type="string" pass="byref"/>
        <parameter name="strDate" type="string" pass="byref"/>
        <parameter name="strEncryption" type="string" pass="byref"/>
        <parameter name="strFrom" type="string" pass="byref"/>
        <parameter name="strMaxForwards" type="string" pass="byref"/>
        <parameter name="strMIMEVersion" type="string" pass="byref"/>
        <parameter name="strOrganization" type="string" pass="byref"/>
        <parameter name="strPriority" type="string" pass="byref"/>
        <parameter name="strProxyAuthorization" type="string" pass="byref"/>
        <parameter name="strProxyRequire" type="string" pass="byref"/>
        <parameter name="strRecordRoute" type="string" pass="byref"/>
        <parameter name="strRequestURI" type="string" pass="byref"/>
        <parameter name="strRequire" type="string" pass="byref"/>
        <parameter name="strResponseKey" type="string" pass="byref"/>
        <parameter name="strRoute" type="string" pass="byref"/>
        <parameter name="strSupported" type="string" pass="byref"/>
        <parameter name="strTimestamp" type="string" pass="byref"/>
        <parameter name="strTo" type="string" pass="byref"/>
        <parameter name="strUserAgent" type="string" pass="byref"/>
        <parameter name="strVia" type="string" pass="byref"/>
      </parameters>
      <local-vars >
        <var name="bConnected" type="boolean" >0</var>
        <var name="nFinalStatus" type="i4" >0</var>
        <var name="bALegHungUp" type="boolean" >0</var>
        <var name="nReturnCode" type="i4" >0</var>
        <var name="strResponse" type="string" ></var>
        <var name="bCallEstablished" type="boolean" >0</var>
        <var name="bConnectToVoicemail" type="boolean" >0</var>
        <var name="bINFOAccepted" type="boolean" >0</var>
        <var name="nMsgNumber" type="i4" >0</var>
        <var name="oDummy" type="object" ></var>
        <var name="bInternalTransfer" type="boolean" >0</var>
        <var name="strStatus" type="string" ></var>
        <var name="strEventReceived" type="string" ></var>
        <var name="nStatus" type="i4" >0</var>
        <var name="nIdx" type="i4" >0</var>
        <var name="strOrigEnteredDestNbr" type="string" ></var>
        <var name="bNoContent" type="boolean" >0</var>
        <var name="bUknownCallId" type="boolean" >0</var>
        <var name="strResponseStatus" type="string" ></var>
        <var name="nReturnValue" type="i4" >0</var>
        <var name="nErrorPrompt" type="i4" >0</var>
        <var name="oSipMsg" type="object" ></var>
        <var name="oAccessLine_orig" type="object" ></var>
        <var name="oAPI_orig" type="object" ></var>
        <var name="oVoipService_orig" type="object" ></var>
        <var name="oSub_orig" type="object" ></var>
        <var name="strCallType" type="string" ></var>
      </local-vars>
      <actions >
        <action id="1" plug-in="Pactolus.Branch.1" ><?xtml-editor x=75 y=139 ?>
          <results >
            <result name="Default" link="24" stubbed="0"/>
            <result name="accepted" link="14" stubbed="0" >bINFOAccepted == true</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[js_initVoipCallLeg( Session.g_oCallLegs[2] ) ;



//in case we need to fall back and return the user to the IVR, 



// save the iniitial authOrigination returns



Session.oAccessLine_orig = Session.g_oAccessLine;



Session.oAPI_orig = Session.g_oAPI;



Session.oVoipService_orig = Session.g_oVoipService;



Session.oSub_orig = Session.g_oSub;



//save call leg 1 in case we need to return the user to the IVR 



Session.g_oCallLegs[3] = Session.g_oCallLegs[1];







//if we do not recognize the Content in the INFO message we *should* respond with a 



// 415 Unsupported Media Type, but for now we are simply returning a 200 OK and taking



// no action. Some Nextones are sending digit INFO messages that need no action, but 



// not accespting these results in the call being torn down by the Nextone.



Session.strResponseStatus = "SIP/2.0 200 OK";







if ( Session.strCallId != Session.g_oCallLegs[0].strCallId && Session.strCallId != Session.g_oCallLegs[1].strCallId ) {



	Session.bUknownCallId = true;



	Session.strResponseStatus = "SIP/2.0 481 Call/Transaction Does Not Exist";



	Server.logError("Received INFO message from unknown call id: " + Session.strCallId);



	return;



}















//get transfer type and value from the Content



//Content: IVR_Extension_xxxx;DeptId=xxxx;IVRId=xxxx



if ( -1 != Session.strContent.indexOf("Extension")) {



	var i = Session.strContent.lastIndexOf("_");



	var j = Session.strContent.indexOf(";DeptId=");



	var k = Session.strContent.indexOf(";IVRId=");



	Session.g_oAPI_B.strDestReceived = Session.strContent.substring((i + 1), j);



	Session.g_oAPI_B.nDeptId = Session.strContent.substring((j + 8), k);



	if( 0 < Session.g_oAPI_B.strDestReceived.length ) {



		Session.g_oCallLegs[2].strDestRouteType = Session.s_RT_ON_NET;



		Session.bInternalTransfer = true;



		Session.bINFOAccepted = true;



		Server.logInfo("Transferring call from IVR to subscriber phone number: " + Session.g_oAPI_B.strDestReceived + " in dept id: " + Session.g_oAPI_B.nDeptId);



		Session.g_oAPI.strDestReceived = Session.g_oAPI_B.strDestReceived ;



		Session.strCallType = Session.g_oCallLegs[1].strCallType = Session.g_oAPI.strCallType = Session.s_CT_IVR_TRANSFER;







		//store the IVR id so that if the transfer fails we can return the caller to the IVR to try again.



		Session.g_oAPI.lIvrId = Session.strContent.substr((k + 7));



		Session.g_oAPI.lIvrId = Session.g_oAPI.lIvrId.slice(0, -2);



		Server.logInfo("This call was directed from IVR ID: " + Session.g_oAPI.lIvrId);



		



	}



	else {



		Server.logError("No target extension was provided in the INFO Content");



		Session.strResponseStatus = "SIP/2.0 415 Unsupported Media Type";



	}



}	



//Content: IVR_External_xxxxxxxxxx;SvcId=xxx;DpId=xxx;IVRId=xxx^M



else if ( -1 != Session.strContent.indexOf("External")) {



	var i = Session.strContent.lastIndexOf("_");



	var j = Session.strContent.indexOf(";Svc");



	Session.g_oAPI_B.strDestReceived = Session.strContent.substring((i + 1), j);



	if ( 0 < Session.g_oAPI_B.strDestReceived.length ) {



		Session.g_oCallLegs[2].strDestRouteType = Session.s_RT_OFF_NET;



		Session.bInternalTransfer = false;



		Session.bINFOAccepted = true;



		Session.g_oAPI.strDestReceived = Session.g_oAPI_B.strDestReceived;



		Session.strCallType = Session.g_oCallLegs[1].strCallType = Session.g_oAPI.strCallType = Session.s_CT_IVR_TRANSFER;



		Session.g_oAPI_B.nDeptId = Session.g_oAPI.lDeptId ;



		Server.logInfo("Transferring call from IVR to external number: " + Session.g_oAPI_B.strDestReceived + " subscriber is in dept id: " + Session.g_oAPI_B.nDeptId );



	}



	else {



		Server.logError("No target phone number was provided in the INFO Content");



		Session.strResponseStatus = "SIP/2.0 415 Unsupported Media Type";



		return;



	}



	



	var i = Session.strContent.indexOf("=");



	var j = Session.strContent.indexOf(";Dp");



	Session.g_oVoipService_B.nSvcId = Session.strContent.substring((i + 1), j);



	Server.logInfo("Voip Service ID: " + Session.g_oVoipService_B.nSvcId);



	



	var i = Session.strContent.indexOf(";IVRId=");



	Session.g_oAPI_B.nDialingPlanId = Session.strContent.substring((j + 3), i);



	//Session.g_oAPI_B.nDialingPlanId = Session.g_oAPI_B.nDialingPlanId.toString().slice(0, -2);



	Server.logInfo("Dialing Plan ID: " + Session.g_oAPI.nDialingPlanId);



	



	Session.g_oAPI.lIvrId = Session.strContent.substr((i + 7));



	Session.g_oAPI.lIvrId = Session.g_oAPI.lIvrId.slice(0, -2);



	Server.logInfo("This call was directed from IVR ID: " + Session.g_oAPI.lIvrId);



}



//VM_deposit_1333;IVRId=121



else if ( -1 != Session.strContent.indexOf("VM_deposit")) {



	var i = Session.strContent.lastIndexOf("_");



	var j = Session.strContent.indexOf(";IVRId=");



	Session.g_oAPI_B.lVoiceMailId = Session.strContent.substring((i + 1), j);



	if ( 0 != Session.g_oAPI_B.lVoiceMailId ) {



		Server.logInfo("Transferring call from IVR to voice mail deposit for voice mail account id: " + Session.g_oAPI_B.lVoiceMailId);



		Session.bConnectToVoicemail = true;



		Session.bINFOAccepted = true;



		



		Session.g_oAPI.lIvrId = Session.strContent.substr((j + 7));



		Session.g_oAPI.lIvrId = Session.g_oAPI.lIvrId.slice(0, -2);



		Server.logInfo("This call was directed from IVR ID: " + Session.g_oAPI.lIvrId);



		



	}



	else {



		Server.logError("No target voicemail account was provided in the INFO Content");



		Session.strResponseStatus = "SIP/2.0 415 Unsupported Media Type";



	}



}



else {



	Server.logError("Unrecognized Content in the INFO message: " + Session.strContent);



}















]]></script>
          </scripts>
        </action>
        <action id="2" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=728 y=78 ?>
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
        </action>
        <action id="4" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=1529 y=316 ?>
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_oCallLegs[1].nState = Session.s_LEG_STATE_CONNECTED ;



Session.g_STATE = Session.s_STATE_CONNECTED_TO_CALLED ;







Session.g_oCallLegs.length = 2;







]]></script>
          </scripts>
        </action>
        <action id="13" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=538 y=402 ?>
          <!--psAuthOriginate-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;psAuthOriginate&quot;" return="nReturnCode" external-function="0" library="" >
            <parameter >g_oCallLegs[0]</parameter>
            <parameter >0</parameter>
          </function>
          <results >
            <result name="Default" link="25" stubbed="0"/>
            <result name="success" link="18" stubbed="0" >nReturnCode == 0</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.enableEvents(false);











]]></script>
            <script language="javascript" timing="last" ><![CDATA[Session.g_STATE = Session.s_STATE_CONNECTING_TO_CALLED;







Server.enableEvents(true);]]></script>
          </scripts>
        </action>
        <action id="14" plug-in="Pactolus.SipResponse.1" ><?xtml-editor x=215 y=371 ?>
          <!--200 OK-->
          <sip-response xmlns="urn:www.pactolus.com:xtml:sip" remove-via="0" reliable="0" increment-cseq-first="0" increment-cseq-last="0" >
            <call-id >strCallId</call-id>
            <cseq >strCSeq</cseq>
            <from >strFrom</from>
            <status >"SIP/2.0 200 OK"</status>
            <to >strTo</to>
            <via >strVia</via>
          </sip-response>
          <results >
            <result name="Default" link="13" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
            <result name="on net call" link="18" stubbed="0" >g_oCallLegs[1].strDestRouteType == s_RT_ON_NET



AND bConnectToVoicemail == false</result>
            <result name="off net call" link="13" stubbed="0" >g_oCallLegs[1].strDestRouteType == s_RT_OFF_NET



AND bConnectToVoicemail == false</result>
            <result name="voicemail call" link="31" stubbed="0" >bConnectToVoicemail == true</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[//move the values from g_oCallLegs[2] over to g_oCallLegs[1] now



// if this is a direct transfer to vmail, we will maintain the original values



// using the IVR phone number.



if ( !Session.bConnectToVoicemail ) {



	Session.g_oCallLegs[1] = Session.g_oCallLegs[2];



}











]]></script>
          </scripts>
        </action>
        <action id="18" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=935 y=378 ?>
          <!--TransferFromIVR-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;TransferFromIVR&quot;" return="bConnected" external-function="1" library="lib_voip.xml" >
            <parameter >g_oCallLegs[0]</parameter>
            <parameter >g_oCallLegs[1]</parameter>
            <parameter >s_strLocalUri</parameter>
            <parameter >g_oAPI_B</parameter>
            <parameter >g_oAccessLine_B</parameter>
            <parameter >s_strCarrierName</parameter>
            <parameter >s_strPrimarySoftswitch</parameter>
            <parameter >s_strBackupSoftswitch</parameter>
            <parameter >s_strNiuAddress</parameter>
            <parameter >bInternalTransfer</parameter>
            <parameter >bConnectToVoicemail</parameter>
            <parameter >g_oVoipService_B</parameter>
            <parameter >g_oMS</parameter>
            <parameter >g_oSimRingCallLegs</parameter>
            <parameter >g_oSub_B</parameter>
            <parameter >g_oRate</parameter>
          </function>
          <results >
            <result name="Default" link="33" stubbed="0"/>
            <result name="success" link="30" stubbed="0" >bConnected == true</result>
            <result name="Play Error and return to IVR" link="25" stubbed="0" >g_oCallLegs[0].bConnected == true



AND bConnected == false</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_oCallLegs[1].strEnteredDestNbr = Session.g_oAPI.strDestReceived ;



if ( Session.s_CT_IVR_MENU == Session.g_oAPI.strCallType ) {



	Server.logInfo("The route target is another IVR");



	//we'll save the db hit in the transfer function, since we already have all of the info



	// from our call to authOrig for this transfer.



	Session.g_oAccessLine_B = Session.g_oAccessLine;



	Session.g_oAPI_B = Session.g_oAPI;



	Session.g_oSub_B = Session.g_oSub;



	Session.g_oVoipService_B = Session.g_oVoipService;	



}



else {



	Session.g_oAPI_B.strPlatformSessionId = Session.g_oAPI.strPlatformSessionId ;



	Session.g_oAPI_B.strProcDBName = Session.g_oAPI.strProcDBName ;



	Session.g_oAPI_B.strDestReceived = Session.g_oAPI.strDestReceived ;



	Session.g_oAPI_B.strAniReceived = Session.g_oAPI.strAniReceived ;



	Session.g_oAccessLine_B.strRealm = Session.g_oAccessLine.strRealm ;



	Session.g_oAPI_B.bCallerIdBlocked = Session.g_oAPI.bCallerIdBlocked ;



	Session.g_oAPI.lDeptId = Session.g_oAPI_B.nDeptId;



	Session.g_oAccessLine_B.lAccessLineId = Session.g_oAccessLine.lAccessLineId;



	Session.g_oAPI_B.strBroadbandCallingFlag = "T" ;



	Session.g_oAPI_B.strCallType = Session.strCallType ;



}











Session.g_oCallLegs[1].bCurrentlyDialing = true ;



Session.g_oCallLegs[1].nState = Session.s_LEG_STATE_DIALING ;







Session.g_oCallLegs[1].strEventId = "";







if ( Session.bInternalTransfer ) {



	Session.g_bWriteBLegCDR = true;



}







Session.g_oCallLegs[3].lTimeEnded = Server.getUTCTime() ;]]></script>
            <script language="javascript" timing="last" ><![CDATA[Server.logInfo("CallLegs[0].bConnected = " + Session.g_oCallLegs[0].bConnected);



Server.logInfo("CallLegs[1].bConnected = " + Session.g_oCallLegs[1].bConnected);







Session.g_oCallLegs[1].bCurrentlyDialing = false ;







Session.g_oCallLegs[1].strWiretapFlag = Session.g_oAccessLine_B.strWiretapFlag ;



Session.g_oCallLegs[1].strWiretapDest = Session.g_oAccessLine_B.strWiretapDest ;



Session.g_oCallLegs[1].strIntlDestFlag = Session.g_oAPI_B.strIntlDestFlag ;



Session.g_oCallLegs[1].intDestCountryId = Session.g_oAPI_B.nDestCountryId ;



Session.g_oCallLegs[1].strDestCallingCode = Session.g_oAPI_B.strDestCallingCode ;



Session.g_oCallLegs[1].strDestAreaCode = Session.g_oAPI_B.strDestAreaCode ;







/* save some information in the API global object that we will need dest auth and cdr */



Session.g_oAPI_B.lServiceProviderId = Session.g_oAccessLine_B.oSub.lSPId ;



Session.g_oSub_B.nServiceId = Session.g_oVoipService_B.nSvcId ;



Session.g_oSub_B.lSubscriberId = Session.g_oAccessLine_B.oSub.lSubscriberId ;



Session.g_oSub_B.fPrepaidBalance = Session.g_oAPI_B.fAccountBalance ;



Session.g_oAPI_B.strStrippedOrigNumber = Session.g_oAPI_B.strAniReceived; 



Session.g_oAPI_B.lPhoneNumberId = Session.g_oAccessLine_B.lPhoneNumberId ;



Session.g_oAPI_B.lWiretapOrderId = Session.g_oAccessLine_B.lWiretapOrderId ;



Session.g_oAPI_B.strDestinationNumber = Session.g_oAPI_B.strDestReceived ;







Session.g_oSub_B.nExpirationType = Session.g_oAccessLine_B.oSub.nExpirationType ;



Session.g_oSub_B.nCurrencyId = Session.g_oAccessLine_B.oSub.nCurrencyId ;



Session.g_oSub_B.strFirstCallFlag = Session.g_oAccessLine_B.oSub.strFirstCallFlag ;



Session.g_oAPI_B.nRoundingSeconds = Session.g_oAPI_B.nRoundingSeconds ;



Session.g_oSub_B.nRoundingThreshold =  Session.g_oAccessLine_B.oSub.nRoundingThresholdSeconds ;



Session.g_oSub_B.nNumExpDays = Session.g_oAccessLine_B.oSub.nNumExpDays ;



Session.g_oSub_B.fCallMarkupPercent = Session.g_oAccessLine_B.oSub.fCallMarkupPercent ;



Session.g_oSub_B.nSecondsRemaining = Session.g_oVoipService_B.nMaxCallDuration ;



	











]]></script>
          </scripts>
        </action>
        <action id="19" plug-in="Pactolus.Branch.1" ><?xtml-editor x=696 y=561 ?>
          <!--Construct headers for VM transfer-->
          <results >
            <result name="Default" link="18" stubbed="0"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[/* construct headers on the Called Party leg */



Session.g_oCallLegs[1].strFrom = Session.g_oCallLegs[0].strFrom ;



Session.g_oCallLegs[1].strRoute = "" ;



Session.g_oCallLegs[1].bUac = true ;







Session.g_oCallLegs[1].strOutdialDestNbr =  Session.g_oAPI.strDestReceived ;



Session.g_oCallLegs[1].strDestRouteType = Session.g_oAPI.strDestOnNet = Session.s_RT_ON_NET ;



Session.g_oAPI.strIntlDestFlag = "F" ;







Session.g_oCallLegs[0].strContact = Session.g_oCallLegs[1].strContact = Session.s_strLocalUri ;







Session.g_oAPI.strCallType = Session.g_oCallLegs[1].strCallType = Session.s_CT_VMAIL_DEPOSIT;







Session.g_oCallLegs[0].strContact = Session.g_oCallLegs[1].strContact = "<sip:" + Server.sipAddress + ":" + Server.sipPort + ">" ;







Session.g_STATE = Session.s_STATE_CONNECTING_TO_CALLED;



]]></script>
          </scripts>
        </action>
        <action id="20" plug-in="Standard.EndSession.1" ><?xtml-editor x=1646 y=458 ?></action>
        <action id="22" plug-in="Standard.WaitEvent.1" ><?xtml-editor x=1284 y=626 ?>
          <!--Wait for responses to CANCELs, so we can ACK them before exiting.-->
          <wait xmlns="urn:www.pactolus.com:xtml:communication" timeout="4" recv-name="strEventReceived" >
            <msg name="Pactolus.EveSipResponse.1" >
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter >strCallId</parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter >strStatus</parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
            </msg>
          </wait>
          <results >
            <result name="Default" link="22" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout" link="20" stubbed="0"/>
            <result name="487" link="23" stubbed="0" >nStatus == 487



AND nIdx != -1</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("Wait 4 seconds in case we get a response to cancelled SimRing routes.");



Session.nStatus = "";]]></script>
            <script language="javascript" timing="middle" ><![CDATA[if ( 2 == Result.id ) {



	var status = new SipStatus(Session.strStatus);



	Session.nStatus = status.code;



	if ( 487 == Session.nStatus ) {



		Session.nIdx = js_search_callid(Session.g_oSimRingCallLegs, Session.strCallId) ;



		if ( -1 != Session.nIdx ) {



			Server.logInfo("Received 487 response from SimRing route with Call ID: " + Session.strCallId);



		}



		else {



		Server.logInfo("Received 487 response for unknown call leg.");	



		}



	}



}











]]></script>
          </scripts>
        </action>
        <action id="23" plug-in="Pactolus.SipAck.1" ><?xtml-editor x=1515 y=769 ?>
          <!--to canceled outbound in simultaneous ring scenario-->
          <sip-ack xmlns="urn:www.pactolus.com:xtml:sip" add-record-route="0" add-via="0" increment-cseq-first="0" increment-cseq-last="0" >
            <call-id >g_oSimRingCallLegs[nIdx].strCallId</call-id>
            <cseq >g_oSimRingCallLegs[nIdx].strCSeq</cseq>
            <from >g_oSimRingCallLegs[nIdx].strFrom</from>
            <request-uri >g_oSimRingCallLegs[nIdx].strRequestUri</request-uri>
            <to >g_oSimRingCallLegs[nIdx].strTo</to>
            <via >g_oSimRingCallLegs[nIdx].strOriginalVia</via>
          </sip-ack>
          <results >
            <result name="Default" link="22" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
        </action>
        <action id="24" plug-in="Pactolus.SipResponse.1" ><?xtml-editor x=411 y=52 ?>
          <sip-response xmlns="urn:www.pactolus.com:xtml:sip" remove-via="0" reliable="0" increment-cseq-first="0" increment-cseq-last="0" >
            <call-id >strCallId</call-id>
            <cseq >strCSeq</cseq>
            <from >strFrom</from>
            <status >strResponseStatus</status>
            <to >strTo</to>
            <via >strVia</via>
          </sip-response>
          <results >
            <result name="Default" link="2" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
        </action>
        <action id="25" plug-in="Pactolus.MGCPPlay.1" ><?xtml-editor x=816 y=809 ?>
          <!--play error message-->
          <play xmlns="urn:www.pactolus.com:xtml:media" connection-id="g_oMS.strConnectionId" endpoint="g_oMS.strEndPoint" callid="g_oMS.strCallId" repeat="1" timeout="s_nLongTimeout" ms-type="s_strMsType" returns="nReturnValue" start-play="1" interrupt="0" return-immediate="0" digit-map="" language="g_oAccessLine.strLanguage" digits="" retry-count="" clear-digits="1" terminating-digit="" quick-collect="0" digit-timer="" >
            <audio type="index" >nErrorPrompt</audio>
          </play>
          <results >
            <result name="Default" link="26" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[if ( "486" == Session.g_oCallLegs[1].strSIPStatus ){



	Session.nErrorPrompt = 1015;



}



else {



	Session.nErrorPrompt = 375;



}]]></script>
          </scripts>
        </action>
        <action id="26" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=1053 y=883 ?>
          <!--TransferFromIVR - route call back to IVR-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;TransferFromIVR&quot;" return="bConnected" external-function="1" library="lib_voip.xml" >
            <parameter >g_oCallLegs[0]</parameter>
            <parameter >g_oCallLegs[1]</parameter>
            <parameter >s_strLocalUri</parameter>
            <parameter >g_oAPI</parameter>
            <parameter >g_oAccessLine</parameter>
            <parameter >s_strCarrierName</parameter>
            <parameter >s_strPrimarySoftswitch</parameter>
            <parameter >s_strBackupSoftswitch</parameter>
            <parameter >s_strNiuAddress</parameter>
            <parameter >0</parameter>
            <parameter >0</parameter>
            <parameter >g_oVoipService</parameter>
            <parameter >g_oMS</parameter>
            <parameter >g_oSimRingCallLegs</parameter>
            <parameter >g_oSub</parameter>
            <parameter >g_oRate</parameter>
          </function>
          <results >
            <result name="Default" link="22" stubbed="0"/>
            <result name="success" link="28" stubbed="0" >bConnected == true</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_oCallLegs[1] = Session.g_oCallLegs[3];







Session.g_oCallLegs.length = 2;







Session.g_oAccessLine = Session.oAccessLine_orig;



Session.g_oAPI = Session.oAPI_orig;



Session.g_oVoipService = Session.oVoipService_orig;



Session.g_oSub = Session.oSub_orig;







if ( Session.g_bTryReceptionist ) {



	Session.g_oProxyList[0] = Session.s_strNiuAddress + ";target=pcs_voip_terminate" ;



	Session.g_oProxyList[0] += ";dept_id=" ;



	Session.g_oProxyList[0] += Session.g_oAPI.lDeptId ;



	Session.g_oProxyList[0] += ";ReceptionRNA=";



	Session.g_oProxyList[0] += Session.g_oAPI.nRNATimeout;



}



else {



	Session.g_oProxyList[0] = Session.s_strNiuAddress + ";target=pcs_voip_ivr" ;



	Session.g_oProxyList[0] += ";dept_id=" ;



	Session.g_oProxyList[0] += Session.g_oAPI.lDeptId ;



	Session.g_oProxyList[0] += ";ivr_id=" ;



	Session.g_oProxyList[0] += Session.g_oAPI.nActionValueId ;



}







var toHeader = new SipTo(Session.g_oCallLegs[1].strTo.toString());



var toHeader.tag = "";



Session.g_oCallLegs[1].strTo = toHeader.encode();







Session.g_oCallLegs[1].strRemoteUri = Session.g_oCallLegs[1].strRequestUri;







Session.g_oAPI.lPlatformSessionStartTime = Session.g_oCallLegs[1].lTimeStart;







Server.logInfo("g_oCallLegs[1].strRequestUri = " + Session.g_oCallLegs[1].strRequestUri);



Server.logInfo("g_oCallLegs[1].strFrom = " + Session.g_oCallLegs[1].strFrom);























]]></script>
          </scripts>
        </action>
        <action id="28" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=1326 y=900 ?>
          <!--bbtelSetTimers-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;bbtelSetTimers&quot;" return="" external-function="1" library="lib_voip.xml" >
            <parameter >g_oTimer</parameter>
            <parameter >g_oSub.nSecondsAvailable</parameter>
            <parameter >g_oAPI.nWarningThreshold1</parameter>
            <parameter >g_oAPI.nWarningThreshold2</parameter>
            <parameter >g_oAPI.nWarningThreshold3</parameter>
            <parameter >g_oSub.nReservedSeconds</parameter>
          </function>
          <results >
            <result name="Default" link="29" stubbed="0"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[// if we're setting the timers ... set the language in the API object so



// when we call the timer functions they get the correct language ...



Session.g_oAPI.strLanguage = Session.g_oAccessLine.strLanguage;]]></script>
          </scripts>
        </action>
        <action id="29" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=1583 y=926 ?>
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
        </action>
        <action id="30" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=1193 y=310 ?>
          <!--ProcCallCompletion for IVR call leg-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;psAPIProcCallCompletion&quot;" return="" external-function="1" library="lib_APISce.xml" >
            <parameter >oAPI_orig</parameter>
            <parameter >oSub_orig</parameter>
            <parameter >g_oCallLegs[0]</parameter>
            <parameter >g_oCallLegs[3]</parameter>
            <parameter >g_oRate</parameter>
            <parameter >oDummy</parameter>
            <parameter >oDummy</parameter>
          </function>
          <results >
            <result name="Default" link="4" stubbed="0"/>
            <result name="not in an IVR" link="32" stubbed="0" >g_oAPI.strCallType != s_CT_IVR_MENU</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_oAPI.lPlatformSessionStartTime = Session.g_oCallLegs[3].lTimeStart; 



Session.g_bWriteBLegCDR = false ;







/* we may have reserved a balance for this next call, so save the values for later use in procCallCompletion */



Session.g_oSub.nSecondsAvailable = Session.g_oSub_B.nSecondsAvailable ;



Session.g_oSub.nSecondsAnnounce = Session.g_oSub_B.nSecondsAnnounce ;



if( Session.g_oSub_B.nReservedSeconds > 0 ) {



	Session.g_oSub.lBillingSessionId = Session.g_oSub_B.lBillingSessionId ;



	Session.g_oSub.lReservationId = Session.g_oSub_B.lReservationId ;



	Session.g_oSub.nReservedSeconds = Session.g_oSub_B.nReservedSeconds ;



}











]]></script>
            <script language="javascript" timing="last" ><![CDATA[Session.g_oAPI.lPlatformSessionStartTime = Session.g_oCallLegs[1].lTimeStart; 











]]></script>
          </scripts>
        </action>
        <action id="31" plug-in="Pactolus.SipBye.1" ><?xtml-editor x=430 y=561 ?>
          <!--hang up ivr leg-->
          <sip-bye xmlns="urn:www.pactolus.com:xtml:sip" add-record-route="0" add-via="1" timeout="2" handle-responses="1" increment-cseq-first="1" increment-cseq-last="0" >
            <call-id >g_oCallLegs[1].strCallId</call-id>
            <cseq >g_oCallLegs[1].strCSeq</cseq>
            <from >g_oCallLegs[1].strFrom</from>
            <request-uri >g_oCallLegs[1].strRemoteUri</request-uri>
            <to >g_oCallLegs[1].strTo</to>
          </sip-bye>
          <results >
            <result name="Default" link="19" stubbed="0"/>
            <result name="Success"/>
            <result name="Client error (4xx)"/>
            <result name="Server error (5xx)"/>
            <result name="Global error (6xx)"/>
            <result name="Timeout"/>
            <result name="Error"/>
          </results>
        </action>
        <action id="32" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=1385 y=417 ?>
          <!--bbtelSetTimers-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;bbtelSetTimers&quot;" return="" external-function="1" library="lib_voip.xml" >
            <parameter >g_oTimer</parameter>
            <parameter >g_oSub.nSecondsAvailable</parameter>
            <parameter >g_oAPI.nWarningThreshold1</parameter>
            <parameter >g_oAPI.nWarningThreshold2</parameter>
            <parameter >g_oAPI.nWarningThreshold3</parameter>
            <parameter >g_oSub.nReservedSeconds</parameter>
          </function>
          <results >
            <result name="Default" link="4" stubbed="0"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[// if we're setting the timers ... set the language in the API object so



// when we call the timer functions they get the correct language ...



Session.g_oAPI.strLanguage = Session.g_oAccessLine.strLanguage;]]></script>
          </scripts>
        </action>
        <action id="33" plug-in="Standard.FunctionCall.1" ><?xtml-editor x=1160 y=484 ?>
          <!--ProcCallCompletion for IVR call leg-->
          <function xmlns="urn:www.pactolus.com:xtml:application" name="&quot;psAPIProcCallCompletion&quot;" return="" external-function="1" library="lib_APISce.xml" >
            <parameter >oAPI_orig</parameter>
            <parameter >oSub_orig</parameter>
            <parameter >g_oCallLegs[0]</parameter>
            <parameter >g_oCallLegs[3]</parameter>
            <parameter >g_oRate</parameter>
            <parameter >oDummy</parameter>
            <parameter >oDummy</parameter>
          </function>
          <results >
            <result name="Default" link="22" stubbed="0"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_oAPI.lPlatformSessionStartTime = Session.g_oCallLegs[3].lTimeStart; 



Session.g_bWriteBLegCDR = false ;







]]></script>
            <script language="javascript" timing="last" ><![CDATA[Session.g_oAPI.bWriteCDR = false ;











]]></script>
          </scripts>
        </action>
      </actions>
    </function>
    <function name="DropRtpRelay" start="1" event="" returns="void" >
      <local-vars >
        <var name="nStatus" type="i4" >0</var>
        <var name="strCallId" type="string" ></var>
        <var name="strContent" type="string" ></var>
        <var name="strContentType" type="string" ></var>
        <var name="strEventType" type="string" ></var>
        <var name="strStatus" type="string" ></var>
      </local-vars>
      <actions >
        <action id="1" plug-in="Pactolus.SipNotify.1" ><?xtml-editor x=55 y=78 ?>
          <!--Event: no-rtp-relay-->
          <sip-notify xmlns="urn:www.pactolus.com:xtml:sip" add-record-route="0" add-via="1" increment-cseq-first="0" increment-cseq-last="0" >
            <call-id >g_oCallLegs[0].strCallId</call-id>
            <contact >s_strLocalUri</contact>
            <cseq >g_oCallLegs[0].strCSeq</cseq>
            <event >"no-rtp-relay"</event>
            <from >g_oCallLegs[0].strTo</from>
            <request-uri >g_oCallLegs[0].strRemoteUri</request-uri>
            <route >g_oCallLegs[0].strRoute</route>
            <to >g_oCallLegs[0].strFrom</to>
            <subscription-state >"active;expires=0"</subscription-state>
          </sip-notify>
          <results >
            <result name="Default" link="2" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.enableEvents(false) ;



Session.g_oAPI.bRelayMedia = true ;



]]></script>
          </scripts>
        </action>
        <action id="2" plug-in="Standard.WaitEvent.1" ><?xtml-editor x=307 y=82 ?>
          <!--Wait for 200 OK-->
          <wait xmlns="urn:www.pactolus.com:xtml:communication" timeout="4" recv-name="strEventType" >
            <msg name="Pactolus.EveSipResponse.1" >
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter >strCallId</parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter >strContent</parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter >strContentType</parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter >strStatus</parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
            </msg>
          </wait>
          <results >
            <result name="Default" link="3" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="last" ><![CDATA[Server.enableEvents(true) ;



if( 2 == Result.id && Session.strCallId == Session.g_oCallLegs[0].strCallId ) {







	Server.logInfo("Received a response to Notify with content of: " + Session.strContent ) ;



	if( Session.strContent.length > 0 ) {



		Session.g_oAPI.bRelayMedia = false ;



		Session.g_oCallLegs[0].strRemoteSdp = Session.strContent ;



		Session.g_oProxyList[0] += ";route_sip_only" ;



	}



}]]></script>
          </scripts>
        </action>
        <action id="3" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=550 y=88 ?>
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
        </action>
      </actions>
    </function>
    <function name="OnOptions" start="1" event="Options" returns="void" >
      <parameters >
        <parameter name="strAccept" type="string" pass="byref"/>
        <parameter name="strAcceptEncoding" type="string" pass="byref"/>
        <parameter name="strAcceptLanguage" type="string" pass="byref"/>
        <parameter name="strAllow" type="string" pass="byref"/>
        <parameter name="strAllowEvents" type="string" pass="byref"/>
        <parameter name="strAuthorization" type="string" pass="byref"/>
        <parameter name="strCallId" type="string" pass="byref"/>
        <parameter name="strCallInfo" type="string" pass="byref"/>
        <parameter name="strContact" type="string" pass="byref"/>
        <parameter name="strContent" type="string" pass="byref"/>
        <parameter name="strContentDisposition" type="string" pass="byref"/>
        <parameter name="strContentEncoding" type="string" pass="byref"/>
        <parameter name="strContentLanguage" type="string" pass="byref"/>
        <parameter name="strContentType" type="string" pass="byref"/>
        <parameter name="strCSeq" type="string" pass="byref"/>
        <parameter name="strDate" type="string" pass="byref"/>
        <parameter name="strEncryption" type="string" pass="byref"/>
        <parameter name="strErrorInfo" type="string" pass="byref"/>
        <parameter name="strFrom" type="string" pass="byref"/>
        <parameter name="strMaxForwards" type="string" pass="byref"/>
        <parameter name="strMIMEVersion" type="string" pass="byref"/>
        <parameter name="strOrganization" type="string" pass="byref"/>
        <parameter name="strProxyAuthorization" type="string" pass="byref"/>
        <parameter name="strProxyRequire" type="string" pass="byref"/>
        <parameter name="strRecordRoute" type="string" pass="byref"/>
        <parameter name="strRemotePartyID" type="string" pass="byref"/>
        <parameter name="strReferredBy" type="string" pass="byref"/>
        <parameter name="strRequestURI" type="string" pass="byref"/>
        <parameter name="strRequire" type="string" pass="byref"/>
        <parameter name="strResponseKey" type="string" pass="byref"/>
        <parameter name="strRoute" type="string" pass="byref"/>
        <parameter name="strSupported" type="string" pass="byref"/>
        <parameter name="strTimestamp" type="string" pass="byref"/>
        <parameter name="strTo" type="string" pass="byref"/>
        <parameter name="strUserAgent" type="string" pass="byref"/>
        <parameter name="strVia" type="string" pass="byref"/>
      </parameters>
      <actions >
        <action id="1" plug-in="Pactolus.SipResponse.1" ><?xtml-editor x=94 y=109 ?>
          <sip-response xmlns="urn:www.pactolus.com:xtml:sip" remove-via="0" reliable="0" increment-cseq-first="0" increment-cseq-last="0" >
            <call-id >strCallId</call-id>
            <cseq >strCSeq</cseq>
            <from >strFrom</from>
            <status >"SIP/2.0 200 OK"</status>
            <to >strTo</to>
            <via >strVia</via>
          </sip-response>
          <results >
            <result name="Default" link="2" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
        </action>
        <action id="2" plug-in="Standard.EndSession.1" ><?xtml-editor x=329 y=124 ?></action>
      </actions>
    </function>
  </functions>
  <script language="javascript" ><![CDATA[#include <javascript_utils.jsh>



#include <dialing_plan_utils.jsh>







function InitTimers()



{



	Session.g_oTimer.lMaxCallDuration = 0;



	Session.g_oTimer.lThresholdTimer1 = 0;



	Session.g_oTimer.lThresholdTimer2 = 0;



	Session.g_oTimer.lThresholdTimer3 = 0 ;



	Session.g_oTimer.lReservationTimer = 0 ;



}







function InitVars()



{



	InitTimers() ;



	js_initVoipCallLeg( Session.g_oCallLegs[0] ); 



	js_initVoipCallLeg( Session.g_oCallLegs[1] ); 



	js_initAPI( Session.g_oAPI ) ;



	js_initMS( Session.g_oMS, Session.s_strMsType ) ;



	js_initVoipAccessLine( Session.g_oAccessLine ) ;



	js_initVoipService( Session.g_oVoipService ) ;







	//Session.g_oMS.strCodec = "PCMU" ;



	Session.g_oAPI.strBroadbandCallingFlag = "T" ;



	



	Session.g_oCallLegs[0].nState = Session.s_LEG_STATE_NONE ;



	Session.g_oCallLegs[1].nState = Session.s_LEG_STATE_NONE ;



	Session.g_oCallLegs[0].bUac = false ;



	Session.g_oCallLegs[1].bUac = true ;



}]]></script>
  <properties >
    <property key="&quot;eng&quot;" value="C:/eclipse/eclipse/workspace/Applications/InternalProduct/pcs_english.vox"/>
    <property key="default" value="C:/pactolus_app_server/prompts/pcs_english.vox"/>
    <property key="disable-logging" value="0"/>
    <property key="js-include-path" value="../Libs"/>
    <property key="library-modules" value="lib_mediaserver.xml;lib_callcontrol.xml;lib_voip.xml;lib_APISce.xml"/>
    <property key="library-path" value="../Libs"/>
  </properties>
  <application-version >
    <revision >$Id: pcs_voip_originate.xml,v 1.244.2.4 2010/03/30 19:21:28 jgibson Exp $</revision>
    <label >$Name: PCS-A-4-1-1-1-4-c6 $</label>
  </application-version>
</xtml>