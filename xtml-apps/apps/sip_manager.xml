<?xml version="1.0"?>
<xtml version="1.0" xmlns="urn:www.pactolus.com:xtml" >
  <version sce-version="6021" prev-sce-version="6021" last-mod-time="Thursday, July 23, 2009 14:31:45"/>
  <events >
    <event name="CreateConferenceRequest" display="CreateConferenceRequest" >
      <parameter name="strRequestorSessionId" type="string"/>
      <parameter name="strMediaServerIP" type="string"/>
      <parameter name="strMediaServerType" type="string"/>
      <parameter name="bPersistentFlag" type="boolean"/>
      <parameter name="strConfScheduleId" type="string"/>
      <parameter name="strConfControllerIP" type="string"/>
      <parameter name="nConfControllerPort" type="i4"/>
      <parameter name="strConferenceType" type="string"/>
      <parameter name="bWideband" type="boolean"/>
    </event>
    <event name="DeleteConferenceRequest" display="DeleteConferenceRequest" >
      <parameter name="strRequestorSessionId" type="string"/>
      <parameter name="strMediaServerIP" type="string"/>
      <parameter name="strMediaServerType" type="string"/>
      <parameter name="strConferenceEndpoint" type="string"/>
      <parameter name="strConfScheduleId" type="string"/>
      <parameter name="strConferenceType" type="string"/>
    </event>
    <event name="ConfActiveSpeakerRequest" display="ConfActiveSpeakerRequest" >
      <parameter name="strConfControllerIP" type="string"/>
      <parameter name="nConfControllerPort" type="i4"/>
      <parameter name="strTransactionId" type="string"/>
      <parameter name="strConferenceId" type="string"/>
      <parameter name="strMediaServerEndpoint" type="string"/>
    </event>
    <event name="ConfCancelActiveSpeakerRequest" display="ConfCancelActiveSpeakerRequest" >
      <parameter name="strConfControllerIP" type="string"/>
      <parameter name="nConfControllerPort" type="i4"/>
      <parameter name="strTransactionId" type="string"/>
      <parameter name="strConferenceId" type="string"/>
    </event>
    <event name="ConfEndRequest" display="ConfEndRequest" >
      <parameter name="strConfControllerIP" type="string"/>
      <parameter name="nConfControllerPort" type="i4"/>
      <parameter name="strTransactionId" type="string"/>
      <parameter name="strConfScheduleId" type="string"/>
      <parameter name="strConferenceEndpoint" type="string"/>
      <parameter name="strConnections" type="string"/>
    </event>
    <event name="ConfAllocateMSEndpointRequest" display="ConfAllocateMSEndpointRequest" >
      <parameter name="strConfControllerIP" type="string"/>
      <parameter name="nConfControllerPort" type="i4"/>
      <parameter name="strTransactionId" type="string"/>
      <parameter name="bWideband" type="boolean"/>
    </event>
    <event name="ConfReleaseMSEndpointRequest" display="ConfReleaseMSEndpointRequest" >
      <parameter name="strConfControllerIP" type="string"/>
      <parameter name="nConfControllerPort" type="i4"/>
      <parameter name="strTransactionId" type="string"/>
      <parameter name="strConferenceEndpoint" type="string"/>
    </event>
    <event name="ConfMuteRequest" display="ConfMuteRequest" >
      <parameter name="strConfControllerIP" type="string"/>
      <parameter name="nConfControllerPort" type="i4"/>
      <parameter name="strTransactionId" type="string"/>
      <parameter name="strConfScheduleId" type="string"/>
      <parameter name="strConferenceEndpoint" type="string"/>
      <parameter name="strEndpointConnectionId" type="string"/>
    </event>
    <event name="ConfUnmuteRequest" display="ConfUnmuteRequest" >
      <parameter name="strConfControllerIP" type="string"/>
      <parameter name="nConfControllerPort" type="i4"/>
      <parameter name="strTransactionId" type="string"/>
      <parameter name="strConfScheduleId" type="string"/>
      <parameter name="strConferenceEndpoint" type="string"/>
      <parameter name="strEndpointConnectionId" type="string"/>
    </event>
    <event name="ConfMusicOffRequest" display="ConfMusicOffRequest" >
      <parameter name="strConfControllerIP" type="string"/>
      <parameter name="nConfControllerPort" type="i4"/>
      <parameter name="strTransactionId" type="string"/>
      <parameter name="strConfScheduleId" type="string"/>
      <parameter name="strConferenceEndpoint" type="string"/>
      <parameter name="strReleaseEndpointFlag" type="string"/>
    </event>
    <event name="ConfMusicOnRequest" display="ConfMusicOnRequest" >
      <parameter name="strConfControllerIP" type="string"/>
      <parameter name="nConfControllerPort" type="i4"/>
      <parameter name="strTransactionId" type="string"/>
      <parameter name="strConfScheduleId" type="string"/>
      <parameter name="strConferenceEndpoint" type="string"/>
      <parameter name="lServiceProviderId" type="i8"/>
    </event>
    <event name="ConfStartRecordRequest" display="ConfStartRecordRequest" >
      <parameter name="strConfControllerIP" type="string"/>
      <parameter name="nConfControllerPort" type="i4"/>
      <parameter name="strTransactionId" type="string"/>
      <parameter name="strConferenceSessionId" type="string"/>
      <parameter name="strConferenceName" type="string"/>
      <parameter name="strRequestorSessionId" type="string"/>
      <parameter name="strRecordFileName" type="string"/>
    </event>
    <event name="ConfStopRecordRequest" display="ConfStopRecordRequest" >
      <parameter name="strConfControllerIP" type="string"/>
      <parameter name="nConfControllerPort" type="i4"/>
      <parameter name="strTransactionId" type="string"/>
      <parameter name="nTerminatedReason" type="i4"/>
    </event>
    <event name="SetConferenceManagingSessionResponse" display="SetConferenceManagingSessionResponse" >
      <parameter name="strConfControllerIP" type="string"/>
      <parameter name="nConfControllerPort" type="i4"/>
      <parameter name="strTransactionId" type="string"/>
      <parameter name="nReturnCode" type="i4"/>
      <parameter name="strReturnMsg" type="string"/>
    </event>
  </events>
  <global-handlers >
    <handler event="Standard.OnServiceLoad.1" function="OnServiceLoad" public="0" always-on="0"/>
    <handler event="Pactolus.EveSessionSipMsg.1" function="OnSipMsgWithinDialog" public="0" always-on="0"/>
    <handler event="CreateConferenceRequest" function="OnCreateConferenceRequest" public="1" always-on="0"/>
    <handler event="DeleteConferenceRequest" function="OnDeleteConferenceRequest" public="1" always-on="0"/>
    <handler event="ConfActiveSpeakerRequest" function="OnConfActiveSpeakerRequest" public="0" always-on="1"/>
    <handler event="ConfCancelActiveSpeakerRequest" function="OnConfCancelActiveSpeakerRequest" public="0" always-on="1"/>
    <handler event="ConfEndRequest" function="OnConfEndRequest" public="0" always-on="0"/>
    <handler event="ConfAllocateMSEndpointRequest" function="OnConfAllocateMSEndpointRequest" public="0" always-on="0"/>
    <handler event="ConfReleaseMSEndpointRequest" function="OnConfReleaseMSEndpointRequest" public="0" always-on="0"/>
    <handler event="ConfMuteRequest" function="OnConfMuteRequest" public="0" always-on="0"/>
    <handler event="ConfUnmuteRequest" function="OnConfUnmuteRequest" public="0" always-on="0"/>
    <handler event="ConfMusicOffRequest" function="OnConfMusicOffRequest" public="0" always-on="0"/>
    <handler event="ConfMusicOnRequest" function="OnConfMusicOnRequest" public="1" always-on="0"/>
    <handler event="ConfStartRecordRequest" function="OnConfStartRecordRequest" public="0" always-on="0"/>
    <handler event="ConfStopRecordRequest" function="OnConfStopRecordRequest" public="0" always-on="0"/>
  </global-handlers>
  <global-vars >
    <var name="g_cnfMain" type="Conference" ></var>
    <var name="g_cnfTemp" type="Conference" ></var>
    <var name="g_nTimeout" type="i4" >20</var>
    <var name="g_oSubConf" type="object" ></var>
    <var name="g_strConfControllerIP" type="string" ></var>
    <var name="g_nConfControllerPort" type="i4" >0</var>
    <var name="g_strZeroTransactionId" type="string" >0</var>
    <var name="g_strConfScheduleId" type="string" ></var>
    <var name="g_epInConf" type="MediaEndpoint" ></var>
    <var name="g_epPlay" type="MediaEndpoint" ></var>
    <var name="g_strDBName" type="string" >pactolusdb</var>
    <var name="g_oRecording" type="object" ></var>
    <var name="g_strConferenceSessionId" type="string" ></var>
    <var name="g_strRequestorSessionId" type="string" ></var>
    <var name="g_strCreateConfRequestorId" type="string" ></var>
    <var name="g_bConferenceDeleted" type="boolean" >0</var>
  </global-vars>
  <shared-vars >
    <var name="s_strConfMSType" type="string" ></var>
    <var name="s_nConferenceMaxParties" type="i4" >0</var>
    <var name="s_nConferenceMaxTalkers" type="i4" >0</var>
    <var name="s_nNbrActiveSpeakers" type="i4" >0</var>
    <var name="s_nReportingInterval" type="i4" >0</var>
    <var name="s_nDBThreshold" type="i4" >0</var>
    <var name="s_nAGCTargetLevelIn" type="i4" >-96</var>
    <var name="s_nAGCMaxLevelIn" type="i4" >0</var>
    <var name="s_nAGCTargetLevelOut" type="i4" >-96</var>
    <var name="s_nAGCMaxLevelOut" type="i4" >0</var>
    <var name="s_strCodec" type="string" ></var>
    <var name="s_oRecordUrl" type="object" ></var>
    <var name="s_strRecordFailed" type="string" >ConferenceRecordingFailed</var>
    <var name="s_strBackupRecordFailed" type="string" >ConferenceRecordingOnBackupFailed</var>
  </shared-vars>
  <functions >
    <function name="OnServiceLoad" start="1" event="ServiceLoad" returns="void" >
      <parameters >
        <parameter name="strAppName" type="string" pass="byref"/>
        <parameter name="nSessionCount" type="i2" pass="byref"/>
        <parameter name="nMaxIterations" type="i2" pass="byref"/>
        <parameter name="nServerId" type="i2" pass="byref"/>
      </parameters>
      <actions >
        <action id="1" plug-in="Pactolus.UserFunction.1" ><?xtml-editor x=127 y=129 ?>
          <!--GET PSX IP from config-->
          <user-function xmlns="urn:www.pactolus.com:xtml:application" process="&quot;PACTOLUS_ps_c_adaptor&quot;" function="&quot;get_property&quot;" timeout="30" return="" async="0" >
            <parameter >"conferencing-media-server-type"</parameter>
            <parameter >s_strConfMSType</parameter>
            <parameter >"conference-max-parties"</parameter>
            <parameter >s_nConferenceMaxParties</parameter>
            <parameter >"conference-max-talkers"</parameter>
            <parameter >s_nConferenceMaxTalkers</parameter>
            <parameter >"number-active-speaker-report"</parameter>
            <parameter >s_nNbrActiveSpeakers</parameter>
            <parameter >"asn-reporting-interval"</parameter>
            <parameter >s_nReportingInterval</parameter>
            <parameter >"asn-threshold-db"</parameter>
            <parameter >s_nDBThreshold</parameter>
            <parameter >"target-agc-level-in"</parameter>
            <parameter >s_nAGCTargetLevelIn</parameter>
            <parameter >"max-agc-level-in"</parameter>
            <parameter >s_nAGCMaxLevelIn</parameter>
            <parameter >"target-agc-level-out"</parameter>
            <parameter >s_nAGCTargetLevelOut</parameter>
            <parameter >"max-agc-level-out"</parameter>
            <parameter >s_nAGCMaxLevelOut</parameter>
            <parameter >"codec"</parameter>
            <parameter >s_strCodec</parameter>
            <parameter >"record-url1"</parameter>
            <parameter >s_oRecordUrl[0]</parameter>
            <parameter >"record-url2"</parameter>
            <parameter >s_oRecordUrl[1]</parameter>
          </user-function>
          <results >
            <result name="Default" link="2" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo(Session._sessionId + "     CURRENTLY IN FUNCTION: OnServiceLoad");]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (Session.s_strCodec.length <= 0)
{
	Session.s_strCodec = "PCMU";
	Server.logInfo("WARNING: NO SETTING FOR s_strCodec.  USE DEFAULT: PCMU");
}
if (Session.s_strConfMSType.length <= 0)
{
	Session.s_strConfMSType = "SIP+MSML";
	Server.logInfo("WARNING: NO SETTING FOR s_strConfMSType.  USE DEFAULT: SIP+MSML");
}
if (Session.s_nConferenceMaxParties <= 0)
{
	Session.s_nConferenceMaxParties = 125;
	Server.logInfo("WARNING: NO SETTING CONFERENCE MAX PARTIES.  USE DEFAULT: 125");
}
if (Session.s_nConferenceMaxTalkers <= 0)
{
	Session.s_nConferenceMaxTalkers = 16;
	Server.logInfo("WARNING: NO SETTING CONFERENCE MAX TALKERS.  USE DEFAULT: 16");
}
if (Session.s_nDBThreshold < -96)
{
	Session.s_nDBThreshold = -96;
	Server.logInfo("WARNING: NO SETTING FOR s_nDBThreshold.  USE DEFAULT: -96");
}
if (Session.s_nNbrActiveSpeakers <= 0)
{
	Session.s_nNbrActiveSpeakers = 3;
	Server.logInfo("WARNING: NO SETTING FOR s_NbrActiveSpeakers.  USE DEFAULT: 3");
}
if (Session.s_nReportingInterval <= 0)
{
	Session.s_nReportingInterval = 5;
	Server.logInfo("WARNING: NO SETTING FOR s_nReportingInterval.  USE DEFAULT: 5");
}
if (Session.s_nAGCMaxLevelIn < 0)
{
	Session.s_nAGCMaxLevelIn = 125;
	Server.logInfo("WARNING: NO SETTING s_nAGCMaxLevelIn.  USE DEFAULT: 0");
}
if (Session.s_nAGCMaxLevelOut < 0)
{
	Session.s_nAGCMaxLevelOut = 0;
	Server.logInfo("WARNING: NO SETTING s_nAGCMaxLevelOut.  USE DEFAULT: 0");
}
if (Session.s_nAGCTargetLevelIn < -96)
{
	Session.s_nAGCTargetLevelIn = -96;
	Server.logInfo("WARNING: NO SETTING s_nAGCTargetLevelIn.  USE DEFAULT: -96");
}
if (Session.s_nAGCTargetLevelOut < -96)
{
	Session.s_nAGCTargetLevelOut = -96;
	Server.logInfo("WARNING: NO SETTING s_nAGCTargetLevelOut.  USE DEFAULT: -96");
}]]></script>
          </scripts>
        </action>
        <action id="2" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=344 y=127 ?>
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
        </action>
      </actions>
    </function>
    <function name="OnCreateConferenceRequest" start="12" event="CreateConferenceRequest" returns="void" >
      <parameters >
        <parameter name="strRequestorSessionId" type="string" pass="byref"/>
        <parameter name="strMediaServerIP" type="string" pass="byref"/>
        <parameter name="strMediaServerType" type="string" pass="byref"/>
        <parameter name="bPersistentFlag" type="boolean" pass="byref"/>
        <parameter name="strConfScheduleId" type="string" pass="byref"/>
        <parameter name="strConfControllerIP" type="string" pass="byref"/>
        <parameter name="nConfControllerPort" type="i4" pass="byref"/>
        <parameter name="strConferenceType" type="string" pass="byref"/>
        <parameter name="bWideband" type="boolean" pass="byref"/>
      </parameters>
      <local-vars >
        <var name="nReturnCode" type="i4" >-1</var>
        <var name="strReturnMsg" type="string" ></var>
      </local-vars>
      <actions >
        <action id="12" plug-in="Pactolus.Branch.1" ><?xtml-editor x=44 y=266 ?>
          <!--persistent?-->
          <results >
            <result name="Default" link="8" stubbed="0"/>
            <result name="bPersistentFlag" link="2" stubbed="0" >bPersistentFlag == true</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[js_disable_event();
Server.logInfo(Session._sessionId + "     CURRENTLY IN FUNCTION: OnCreateConferenceRequest");
Server.logInfo("CURRENT VALUES OF COFNERENCE");
Server.logInfo("g_strCreateConfRequestorId : " + Session.g_strCreateConfRequestorId);
Server.logInfo("g_strConfScheduleId : " + Session.g_strConfScheduleId);
Server.logInfo("g_strConfControllerIP : " + Session.g_strConfControllerIP);
Server.logInfo("g_nConfControllerPort : " + Session.g_nConfControllerPort);
Server.logInfo("PARAMETERS");
Server.logInfo("strRequestorSessionId : " + Session.strRequestorSessionId);
Server.logInfo("strMediaServerIP : " + Session.strMediaServerIP);
Server.logInfo("strMediaServerType : " + Session.strMediaServerIP);
Server.logInfo("bPersistentFlag : " + Session.bPersistentFlag);
Server.logInfo("strConfScheduleId : " + Session.strConfScheduleId);
Server.logInfo("strConfControllerIP : " + Session.strConfControllerIP);
Server.logInfo("nConfControllerPort : " + Session.nConfControllerPort);
//Type: main, sub, temp?
Server.logInfo("strConferenceType : " + Session.strConferenceType);
Session.g_cnfMain.LogDebug();
Session.g_cnfTemp.LogDebug();]]></script>
          </scripts>
        </action>
        <action id="1" plug-in="Pactolus.CreateConference.1" ><?xtml-editor x=736 y=653 ?>
          <!--g_cnfMain-->
          <create-conference xmlns="urn:www.pactolus.com:xtml:conference" conference="g_cnfMain" persist="1" wideband="0" media-server-type="g_cnfMain.media_server_type" media-server-name="g_cnfMain.media_server_name" max-parties="g_cnfMain.max_parties" max-talkers="g_cnfMain.max_talkers" hysteresis="" time-constant="" active-speakers-to-report="g_cnfMain.asn.num_speakers" reporting-interval="g_cnfMain.asn.report_interval" active-speaker-threshold="g_cnfMain.asn.active_speaker_threshold" return-value="nReturnCode" timeout="g_nTimeout"/>
          <results >
            <result name="Default" link="14" stubbed="1"/>
            <result name="Success" link="4" stubbed="1"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[// intialize conference object...
Session.g_cnfMain.max_parties = Session.s_nConferenceMaxParties;
Session.g_cnfMain.max_talkers = Session.s_nConferenceMaxTalkers;
Session.g_cnfMain.media_server_name = Session.strMediaServerIP; 
Session.g_cnfMain.media_server_type = Session.s_strConfMSType;
Session.g_cnfMain.asn.active_speaker_threshold = Session.s_nDBThreshold;
Session.g_cnfMain.asn.num_speakers = Session.s_nNbrActiveSpeakers;
Session.g_cnfMain.asn.report_interval = Session.s_nReportingInterval;
Session.g_cnfMain.nAGCTargetLevelIn = Session.s_nAGCTargetLevelIn;
Session.g_cnfMain.nAGCMaxLevelIn = Session.s_nAGCMaxLevelIn;
Session.g_cnfMain.nAGCTargetLevelOut = Session.s_nAGCTargetLevelOut;
Session.g_cnfMain.nAGCMaxLevelOut = Session.s_nAGCMaxLevelOut;
Session.g_cnfMain.persistent = true;
Session.g_strConfScheduleId = Session.strConfScheduleId;
Session.g_strConfControllerIP = Session.strConfControllerIP;
Session.g_nConfControllerPort = Session.nConfControllerPort;
Server.logInfo("BEFORE CREATE MAIN COFNERENCE");
Session.g_cnfMain.LogDebug();]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO CREATE MAIN CONFERENCE, EXIT ON: " + Result.name);
	Session.strReturnMsg = "FAIL TO CREATE MAIN CONFERENCE";
}
Server.logInfo("AFTER CREATE COFNERENCE");
Session.g_cnfMain.LogDebug();
Session.g_strCreateConfRequestorId = Session.strRequestorSessionId;
initRecording(Session.g_oRecording);
Server.logInfo("RECORDING OJECT required: " + Session.g_oRecording.required);
Server.logInfo("RECORDING OJECT acquired: " + Session.g_oRecording.acquired);
Server.logInfo("RECORDING OJECT fileName: " + Session.g_oRecording.fileName);
Server.logInfo("RECORDING OJECT paused: " + Session.g_oRecording.paused);
Server.logInfo("RECORDING OJECT sequence: " + Session.g_oRecording.sequence);
Server.logInfo("RECORDING OJECT nfs_server: " + Session.g_oRecording.nfs_server);
Server.logInfo("RECORDING OJECT dialog_id: " + Session.g_oRecording.dialog_id);
Server.logInfo("RECORDING OJECT record_id: " + Session.g_oRecording.record_id);]]></script>
          </scripts>
        </action>
        <action id="2" plug-in="Pactolus.Branch.1" ><?xtml-editor x=298 y=651 ?>
          <!--Conf Created?-->
          <results >
            <result name="Default" link="3" stubbed="1"/>
            <result name="main and not created" link="22" stubbed="0" >strConferenceType match "main"
AND (g_cnfMain.state == 0
OR g_cnfMain.state == 2)</result>
            <result name="temp and not created" link="23" stubbed="0" >strConferenceType match "temp"
AND (g_cnfTemp.state == 0
OR g_cnfTemp.state == 2)</result>
          </results>
          <scripts >
            <script language="javascript" timing="last" ><![CDATA[if (1 == Result.id)
{
	Server.logError("ERROR: CONFERENCE ALREADY CREATED ");
	Session.strReturnMsg = "CONFERENCE ALREADY CREATED";
}]]></script>
          </scripts>
        </action>
        <action id="3" plug-in="Pactolus.SOAPMessage.1" ><?xtml-editor x=968 y=815 ?>
          <!--FAIL to create conferece-->
          <SOAP xmlns="urn:www.pactolus.com:xtml:communication" destination-ip="" transaction="" message-name="&quot;CreateConferenceResponse&quot;" destination-port="" destination-type="3" destination-session="strRequestorSessionId" waiting-session-selected="" xml-namespace="" >
            <parameter tag="" value="nReturnCode"/>
            <parameter tag="" value="strReturnMsg"/>
            <parameter tag="" value="g_cnfMain.name"/>
          </SOAP>
          <results >
            <result name="Default" link="5" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
        </action>
        <action id="4" plug-in="Pactolus.SOAPMessage.1" ><?xtml-editor x=962 y=653 ?>
          <!--SUCCESS create conferece-->
          <SOAP xmlns="urn:www.pactolus.com:xtml:communication" destination-ip="" transaction="" message-name="&quot;CreateConferenceResponse&quot;" destination-port="" destination-type="3" destination-session="strRequestorSessionId" waiting-session-selected="" xml-namespace="" >
            <parameter tag="" value="0"/>
            <parameter tag="" value="strReturnMsg"/>
            <parameter tag="" value="g_cnfMain.name"/>
          </SOAP>
          <results >
            <result name="Default" link="5" stubbed="1"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.strReturnMsg = "SUCCESS CREATE CONFERENCE";
Server.logInfo("CREATE CONFERENCE RETURN CODE IS: " + Session.nReturnCode);]]></script>
          </scripts>
        </action>
        <action id="5" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=1177 y=815 ?>
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("g_strCreateConfRequestorId : " + Session.g_strCreateConfRequestorId);
js_enable_event();]]></script>
          </scripts>
        </action>
        <action id="6" plug-in="Pactolus.CreateConference.1" ><?xtml-editor x=751 y=1088 ?>
          <!--g_cnfTemp-->
          <create-conference xmlns="urn:www.pactolus.com:xtml:conference" conference="g_cnfTemp" persist="1" wideband="1" media-server-type="g_cnfTemp.media_server_type" media-server-name="g_cnfTemp.media_server_name" max-parties="g_cnfTemp.max_parties" max-talkers="g_cnfTemp.max_talkers" hysteresis="" time-constant="" active-speakers-to-report="g_cnfTemp.asn.num_speakers" reporting-interval="g_cnfTemp.asn.report_interval" active-speaker-threshold="g_cnfTemp.asn.active_speaker_threshold" return-value="nReturnCode" timeout="g_nTimeout"/>
          <results >
            <result name="Default" link="3" stubbed="1"/>
            <result name="Success" link="4" stubbed="1"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[// intialize conference object...
Session.g_cnfTemp.max_parties = Session.s_nConferenceMaxParties;
Session.g_cnfTemp.max_talkers = Session.s_nConferenceMaxTalkers;
Session.g_cnfTemp.media_server_name = Session.strMediaServerIP; 
Session.g_cnfTemp.media_server_type = Session.s_strConfMSType;
Session.g_cnfTemp.asn.active_speaker_threshold = Session.s_nDBThreshold;
Session.g_cnfTemp.asn.num_speakers = Session.s_nNbrActiveSpeakers;
Session.g_cnfTemp.asn.report_interval = Session.s_nReportingInterval;
Session.g_cnfTemp.nAGCTargetLevelIn = Session.s_nAGCTargetLevelIn;
Session.g_cnfTemp.nAGCMaxLevelIn = Session.s_nAGCMaxLevelIn;
Session.g_cnfTemp.nAGCTargetLevelOut = Session.s_nAGCTargetLevelOut;
Session.g_cnfTemp.nAGCMaxLevelOut = Session.s_nAGCMaxLevelOut;
Session.g_cnfTemp.persistent = true;
Server.logInfo("BEFORE CREATE TEMP COFNERENCE");
Session.g_cnfTemp.LogDebug();]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO CREATE TEMP CONFERENCE, EXIT ON: " + Result.name);
	Session.strReturnMsg = "FAIL TO CREATE TEMP CONFERENCE";
}
Session.g_cnfTemp.LogDebug();]]></script>
          </scripts>
        </action>
        <action id="8" plug-in="Pactolus.Branch.1" ><?xtml-editor x=274 y=42 ?>
          <!--Conf Created?-->
          <results >
            <result name="Default" link="3" stubbed="1"/>
            <result name="main and not created" link="17" stubbed="0" >strConferenceType match "main"
AND (g_cnfMain.state == 0
OR g_cnfMain.state == 2)</result>
            <result name="temp and not created" link="16" stubbed="0" >strConferenceType match "temp"
AND (g_cnfTemp.state == 0
OR g_cnfTemp.state == 2)</result>
          </results>
          <scripts >
            <script language="javascript" timing="last" ><![CDATA[if (1 == Result.id)
{
	Server.logError("ERROR: CONFERENCE ALREADY CREATED ");
	Session.strReturnMsg = "CONFERENCE ALREADY CREATED";
}]]></script>
          </scripts>
        </action>
        <action id="9" plug-in="Pactolus.CreateConference.1" ><?xtml-editor x=700 y=48 ?>
          <!--g_cnfMain-->
          <create-conference xmlns="urn:www.pactolus.com:xtml:conference" conference="g_cnfMain" persist="0" wideband="0" media-server-type="g_cnfMain.media_server_type" media-server-name="g_cnfMain.media_server_name" max-parties="g_cnfMain.max_parties" max-talkers="g_cnfMain.max_talkers" hysteresis="" time-constant="" active-speakers-to-report="g_cnfMain.asn.num_speakers" reporting-interval="g_cnfMain.asn.report_interval" active-speaker-threshold="g_cnfMain.asn.active_speaker_threshold" return-value="nReturnCode" timeout="g_nTimeout"/>
          <results >
            <result name="Default" link="14" stubbed="0"/>
            <result name="Success" link="4" stubbed="1"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[// intialize conference object...
Session.g_cnfMain.max_parties = Session.s_nConferenceMaxParties;
Session.g_cnfMain.max_talkers = Session.s_nConferenceMaxTalkers;
Session.g_cnfMain.media_server_name = Session.strMediaServerIP; 
Session.g_cnfMain.media_server_type = Session.s_strConfMSType;
Session.g_cnfMain.asn.active_speaker_threshold = Session.s_nDBThreshold;
Session.g_cnfMain.asn.num_speakers = Session.s_nNbrActiveSpeakers;
Session.g_cnfMain.asn.report_interval = Session.s_nReportingInterval;
Session.g_cnfMain.nAGCTargetLevelIn = Session.s_nAGCTargetLevelIn;
Session.g_cnfMain.nAGCMaxLevelIn = Session.s_nAGCMaxLevelIn;
Session.g_cnfMain.nAGCTargetLevelOut = Session.s_nAGCTargetLevelOut;
Session.g_cnfMain.nAGCMaxLevelOut = Session.s_nAGCMaxLevelOut;
Session.g_cnfMain.persistent = true;
Session.g_strConfScheduleId = Session.strConfScheduleId;
Session.g_strConfControllerIP = Session.strConfControllerIP;
Session.g_nConfControllerPort = Session.nConfControllerPort;
Server.logInfo("BEFORE CREATE MAIN COFNERENCE");
Session.g_cnfMain.LogDebug();]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO CREATE MAIN CONFERENCE, EXIT ON: " + Result.name);
	Session.strReturnMsg = "FAIL TO CREATE MAIN CONFERENCE";
}
Session.g_cnfMain.LogDebug();
Session.g_strCreateConfRequestorId = Session.strRequestorSessionId;
initRecording(Session.g_oRecording);
Server.logInfo("RECORDING OJECT required: " + Session.g_oRecording.required);
Server.logInfo("RECORDING OJECT acquired: " + Session.g_oRecording.acquired);
Server.logInfo("RECORDING OJECT fileName: " + Session.g_oRecording.fileName);
Server.logInfo("RECORDING OJECT paused: " + Session.g_oRecording.paused);
Server.logInfo("RECORDING OJECT sequence: " + Session.g_oRecording.sequence);
Server.logInfo("RECORDING OJECT nfs_server: " + Session.g_oRecording.nfs_server);
Server.logInfo("RECORDING OJECT dialog_id: " + Session.g_oRecording.dialog_id);
Server.logInfo("RECORDING OJECT record_id: " + Session.g_oRecording.record_id);]]></script>
          </scripts>
        </action>
        <action id="10" plug-in="Pactolus.CreateConference.1" ><?xtml-editor x=713 y=440 ?>
          <!--g_cnfTemp-->
          <create-conference xmlns="urn:www.pactolus.com:xtml:conference" conference="g_cnfTemp" persist="0" wideband="1" media-server-type="g_cnfTemp.media_server_type" media-server-name="g_cnfTemp.media_server_name" max-parties="g_cnfTemp.max_parties" max-talkers="g_cnfTemp.max_talkers" hysteresis="" time-constant="" active-speakers-to-report="g_cnfTemp.asn.num_speakers" reporting-interval="g_cnfTemp.asn.report_interval" active-speaker-threshold="g_cnfTemp.asn.active_speaker_threshold" return-value="nReturnCode" timeout="g_nTimeout"/>
          <results >
            <result name="Default" link="3" stubbed="1"/>
            <result name="Success" link="4" stubbed="1"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[// intialize conference object...
Session.g_cnfTemp.max_parties = Session.s_nConferenceMaxParties;
Session.g_cnfTemp.max_talkers = Session.s_nConferenceMaxTalkers;
Session.g_cnfTemp.media_server_name = Session.strMediaServerIP; 
Session.g_cnfTemp.media_server_type = Session.s_strConfMSType;
Session.g_cnfTemp.asn.active_speaker_threshold = Session.s_nDBThreshold;
Session.g_cnfTemp.asn.num_speakers = Session.s_nNbrActiveSpeakers;
Session.g_cnfTemp.asn.report_interval = Session.s_nReportingInterval;
Session.g_cnfTemp.nAGCTargetLevelIn = Session.s_nAGCTargetLevelIn;
Session.g_cnfTemp.nAGCMaxLevelIn = Session.s_nAGCMaxLevelIn;
Session.g_cnfTemp.nAGCTargetLevelOut = Session.s_nAGCTargetLevelOut;
Session.g_cnfTemp.nAGCMaxLevelOut = Session.s_nAGCMaxLevelOut;
Session.g_cnfTemp.persistent = true;
Server.logInfo("BEFORE CREATE TEMP COFNERENCE");
Session.g_cnfTemp.LogDebug();]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO CREATE TEMP CONFERENCE, EXIT ON: " + Result.name);
	Session.strReturnMsg = "FAIL TO CREATE TEMP CONFERENCE";
}
Session.g_cnfTemp.LogDebug();]]></script>
          </scripts>
        </action>
        <action id="13" plug-in="Standard.EndSession.1" ><?xtml-editor x=1149 y=42 ?>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("FAIL TO CREATE MAIN CONFERENCE, END SESSION");]]></script>
          </scripts>
        </action>
        <action id="14" plug-in="Pactolus.SOAPMessage.1" ><?xtml-editor x=928 y=44 ?>
          <!--FAIL to create conferece-->
          <SOAP xmlns="urn:www.pactolus.com:xtml:communication" destination-ip="" transaction="" message-name="&quot;CreateConferenceResponse&quot;" destination-port="" destination-type="3" destination-session="strRequestorSessionId" waiting-session-selected="" xml-namespace="" >
            <parameter tag="" value="nReturnCode"/>
            <parameter tag="" value="strReturnMsg"/>
            <parameter tag="" value="g_cnfMain.name"/>
          </SOAP>
          <results >
            <result name="Default" link="13" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
        </action>
        <action id="16" plug-in="Pactolus.Branch.1" ><?xtml-editor x=457 y=215 ?>
          <results >
            <result name="Default" link="18" stubbed="0"/>
            <result name="Wideband" link="10" stubbed="0" >bWideband == true</result>
          </results>
        </action>
        <action id="17" plug-in="Pactolus.Branch.1" ><?xtml-editor x=491 y=50 ?>
          <results >
            <result name="Default" link="9" stubbed="0"/>
            <result name="Wideband" link="19" stubbed="0" >bWideband == true</result>
          </results>
        </action>
        <action id="18" plug-in="Pactolus.CreateConference.1" ><?xtml-editor x=711 y=314 ?>
          <!--g_cnfTemp-->
          <create-conference xmlns="urn:www.pactolus.com:xtml:conference" conference="g_cnfTemp" persist="0" wideband="0" media-server-type="g_cnfTemp.media_server_type" media-server-name="g_cnfTemp.media_server_name" max-parties="g_cnfTemp.max_parties" max-talkers="g_cnfTemp.max_talkers" hysteresis="" time-constant="" active-speakers-to-report="g_cnfTemp.asn.num_speakers" reporting-interval="g_cnfTemp.asn.report_interval" active-speaker-threshold="g_cnfTemp.asn.active_speaker_threshold" return-value="nReturnCode" timeout="g_nTimeout"/>
          <results >
            <result name="Default" link="3" stubbed="1"/>
            <result name="Success" link="4" stubbed="1"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[// intialize conference object...
Session.g_cnfTemp.max_parties = Session.s_nConferenceMaxParties;
Session.g_cnfTemp.max_talkers = Session.s_nConferenceMaxTalkers;
Session.g_cnfTemp.media_server_name = Session.strMediaServerIP; 
Session.g_cnfTemp.media_server_type = Session.s_strConfMSType;
Session.g_cnfTemp.asn.active_speaker_threshold = Session.s_nDBThreshold;
Session.g_cnfTemp.asn.num_speakers = Session.s_nNbrActiveSpeakers;
Session.g_cnfTemp.asn.report_interval = Session.s_nReportingInterval;
Session.g_cnfTemp.nAGCTargetLevelIn = Session.s_nAGCTargetLevelIn;
Session.g_cnfTemp.nAGCMaxLevelIn = Session.s_nAGCMaxLevelIn;
Session.g_cnfTemp.nAGCTargetLevelOut = Session.s_nAGCTargetLevelOut;
Session.g_cnfTemp.nAGCMaxLevelOut = Session.s_nAGCMaxLevelOut;
Session.g_cnfTemp.persistent = true;
Server.logInfo("BEFORE CREATE TEMP COFNERENCE");
Session.g_cnfTemp.LogDebug();]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO CREATE TEMP CONFERENCE, EXIT ON: " + Result.name);
	Session.strReturnMsg = "FAIL TO CREATE TEMP CONFERENCE";
}
Session.g_cnfTemp.LogDebug();]]></script>
          </scripts>
        </action>
        <action id="19" plug-in="Pactolus.CreateConference.1" ><?xtml-editor x=704 y=174 ?>
          <!--g_cnfMain-->
          <create-conference xmlns="urn:www.pactolus.com:xtml:conference" conference="g_cnfMain" persist="0" wideband="1" media-server-type="g_cnfMain.media_server_type" media-server-name="g_cnfMain.media_server_name" max-parties="g_cnfMain.max_parties" max-talkers="g_cnfMain.max_talkers" hysteresis="" time-constant="" active-speakers-to-report="g_cnfMain.asn.num_speakers" reporting-interval="g_cnfMain.asn.report_interval" active-speaker-threshold="g_cnfMain.asn.active_speaker_threshold" return-value="nReturnCode" timeout="g_nTimeout"/>
          <results >
            <result name="Default" link="14" stubbed="1"/>
            <result name="Success" link="4" stubbed="1"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[// intialize conference object...
Session.g_cnfMain.max_parties = Session.s_nConferenceMaxParties;
Session.g_cnfMain.max_talkers = Session.s_nConferenceMaxTalkers;
Session.g_cnfMain.media_server_name = Session.strMediaServerIP; 
Session.g_cnfMain.media_server_type = Session.s_strConfMSType;
Session.g_cnfMain.asn.active_speaker_threshold = Session.s_nDBThreshold;
Session.g_cnfMain.asn.num_speakers = Session.s_nNbrActiveSpeakers;
Session.g_cnfMain.asn.report_interval = Session.s_nReportingInterval;
Session.g_cnfMain.nAGCTargetLevelIn = Session.s_nAGCTargetLevelIn;
Session.g_cnfMain.nAGCMaxLevelIn = Session.s_nAGCMaxLevelIn;
Session.g_cnfMain.nAGCTargetLevelOut = Session.s_nAGCTargetLevelOut;
Session.g_cnfMain.nAGCMaxLevelOut = Session.s_nAGCMaxLevelOut;
Session.g_cnfMain.persistent = true;
Session.g_strConfScheduleId = Session.strConfScheduleId;
Session.g_strConfControllerIP = Session.strConfControllerIP;
Session.g_nConfControllerPort = Session.nConfControllerPort;
Server.logInfo("BEFORE CREATE MAIN COFNERENCE");
Session.g_cnfMain.LogDebug();]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO CREATE MAIN CONFERENCE, EXIT ON: " + Result.name);
	Session.strReturnMsg = "FAIL TO CREATE MAIN CONFERENCE";
}
Session.g_cnfMain.LogDebug();
Session.g_strCreateConfRequestorId = Session.strRequestorSessionId;
initRecording(Session.g_oRecording);
Server.logInfo("RECORDING OJECT required: " + Session.g_oRecording.required);
Server.logInfo("RECORDING OJECT acquired: " + Session.g_oRecording.acquired);
Server.logInfo("RECORDING OJECT fileName: " + Session.g_oRecording.fileName);
Server.logInfo("RECORDING OJECT paused: " + Session.g_oRecording.paused);
Server.logInfo("RECORDING OJECT sequence: " + Session.g_oRecording.sequence);
Server.logInfo("RECORDING OJECT nfs_server: " + Session.g_oRecording.nfs_server);
Server.logInfo("RECORDING OJECT dialog_id: " + Session.g_oRecording.dialog_id);
Server.logInfo("RECORDING OJECT record_id: " + Session.g_oRecording.record_id);]]></script>
          </scripts>
        </action>
        <action id="20" plug-in="Pactolus.CreateConference.1" ><?xtml-editor x=752 y=964 ?>
          <!--g_cnfTemp-->
          <create-conference xmlns="urn:www.pactolus.com:xtml:conference" conference="g_cnfTemp" persist="1" wideband="0" media-server-type="g_cnfTemp.media_server_type" media-server-name="g_cnfTemp.media_server_name" max-parties="g_cnfTemp.max_parties" max-talkers="g_cnfTemp.max_talkers" hysteresis="" time-constant="" active-speakers-to-report="g_cnfTemp.asn.num_speakers" reporting-interval="g_cnfTemp.asn.report_interval" active-speaker-threshold="g_cnfTemp.asn.active_speaker_threshold" return-value="nReturnCode" timeout="g_nTimeout"/>
          <results >
            <result name="Default" link="3" stubbed="1"/>
            <result name="Success" link="4" stubbed="1"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[// intialize conference object...
Session.g_cnfTemp.max_parties = Session.s_nConferenceMaxParties;
Session.g_cnfTemp.max_talkers = Session.s_nConferenceMaxTalkers;
Session.g_cnfTemp.media_server_name = Session.strMediaServerIP; 
Session.g_cnfTemp.media_server_type = Session.s_strConfMSType;
Session.g_cnfTemp.asn.active_speaker_threshold = Session.s_nDBThreshold;
Session.g_cnfTemp.asn.num_speakers = Session.s_nNbrActiveSpeakers;
Session.g_cnfTemp.asn.report_interval = Session.s_nReportingInterval;
Session.g_cnfTemp.nAGCTargetLevelIn = Session.s_nAGCTargetLevelIn;
Session.g_cnfTemp.nAGCMaxLevelIn = Session.s_nAGCMaxLevelIn;
Session.g_cnfTemp.nAGCTargetLevelOut = Session.s_nAGCTargetLevelOut;
Session.g_cnfTemp.nAGCMaxLevelOut = Session.s_nAGCMaxLevelOut;
Session.g_cnfTemp.persistent = true;
Server.logInfo("BEFORE CREATE TEMP COFNERENCE");
Session.g_cnfTemp.LogDebug();]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO CREATE TEMP CONFERENCE, EXIT ON: " + Result.name);
	Session.strReturnMsg = "FAIL TO CREATE TEMP CONFERENCE";
}
Session.g_cnfTemp.LogDebug();]]></script>
          </scripts>
        </action>
        <action id="21" plug-in="Pactolus.CreateConference.1" ><?xtml-editor x=741 y=788 ?>
          <!--g_cnfMain-->
          <create-conference xmlns="urn:www.pactolus.com:xtml:conference" conference="g_cnfMain" persist="1" wideband="1" media-server-type="g_cnfMain.media_server_type" media-server-name="g_cnfMain.media_server_name" max-parties="g_cnfMain.max_parties" max-talkers="g_cnfMain.max_talkers" hysteresis="" time-constant="" active-speakers-to-report="g_cnfMain.asn.num_speakers" reporting-interval="g_cnfMain.asn.report_interval" active-speaker-threshold="g_cnfMain.asn.active_speaker_threshold" return-value="nReturnCode" timeout="g_nTimeout"/>
          <results >
            <result name="Default" link="14" stubbed="1"/>
            <result name="Success" link="4" stubbed="1"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[// intialize conference object...
Session.g_cnfMain.max_parties = Session.s_nConferenceMaxParties;
Session.g_cnfMain.max_talkers = Session.s_nConferenceMaxTalkers;
Session.g_cnfMain.media_server_name = Session.strMediaServerIP; 
Session.g_cnfMain.media_server_type = Session.s_strConfMSType;
Session.g_cnfMain.asn.active_speaker_threshold = Session.s_nDBThreshold;
Session.g_cnfMain.asn.num_speakers = Session.s_nNbrActiveSpeakers;
Session.g_cnfMain.asn.report_interval = Session.s_nReportingInterval;
Session.g_cnfMain.nAGCTargetLevelIn = Session.s_nAGCTargetLevelIn;
Session.g_cnfMain.nAGCMaxLevelIn = Session.s_nAGCMaxLevelIn;
Session.g_cnfMain.nAGCTargetLevelOut = Session.s_nAGCTargetLevelOut;
Session.g_cnfMain.nAGCMaxLevelOut = Session.s_nAGCMaxLevelOut;
Session.g_cnfMain.persistent = true;
Session.g_strConfScheduleId = Session.strConfScheduleId;
Session.g_strConfControllerIP = Session.strConfControllerIP;
Session.g_nConfControllerPort = Session.nConfControllerPort;
Server.logInfo("BEFORE CREATE MAIN COFNERENCE");
Session.g_cnfMain.LogDebug();]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO CREATE MAIN CONFERENCE, EXIT ON: " + Result.name);
	Session.strReturnMsg = "FAIL TO CREATE MAIN CONFERENCE";
}
Server.logInfo("AFTER CREATE COFNERENCE");
Session.g_cnfMain.LogDebug();
Session.g_strCreateConfRequestorId = Session.strRequestorSessionId;
initRecording(Session.g_oRecording);
Server.logInfo("RECORDING OJECT required: " + Session.g_oRecording.required);
Server.logInfo("RECORDING OJECT acquired: " + Session.g_oRecording.acquired);
Server.logInfo("RECORDING OJECT fileName: " + Session.g_oRecording.fileName);
Server.logInfo("RECORDING OJECT paused: " + Session.g_oRecording.paused);
Server.logInfo("RECORDING OJECT sequence: " + Session.g_oRecording.sequence);
Server.logInfo("RECORDING OJECT nfs_server: " + Session.g_oRecording.nfs_server);
Server.logInfo("RECORDING OJECT dialog_id: " + Session.g_oRecording.dialog_id);
Server.logInfo("RECORDING OJECT record_id: " + Session.g_oRecording.record_id);]]></script>
          </scripts>
        </action>
        <action id="22" plug-in="Pactolus.Branch.1" ><?xtml-editor x=517 y=713 ?>
          <results >
            <result name="Default" link="1" stubbed="0"/>
            <result name="Wideband" link="21" stubbed="0" >bWideband == true</result>
          </results>
        </action>
        <action id="23" plug-in="Pactolus.Branch.1" ><?xtml-editor x=507 y=941 ?>
          <results >
            <result name="Default" link="20" stubbed="0"/>
            <result name="Wideband" link="6" stubbed="0" >bWideband == true</result>
          </results>
        </action>
      </actions>
      <text-objects >
        <text-object x-coord="325" y-coord="339" width="356" height="99" text="App should not create sub conference, CC will" font-name="Times New Roman" size="-16" red="0" green="0" blue="0" weight="0" underline="0" strikeout="0" point-size="12" italic="0"/>
      </text-objects>
    </function>
    <function name="OnDeleteConferenceRequest" start="1" event="DeleteConferenceRequest" returns="void" >
      <parameters >
        <parameter name="strRequestorSessionId" type="string" pass="byref"/>
        <parameter name="strMediaServerIP" type="string" pass="byref"/>
        <parameter name="strMediaServerType" type="string" pass="byref"/>
        <parameter name="strConferenceEndpoint" type="string" pass="byref"/>
        <parameter name="strConfScheduleId" type="string" pass="byref"/>
        <parameter name="strConferenceType" type="string" pass="byref"/>
      </parameters>
      <local-vars >
        <var name="nReturnCode" type="i4" >-1</var>
        <var name="strReturnMsg" type="string" ></var>
        <var name="cnf" type="Conference" ></var>
      </local-vars>
      <actions >
        <action id="1" plug-in="Pactolus.Branch.1" ><?xtml-editor x=92 y=75 ?>
          <!--Conf Created?-->
          <results >
            <result name="Default" link="5" stubbed="1"/>
            <result name="main created&amp;&amp;not deleted" link="2" stubbed="0" >strConferenceType match "main"
AND g_cnfMain.state != 0
AND g_cnfMain.state != 2</result>
            <result name="temp created&amp;&amp;not deleted" link="3" stubbed="0" >strConferenceType match "temp"
AND g_cnfTemp.state != 0
AND g_cnfTemp.state != 2</result>
            <result name="sub conference" link="4" stubbed="0" >strConferenceType match "sub"</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[js_disable_event();
Server.logInfo(Session._sessionId + "     CURRENTLY IN FUNCTION: OnDeleteConferenceRequest");
Server.logInfo("g_strCreateConfRequestorId : " + Session.g_strCreateConfRequestorId);
Server.logInfo("strRequestorSessionId : " + Session.strRequestorSessionId);
Server.logInfo("strMediaServerIP : " + Session.strMediaServerIP);
Server.logInfo("strMediaServerType : " + Session.strMediaServerIP);
Server.logInfo("strConferenceEndpoint : " + Session.strConferenceEndpoint);
Server.logInfo("strConfScheduleId : " + Session.strConfScheduleId);

//Type: main, sub, temp?
Server.logInfo("strConferenceType : " + Session.strConferenceType);]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (1 == Result.id)
{
	Server.logError("ERROR: CONFERENCE ALREADY DELETED ");
	Session.strReturnMsg = "CONFERENCE ALREADY DELETED";
}]]></script>
          </scripts>
        </action>
        <action id="2" plug-in="Pactolus.DeleteConference.1" ><?xtml-editor x=336 y=69 ?>
          <!--g_cnfMain-->
          <delete-conference xmlns="urn:www.pactolus.com:xtml:conference" conference="g_cnfMain" return-value="nReturnCode" timeout="g_nTimeout"/>
          <results >
            <result name="Default" link="5" stubbed="1"/>
            <result name="Success" link="8" stubbed="0"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_cnfMain.LogDebug();]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO DELETE MAIN CONFERENCE, EXIT ON: " + Result.name);
	Session.strReturnMsg = "FAIL TO DELETE MAIN CONFERENCE";
}]]></script>
          </scripts>
        </action>
        <action id="3" plug-in="Pactolus.DeleteConference.1" ><?xtml-editor x=346 y=225 ?>
          <!--g_cnfTemp-->
          <delete-conference xmlns="urn:www.pactolus.com:xtml:conference" conference="g_cnfTemp" return-value="nReturnCode" timeout="g_nTimeout"/>
          <results >
            <result name="Default" link="5" stubbed="1"/>
            <result name="Success" link="6" stubbed="0"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_cnfTemp.LogDebug();]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO DELETE TEMP CONFERENCE, EXIT ON: " + Result.name);
	Session.strReturnMsg = "FAIL TO DELETE TEMP CONFERENCE";
}
else
{
	Session.g_cnfTemp.Clear();
}]]></script>
          </scripts>
        </action>
        <action id="4" plug-in="Pactolus.DeleteConference.1" ><?xtml-editor x=346 y=370 ?>
          <!--cnf-->
          <delete-conference xmlns="urn:www.pactolus.com:xtml:conference" conference="cnf" return-value="nReturnCode" timeout="g_nTimeout"/>
          <results >
            <result name="Default" link="5" stubbed="1"/>
            <result name="Success" link="6" stubbed="0"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[var myIndex;
var found = false;
Server.logInfo("BEFORE: SUB CONF LENGTH : " + Session.g_oSubConf.length);
for (myIndex in Session.g_oSubConf)
{
	if (Session.g_oSubConf[myIndex].cnf.name == Session.strConferenceEndpoint)
	{
		Server.logInfo("FOUND THE CONFERENCE IN THE SUB CONF ARRAY AT INDEX: " + myIndex);
		Session.cnf = Session.g_oSubConf[myIndex].cnf;
		Session.cnf.LogDebug();
		found = true;
		break;
	}
}
if (found)
{
	delete Session.g_oSubConf[myIndex];
}
Server.logInfo("AFTER: SUB CONF LENGTH : " + Session.g_oSubConf.length);]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO DELETE SUB CONFERENCE, EXIT ON: " + Result.name);
	Session.strReturnMsg = "FAIL TO DELETE SUB CONFERENCE";
}]]></script>
          </scripts>
        </action>
        <action id="5" plug-in="Pactolus.SOAPMessage.1" ><?xtml-editor x=583 y=221 ?>
          <!--FAIIL delete conference-->
          <SOAP xmlns="urn:www.pactolus.com:xtml:communication" destination-ip="" transaction="" message-name="&quot;DeleteConferenceResponse&quot;" destination-port="" destination-type="3" destination-session="strRequestorSessionId" waiting-session-selected="" xml-namespace="" >
            <parameter tag="" value="nReturnCode"/>
            <parameter tag="" value="strReturnMsg"/>
          </SOAP>
          <results >
            <result name="Default" link="11" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
        </action>
        <action id="6" plug-in="Pactolus.SOAPMessage.1" ><?xtml-editor x=598 y=363 ?>
          <!--SUCCESS delete conferece-->
          <SOAP xmlns="urn:www.pactolus.com:xtml:communication" destination-ip="" transaction="" message-name="&quot;DeleteConferenceResponse&quot;" destination-port="" destination-type="3" destination-session="strRequestorSessionId" waiting-session-selected="" xml-namespace="" >
            <parameter tag="" value="0"/>
            <parameter tag="" value="strReturnMsg"/>
          </SOAP>
          <results >
            <result name="Default" link="11" stubbed="1"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.strReturnMsg = "SUCCESS DELETE CONFERENCE";]]></script>
          </scripts>
        </action>
        <action id="7" plug-in="Pactolus.DeleteConference.1" ><?xtml-editor x=797 y=62 ?>
          <!--g_cnfTemp-->
          <delete-conference xmlns="urn:www.pactolus.com:xtml:conference" conference="g_cnfTemp" return-value="nReturnCode" timeout="g_nTimeout"/>
          <results >
            <result name="Default" link="12" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_cnfTemp.LogDebug();]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO DELETE TEMP CONFERENCE, EXIT ON: " + Result.name);
}]]></script>
          </scripts>
        </action>
        <action id="8" plug-in="Pactolus.Branch.1" ><?xtml-editor x=569 y=66 ?>
          <!--Conf Created?-->
          <results >
            <result name="Default" link="12" stubbed="1"/>
            <result name="temp created&amp;&amp;not deleted" link="7" stubbed="0" >strConferenceType match "temp"
AND g_cnfTemp.state != 0
AND g_cnfTemp.state != 2</result>
          </results>
        </action>
        <action id="11" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=797 y=218 ?>
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[js_enable_event();]]></script>
          </scripts>
        </action>
        <action id="12" plug-in="Pactolus.SOAPMessage.1" ><?xtml-editor x=1007 y=64 ?>
          <!--SUCCESS delete conferece-->
          <SOAP xmlns="urn:www.pactolus.com:xtml:communication" destination-ip="" transaction="" message-name="&quot;DeleteConferenceResponse&quot;" destination-port="" destination-type="3" destination-session="strRequestorSessionId" waiting-session-selected="" xml-namespace="" >
            <parameter tag="" value="0"/>
            <parameter tag="" value="strReturnMsg"/>
          </SOAP>
          <results >
            <result name="Default" link="14" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.strReturnMsg = "SUCCESS DELETE CONFERENCE";]]></script>
          </scripts>
        </action>
        <action id="13" plug-in="Standard.EndSession.1" ><?xtml-editor x=1277 y=63 ?>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_cnfMain.Clear();
Session.g_cnfTemp.Clear();
Session.g_epInConf.Clear();
Session.g_epPlay.Clear();
js_enable_event();]]></script>
          </scripts>
        </action>
        <action id="14" plug-in="Pactolus.Sleep.1" ><?xtml-editor x=1193 y=172 ?>
          <!--TEST!!!-->
          <sleep xmlns="urn:www.pactolus.com:xtml:application" duration="5"/>
          <results >
            <result name="Default" link="13" stubbed="0"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_bConferenceDeleted = true;
js_enable_event();
]]></script>
          </scripts>
        </action>
      </actions>
    </function>
    <function name="OnConfActiveSpeakerRequest" start="1" event="ConfActiveSpeakerRequest" returns="void" >
      <parameters >
        <parameter name="strConfControllerIP" type="string" pass="byref"/>
        <parameter name="nConfControllerPort" type="i4" pass="byref"/>
        <parameter name="strTransactionId" type="string" pass="byref"/>
        <parameter name="strConferenceId" type="string" pass="byref"/>
        <parameter name="strMediaServerEndpoint" type="string" pass="byref"/>
      </parameters>
      <local-vars >
        <var name="nReturnCode" type="i4" >-1</var>
        <var name="strReturnMsg" type="string" ></var>
      </local-vars>
      <actions >
        <action id="1" plug-in="Pactolus.ModifyConference.1" ><?xtml-editor x=122 y=148 ?>
          <!--start ASN-->
          <modify-conference xmlns="urn:www.pactolus.com:xtml:conference" action="0" conference="g_cnfMain" max-talkers="0" hysteresis="" time-constant="" active-speakers-to-report="" reporting-interval="" active-speaker-threshold="" return-value="nReturnCode" timeout="g_nTimeout" asn-mode="0" gain-setting="1"/>
          <results >
            <result name="Default" link="4" stubbed="0"/>
            <result name="Success" link="3" stubbed="0"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo(Session._sessionId + "     CURRENTLY IN FUNCTION: OnConfActiveSpeakerRequest");
js_disable_event();
Server.logInfo("---Received ConfActiveSpeakerRequest Message from Conference Controller");
Server.logInfo("   	conferenceID <" + Session.strConferenceId + ">");
Server.logInfo("   	media server endpoint <" + Session.strMediaServerEndpoint + ">");
Session.g_cnfMain.LogDebug();

var myString = new String (Session.strMediaServerEndpoint);
var myArray = myString.split('@');
var myEndPoint = new String(myArray[0]);
var myMSName = new String(myArray[1]);
if (myEndPoint == Session.g_cnfMain.name && myMSName == Session.g_cnfMain.media_server_name)
{
	Server.logInfo("ENDPOINT AND MS NAME MATCH MAIN CONFERENCE");
}
else
{
	Server.logError("ERROR: ENDPOINT AND MS NAME DOESN'T MATCH MAIN CONFERENCE");
}]]></script>
            <script language="javascript" timing="last" ><![CDATA[Server.logInfo("SEND REQUEST ACTIVE SPEAKER");
Server.logInfo("WITH RETURN CODE: " + Session.nReturnCode);
Server.logInfo("WITH RESULT ID: " + Result.id);
if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO MODIFY CONFERENCE, EXIT ON: " + Result.name);
	Session.strReturnMsg = "FAIL TO MODIFY CONFERENCE TO START ASN";
}]]></script>
          </scripts>
        </action>
        <action id="2" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=608 y=136 ?>
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[js_enable_event();]]></script>
          </scripts>
        </action>
        <action id="3" plug-in="Pactolus.SOAPMessage.1" ><?xtml-editor x=401 y=270 ?>
          <!--SUCCESS-->
          <SOAP xmlns="urn:www.pactolus.com:xtml:communication" destination-ip="strConfControllerIP" transaction="strTransactionId" message-name="&quot;ConfActiveSpeakerResponse&quot;" destination-port="nConfControllerPort" destination-type="4" destination-session="" waiting-session-selected="" xml-namespace="" >
            <parameter tag="&quot;resultCode&quot;" value="0"/>
            <parameter tag="&quot;resultMessage&quot;" value="strReturnMsg"/>
          </SOAP>
          <results >
            <result name="Default" link="2" stubbed="1"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.strReturnMsg = "ASN Successfully START";]]></script>
          </scripts>
        </action>
        <action id="4" plug-in="Pactolus.SOAPMessage.1" ><?xtml-editor x=387 y=137 ?>
          <!--FAILURE-->
          <SOAP xmlns="urn:www.pactolus.com:xtml:communication" destination-ip="strConfControllerIP" transaction="strTransactionId" message-name="&quot;ConfActiveSpeakerResponse&quot;" destination-port="nConfControllerPort" destination-type="4" destination-session="" waiting-session-selected="" xml-namespace="" >
            <parameter tag="&quot;resultCode&quot;" value="-1"/>
            <parameter tag="&quot;resultMessage&quot;" value="strReturnMsg"/>
          </SOAP>
          <results >
            <result name="Default" link="2" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
        </action>
      </actions>
    </function>
    <function name="OnConfCancelActiveSpeakerRequest" start="1" event="ConfCancelActiveSpeakerRequest" returns="void" >
      <parameters >
        <parameter name="strConfControllerIP" type="string" pass="byref"/>
        <parameter name="nConfControllerPort" type="i4" pass="byref"/>
        <parameter name="strTransactionId" type="string" pass="byref"/>
        <parameter name="strConferenceId" type="string" pass="byref"/>
      </parameters>
      <local-vars >
        <var name="nReturnCode" type="i4" >-1</var>
        <var name="strReturnMsg" type="string" ></var>
      </local-vars>
      <actions >
        <action id="1" plug-in="Pactolus.ModifyConference.1" ><?xtml-editor x=114 y=102 ?>
          <!--stop ASN-->
          <modify-conference xmlns="urn:www.pactolus.com:xtml:conference" action="0" conference="g_cnfMain" max-talkers="0" hysteresis="" time-constant="" active-speakers-to-report="" reporting-interval="" active-speaker-threshold="" return-value="nReturnCode" timeout="g_nTimeout" asn-mode="1" gain-setting="1"/>
          <results >
            <result name="Default" link="3" stubbed="0"/>
            <result name="Success" link="2" stubbed="0"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo(Session._sessionId + "     CURRENTLY IN FUNCTION: OnConfCancelActiveSpeakerRequest");
js_disable_event();
Server.logInfo("---Received OnConfCancelActiveSpeakerRequest Message from Conference Controller");
Server.logInfo("   	conferenceID <" + Session.strConferenceId + ">");
Session.g_cnfMain.LogDebug();]]></script>
            <script language="javascript" timing="last" ><![CDATA[Server.logInfo("SEND REQUEST ACTIVE SPEAKER");
Server.logInfo("WITH RETURN CODE: " + Session.nReturnCode);
Server.logInfo("WITH RESULT ID: " + Result.id);
if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO MODIFY CONFERENCE, EXIT ON: " + Result.name);
	Session.strReturnMsg = "FAIL TO MODIFY CONFERENCE TO STOP ASN";
}]]></script>
          </scripts>
        </action>
        <action id="2" plug-in="Pactolus.SOAPMessage.1" ><?xtml-editor x=393 y=224 ?>
          <!--SUCCESS-->
          <SOAP xmlns="urn:www.pactolus.com:xtml:communication" destination-ip="strConfControllerIP" transaction="strTransactionId" message-name="&quot;ConfCancelActiveSpeakerResponse&quot;" destination-port="nConfControllerPort" destination-type="4" destination-session="" waiting-session-selected="" xml-namespace="" >
            <parameter tag="&quot;resultCode&quot;" value="0"/>
            <parameter tag="&quot;resultMessage&quot;" value="strReturnMsg"/>
          </SOAP>
          <results >
            <result name="Default" link="4" stubbed="1"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.strReturnMsg = "ASN Successfully STOP";]]></script>
          </scripts>
        </action>
        <action id="3" plug-in="Pactolus.SOAPMessage.1" ><?xtml-editor x=379 y=91 ?>
          <!--FAILURE-->
          <SOAP xmlns="urn:www.pactolus.com:xtml:communication" destination-ip="strConfControllerIP" transaction="strTransactionId" message-name="&quot;ConfCancelActiveSpeakerResponse&quot;" destination-port="nConfControllerPort" destination-type="4" destination-session="" waiting-session-selected="" xml-namespace="" >
            <parameter tag="&quot;resultCode&quot;" value="-1"/>
            <parameter tag="&quot;resultMessage&quot;" value="strReturnMsg"/>
          </SOAP>
          <results >
            <result name="Default" link="4" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
        </action>
        <action id="4" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=600 y=90 ?>
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[js_enable_event();]]></script>
          </scripts>
        </action>
      </actions>
    </function>
    <function name="OnSipMsgWithinDialog" start="1" event="SipMsgWithinDialog" returns="void" >
      <parameters >
        <parameter name="oSipMsg" type="SipMessage" pass="byref"/>
      </parameters>
      <local-vars >
        <var name="oASN" type="object" ></var>
        <var name="oNotifyASN" type="object" ></var>
        <var name="bRecordingInterrupted" type="boolean" >0</var>
        <var name="bActiveSpeakerNotify" type="boolean" >0</var>
        <var name="strSessionId" type="string" ></var>
        <var name="nMaxRecordLength" type="i4" >1080000</var>
        <var name="nReturnCode" type="i4" >-1</var>
        <var name="bRecordStopped" type="boolean" >0</var>
      </local-vars>
      <actions >
        <action id="1" plug-in="Pactolus.Branch.1" ><?xtml-editor x=42 y=77 ?>
          <results >
            <result name="Default" link="4" stubbed="0"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[js_disable_event();
Session.strSessionId = Session._sessionId;
Server.logInfo(Session._sessionId + "     CURRENTLY IN FUNCTION: OnSipMsgWithinDialog");
var name, id, asnIndex, confName, idx, dialog ;
if ( Session.oSipMsg.hdr.content.length > 0 )
{
    var s = new String( Session.oSipMsg.hdr.content ) ;
    if ( parse_xml_tag_attribute( s, "event", "name", name ) )
    {
        //i.e: msml.conf.asn
        /* parse connection id */
        parse_xml_tag_attribute( s, "event", "id", id ) ;
        if ( name == "msml.conf.asn" )
        {
	        /* we have asn to report */
	        Server.logInfo("We have ASN to report.");
	       //i.e: conf:msml.5
        	// Server.logInfo("About to checking for conf:");
	        idx = id.indexOf("conf:") ;
    	    // Server.logInfo("Index conf: is: " + idx);	
        	if ( -1 != idx )
	        {
    	    	//Server.logInfo("id is:" + id);
        		//Server.logInfo("Index conf: is: " + idx);	
            	confName = id.substr( idx + 5 ) ;
	            //msml.752
    	        // Server.logInfo("Conference name for this INFO is:" + confName);
	        }        
            idx = s.indexOf("<name>speaker</name>") ;
            //Server.logInfo("Index <name>speaker</name> is: " + idx);
            if ( -1 != idx )
            {
            	Server.logInfo("We have speakers to report.");
                asnIndex = 0;
                var lastIndex = s.lastIndexOf("<name>speaker</name>");
                //Server.logInfo("lastIndex <name>speaker</name> is: " + lastIndex);
                while (idx <= lastIndex && -1 != idx && -1 != lastIndex)
                {
                	//Server.logInfo("Index <name>speaker</name> is: " + idx);
                    s = s.substr( idx ) ;
                   	//Server.logInfo("s string is: " + s);
                    if ( parse_xml_tag_value( s, "value", Session.oASN[asnIndex] ) )
                    {
                    	Server.logInfo("oASN is: " + Session.oASN[asnIndex]);
                        asnIndex++;
                        //Server.logInfo("after parse xml tag value, s string now is: " + s);
                        s = s.substr(s.indexOf("</value>") + 8);
                        //Server.logInfo("new s is: " + s);
                        idx = s.indexOf("<name>speaker</name>") ;
                        lastIndex = s.indexOf("<name>speaker</name>") ;
                        //Server.logInfo("new idx <name>speaker</name> is: " + lastIndex);
                        //Server.logInfo("new lastIndex <name>speaker</name> is: " + lastIndex);
                    }
                    else
                    {
                        Server.logInfo("no value found for asn");
                        break;
                    }
                }
            }
            Server.logInfo("Number of ASN reported for conference:  " + confName + " by the system is: "  + Session.oASN.length);
			var myString = new String();
			var myArray;
			for(var i = 0; i < Session.oASN.length; i++)
			{
				//parse connection id xxxxx from conn:xxxxx
				// myString = Session.oASN[i];	
				// myArray = myString.split(":");
				Session.oNotifyASN[i] = confName + "#" + Session.oASN[i];
				// Server.logInfo("oNotifyASN is: " + Session.oNotifyASN[i]);
			}
			//fill out the array
			if (1 == Session.oNotifyASN.length)
			{
				Session.oNotifyASN[1] = "";
				Session.oNotifyASN[2] = "";
			}
			else if (2 == Session.oNotifyASN.length)
			{
				Session.oNotifyASN[2] = "";
			}
			Session.bActiveSpeakerNotify = true;
	    }  //end asn
        else if( name == "msml.dialog.exit" ) 
        {
        	// Server.logInfo("About to checking for dialog:");
        	idx = id.indexOf("dialog:");
        	// Server.logInfo("Index dialog: is: " + idx);
        	if (-1 != idx)
    	    {
        		dialog = id.substr(idx + 7);
	       		// Server.logInfo("Dialog ID is: " + dialog);
    	    }
    	    // Server.logInfo(" g_oRecording.acquired is: " + Session.g_oRecording.acquired);
    	    // Server.logInfo("g_oRecording.dialog_id is: " + Session.g_oRecording.dialog_id);
			if( Session.g_oRecording.acquired && dialog == Session.g_oRecording.dialog_id ) {
				Server.logInfo("Received a dialog exit for record dialog id: " + dialog ) ;
				Session.g_oRecording.acquired = false ;
				Session.g_oRecording.dialog_id = 0 ;
				Session.g_cnfMain._media_dialog_id = 0 ;
				if(Session.g_oRecording.stopped)
					Session.bRecordStopped = true ;
				else
					Session.bRecordingInterrupted = true ;
			}
		}  //end record interupt
		else if( name == "app.recordDone")
		{
			Server.logInfo("Received record DONE event");
			Session.bRecordStopped = true ;
			Session.g_oRecording.stopped = true;
			
			
		}
    }
}]]></script>
          </scripts>
        </action>
        <action id="2" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=790 y=66 ?>
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[js_enable_event();]]></script>
          </scripts>
        </action>
        <action id="3" plug-in="Pactolus.SOAPMessage.1" ><?xtml-editor x=528 y=67 ?>
          <!--ConfActiveSpeakerNotify-->
          <SOAP xmlns="urn:www.pactolus.com:xtml:communication" destination-ip="g_strConfControllerIP" transaction="g_strZeroTransactionId" message-name="&quot;ConfActiveSpeakerNotify&quot;" destination-port="g_nConfControllerPort" destination-type="4" destination-session="" waiting-session-selected="" xml-namespace="" >
            <parameter tag="&quot;conferenceID&quot;" value="g_strConfScheduleId"/>
            <parameter tag="&quot;activeSpeaker1&quot;" value="oNotifyASN[0]"/>
            <parameter tag="&quot;activeSpeaker2&quot;" value="oNotifyASN[1]"/>
            <parameter tag="&quot;activeSpeaker3&quot;" value="oNotifyASN[2]"/>
          </SOAP>
          <results >
            <result name="Default" link="2" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("SEND to CC IP: " + Session.g_strConfControllerIP);
Server.logInfo("SEND to CC PORT: " + Session.g_nConfControllerPort);
Server.logInfo("SEND conference ID: " + Session.g_strConfScheduleId);
Server.logInfo("SEND active speaker 0: " + Session.oNotifyASN[0]);
Server.logInfo("SEND active speaker 1: " + Session.oNotifyASN[1]);
Server.logInfo("SEND active speaker 2: " + Session.oNotifyASN[2]);]]></script>
          </scripts>
        </action>
        <action id="4" plug-in="Pactolus.SendSipMessage.1" ><?xtml-editor x=280 y=69 ?>
          <!--200 OK-->
          <send-sip-message xmlns="urn:www.pactolus.com:xtml:sip-dialog" request-message="0" sip-message="oSipMsg" sip-response-type="&quot;SIP/2.0 200 OK&quot;" request-proxy="0" send-message-within="0" session="" sip-address="" sip-message-type="15" wait-response-message="0" proxy-response-message="0" sip-response-message="" timeout="" >
            <sip-hdrs-A-leg/>
            <sip-hdrs-B-leg/>
            <session-timer-A >
              <use-session-timer >0</use-session-timer>
              <session-timer-interval ></session-timer-interval>
              <session-timer-min-interval ></session-timer-min-interval>
              <session-timer-refresher >"no preference"</session-timer-refresher>
            </session-timer-A>
            <session-timer-B >
              <use-session-timer >0</use-session-timer>
              <session-timer-interval ></session-timer-interval>
              <session-timer-min-interval ></session-timer-min-interval>
              <session-timer-refresher >"no preference"</session-timer-refresher>
            </session-timer-B>
          </send-sip-message>
          <results >
            <result name="Default" link="2" stubbed="1"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
            <result name="ReportASN" link="3" stubbed="0" >bActiveSpeakerNotify == true</result>
            <result name="RecordInterrupted" link="7" stubbed="0" >bRecordingInterrupted == true</result>
            <result name="RecordStopped" link="9" stubbed="0" >bRecordStopped == true</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.oSipMsg.hdr.content = "";
Session.oSipMsg.hdr.content_length = 0;]]></script>
          </scripts>
        </action>
        <action id="5" plug-in="Pactolus.UserFunction.1" ><?xtml-editor x=481 y=411 ?>
          <!--SNMP trap ConferenceRecordingOnBackupFailed-->
          <user-function xmlns="urn:www.pactolus.com:xtml:application" process="&quot;PACTOLUS_ps_c_adaptor&quot;" function="&quot;increment_event_counter&quot;" timeout="" return="" async="1" >
            <parameter >s_strBackupRecordFailed</parameter>
          </user-function>
          <results >
            <result name="Default" link="9" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
        </action>
        <action id="6" plug-in="Pactolus.Record.2" ><?xtml-editor x=243 y=415 ?>
          <!--start the conference recording on backup nfs-->
          <record xmlns="urn:www.pactolus.com:xtml:media" op-mode="0" media-endpoint="" conference="" timeout="" returns="" return-immediate="1" record-on-endpoint="0" rid="g_oRecording.fileName" eik="" rlt="nMaxRecordLength" prt="" pst="" rl="" dc="" rc="" id-cleanup="0" play-beep="0" append="0" ef="&quot;ULAW&quot;" agc="0" agcta="" ga="" sla="" bpf="" bpa="" bpd=""/>
          <results >
            <result name="Default" link="5" stubbed="0"/>
            <result name="Success" link="12" stubbed="0"/>
            <result name="Error"/>
            <result name="Timeout"/>
            <result name="No Speech Detected"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_oRecording.sequence++ ;
Session.g_oRecording.nfs_server = 1 ;
makeRecordFileName(Session.g_oRecording);
Server.logInfo("Recording to file: " + Session.g_oRecording.fileName ) ;]]></script>
            <script language="javascript" timing="middle" ><![CDATA[if( 2 == Result.id ) {
	Session.g_oRecording.acquired = true ;
	Session.g_oRecording.dialog_id = Session.g_cnfMain._media_dialog_id ;
	Server.logInfo("Recording was started with dialog id: " + Session.g_oRecording.dialog_id ) ;
}]]></script>
          </scripts>
        </action>
        <action id="7" plug-in="Pactolus.UserFunction.1" ><?xtml-editor x=523 y=178 ?>
          <!--SNMP trap ConferenceRecordingFailed-->
          <user-function xmlns="urn:www.pactolus.com:xtml:application" process="&quot;PACTOLUS_ps_c_adaptor&quot;" function="&quot;increment_event_counter&quot;" timeout="" return="" async="1" >
            <parameter >s_strRecordFailed</parameter>
          </user-function>
          <results >
            <result name="Default" link="10" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
        </action>
        <action id="9" plug-in="Pactolus.SOAPMessage.1" ><?xtml-editor x=716 y=429 ?>
          <!--RECORDSTOPPED-->
          <SOAP xmlns="urn:www.pactolus.com:xtml:communication" destination-ip="g_strConfControllerIP" transaction="g_strZeroTransactionId" message-name="&quot;RecordStoppedByMS&quot;" destination-port="g_nConfControllerPort" destination-type="4" destination-session="" waiting-session-selected="" xml-namespace=""/>
          <results >
            <result name="Default" link="14" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.f_strTransactionId = Server.getUTCTime();]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO SEND CONF RECORD FAILED TO CONF CONTROLLER.");
	Server.logError("ERROR: CONF CONTROLLER IP: " + Session.g_strConfControllerIP);
	Server.logError("ERROR: CONF CONTROLLER PORT: " + Session.g_intConfControllerPort);
}]]></script>
          </scripts>
        </action>
        <action id="10" plug-in="Pactolus.JavaStaticMethod.1" ><?xtml-editor x=740 y=186 ?>
          <!--"endRecordEvent"-->
          <java xmlns="urn:www.pactolus.com:xtml:application" class="&quot;com.pactolus.conferencing.psAPISceConfMisc&quot;" method="&quot;endRecordEvent&quot;" timeout="g_nTimeout" return="" method-return-var="nReturnCode" method-return-type="0" >
            <parameter type="in" var-type="string" >strSessionId</parameter>
            <parameter type="in" var-type="string" >g_oRecording.record_id</parameter>
            <parameter type="in" var-type="i4" >2</parameter>
          </java>
          <results >
            <result name="Default" link="13" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("INFO: ********** JAVA CALLING endRecordEvent *********");
Server.logInfo("INFO: SESSION ID = " + Session.strSessionId);
Server.logInfo("INFO: RECORDED ID = " + Session.g_oRecording.record_id);]]></script>
            <script language="javascript" timing="last" ><![CDATA[Server.logInfo("INFO: ********** iJavaReturnCode " + Session.nReturnCode);
Server.logInfo("RECORDING ID : " + Session.g_oRecording.record_id);
if (Result.id != 2 || Session.nReturnCode != 0)
{
	Server.logError("ERROR: FAIL TO INSERT RECORD EVENT");
	Server.logError("ERROR: RETURN CODE: " + Session.nReturnCode);
	Server.logError("ERROR: EXIT ON: " + Result.name);
}
]]></script>
          </scripts>
        </action>
        <action id="12" plug-in="Pactolus.JavaStaticMethod.1" ><?xtml-editor x=496 y=593 ?>
          <!--"insertRecordEvent"-->
          <java xmlns="urn:www.pactolus.com:xtml:application" class="&quot;com.pactolus.conferencing.psAPISceConfMisc&quot;" method="&quot;insertRecordEvent&quot;" timeout="g_nTimeout" return="" method-return-var="nReturnCode" method-return-type="0" >
            <parameter type="in" var-type="string" >strSessionId</parameter>
            <parameter type="in" var-type="string" >g_strConferenceSessionId</parameter>
            <parameter type="in" var-type="string" >g_oRecording.fileName</parameter>
            <parameter type="in" var-type="string" >g_strRequestorSessionId</parameter>
            <parameter type="in" var-type="string" >strSessionId</parameter>
            <parameter type="in" var-type="string" >s_strCodec</parameter>
            <parameter type="inout" var-type="string" >g_oRecording.record_id</parameter>
          </java>
          <results >
            <result name="Default" link="2" stubbed="1"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("INFO: ********** JAVA CALLING insertRecordEvent *********");
Server.logInfo("INFO: SESSION ID = " + Session.strSessionId);
Server.logInfo("INFO: CONFERENCE SESSION ID = " + Session.g_strConferenceSessionId);
Server.logInfo("INFO: RECORDED FILE LOCATION = " + Session.g_oRecording.fileName);]]></script>
            <script language="javascript" timing="last" ><![CDATA[Server.logInfo("INFO: ********** iJavaReturnCode " + Session.nReturnCode);
Server.logInfo("RECORDING ID : " + Session.g_oRecording.record_id);
if (Result.id != 2 || Session.nReturnCode != 0)
{
	Server.logError("ERROR: FAIL TO INSERT RECORD EVENT");
	Server.logError("ERROR: RETURN CODE: " + Session.nReturnCode);
	Server.logError("ERROR: EXIT ON: " + Result.name);
}
]]></script>
          </scripts>
        </action>
        <action id="13" plug-in="Pactolus.Branch.1" ><?xtml-editor x=31 y=420 ?>
          <results >
            <result name="Default" link="6" stubbed="0"/>
            <result name="g_oRecording.nfs_server &gt;=1" link="5" stubbed="1" >g_oRecording.nfs_server &gt;= 1</result>
          </results>
        </action>
        <action id="14" plug-in="Pactolus.Branch.1" ><?xtml-editor x=954 y=422 ?>
          <results >
            <result name="Default" link="2" stubbed="1"/>
            <result name="ConferenceDeleted?" link="15" stubbed="0" >g_bConferenceDeleted == true
AND g_oRecording.dialog_id == 0</result>
          </results>
        </action>
        <action id="15" plug-in="Standard.EndSession.1" ><?xtml-editor x=988 y=539 ?></action>
      </actions>
    </function>
    <function name="OnConfEndRequest" start="1" event="ConfEndRequest" returns="void" >
      <parameters >
        <parameter name="strConfControllerIP" type="string" pass="byref"/>
        <parameter name="nConfControllerPort" type="i4" pass="byref"/>
        <parameter name="strTransactionId" type="string" pass="byref"/>
        <parameter name="strConfScheduleId" type="string" pass="byref"/>
        <parameter name="strConferenceEndpoint" type="string" pass="byref"/>
        <parameter name="strConnections" type="string" pass="byref"/>
      </parameters>
      <local-vars >
        <var name="nReturnCode" type="i4" >-1</var>
        <var name="strReturnMsg" type="string" ></var>
      </local-vars>
      <actions >
        <action id="1" plug-in="Pactolus.Branch.1" ><?xtml-editor x=96 y=94 ?>
          <!--same conf schedule id?-->
          <results >
            <result name="Default" link="2" stubbed="1"/>
            <result name="== g_strConfScheduleId" link="5" stubbed="0" >strConfScheduleId match g_strConfScheduleId</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[js_disable_event();
Server.logInfo(Session._sessionId + "     CURRENTLY IN FUNCTION: OnConfEndRequest");
Server.logInfo("session.strConfControllerIP" + Session.strConfControllerIP);
Server.logInfo("session.nConfControllerPort" + Session.nConfControllerPort);
Server.logInfo("session.strTransactionId" + Session.strTransactionId);
Server.logInfo("session.strConfScheduleId" + Session.strConfScheduleId);
Server.logInfo("session.strConferenceEndpoint" + Session.strConferenceEndpoint);
Server.logInfo("session.strConnections" + Session.strConnections);]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (1 == Result.id)
{
	Session.strReturnMsg = "CONFERENCE SCHEDULE ID DOESN'T MATCH WHEN CONFERENCE CREATED";
}]]></script>
          </scripts>
        </action>
        <action id="2" plug-in="Pactolus.SOAPMessage.1" ><?xtml-editor x=551 y=67 ?>
          <!--"ConfEndResponse" Failure-->
          <SOAP xmlns="urn:www.pactolus.com:xtml:communication" destination-ip="strConfControllerIP" transaction="strTransactionId" message-name="&quot;ConfEndResponse&quot;" destination-port="nConfControllerPort" destination-type="4" destination-session="" waiting-session-selected="" xml-namespace="" >
            <parameter tag="&quot;Status&quot;" value="-1"/>
            <parameter tag="&quot;StatusMessage&quot;" value="strReturnMsg"/>
          </SOAP>
          <results >
            <result name="Default" link="4" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO SEND RESPONSE TO CC, EXIT ON BRANCH: " + Result.name);
}]]></script>
          </scripts>
        </action>
        <action id="3" plug-in="Pactolus.SOAPMessage.1" ><?xtml-editor x=565 y=196 ?>
          <!--"ConfEndResponse" SUCCESS-->
          <SOAP xmlns="urn:www.pactolus.com:xtml:communication" destination-ip="strConfControllerIP" transaction="strTransactionId" message-name="&quot;ConfEndResponse&quot;" destination-port="nConfControllerPort" destination-type="4" destination-session="" waiting-session-selected="" xml-namespace="" >
            <parameter tag="&quot;Status&quot;" value="0"/>
            <parameter tag="&quot;StatusMessage&quot;" value="strReturnMsg"/>
          </SOAP>
          <results >
            <result name="Default" link="6" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.strReturnMsg = "SUCCESS ConfEndRequest";]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO SEND RESPONSE TO CC, EXIT ON BRANCH: " + Result.name);
}]]></script>
          </scripts>
        </action>
        <action id="4" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=765 y=64 ?>
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[js_enable_event();]]></script>
          </scripts>
        </action>
        <action id="5" plug-in="Pactolus.DeleteConference.1" ><?xtml-editor x=324 y=89 ?>
          <delete-conference xmlns="urn:www.pactolus.com:xtml:conference" conference="g_cnfMain" return-value="nReturnCode" timeout="g_nTimeout"/>
          <results >
            <result name="Default" link="2" stubbed="0"/>
            <result name="Success" link="3" stubbed="0"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_cnfMain.LogInfo();
var myString = new String (Session.strConferenceEndpoint);
var myArray = myString.split('@');
var myEndPoint = new String(myArray[0]);
var myMSName = new String(myArray[1]);
if (myMSName.length > 0)
{
	Server.logInfo("HAS MEDIA SERVER NAME: " + myMSName);
}
else
{
	Server.logError("ERROR: THERE IS ENDPOINT BUT NO MEDIASERVER NAME");
}

if (myEndPoint == Session.g_cnfMain.name && myMSName == Session.g_cnfMain.media_server_name)
{
	Server.logInfo("ENDPOINT AND MS NAME MATCH");
}
else
{
	Server.logInfo("ENDPOINT AND MS NAME DOESN'T MATCH");
}]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR DELETE CONFERENCE RETURNS : " + Session.nReturnCode);
	Server.logError("FAIL TO DELETE CONFERENCE, EXIT ON BRANCH: " + Result.name);
	Session.strReturnMsg = "FAIL TO DELETE CONFERENCE";
}
else
{
	Server.logInfo("SUCCESS DELETE CONFERENCE ");
}]]></script>
          </scripts>
        </action>
        <action id="6" plug-in="Standard.EndSession.1" ><?xtml-editor x=787 y=192 ?>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_cnfMain.Clear();
Session.g_cnfTemp.Clear();
Session.g_epInConf.Clear();
Session.g_epPlay.Clear();
js_enable_event();]]></script>
          </scripts>
        </action>
      </actions>
    </function>
    <function name="OnConfAllocateMSEndpointRequest" start="6" event="ConfAllocateMSEndpointRequest" returns="void" >
      <parameters >
        <parameter name="strConfControllerIP" type="string" pass="byref"/>
        <parameter name="nConfControllerPort" type="i4" pass="byref"/>
        <parameter name="strTransactionId" type="string" pass="byref"/>
        <parameter name="bWideband" type="boolean" pass="byref"/>
      </parameters>
      <local-vars >
        <var name="nReturnCode" type="i4" >-1</var>
        <var name="strReturnMsg" type="string" ></var>
        <var name="cnf" type="Conference" ></var>
        <var name="strEndPointAndMSName" type="string" ></var>
      </local-vars>
      <actions >
        <action id="6" plug-in="Pactolus.Branch.1" ><?xtml-editor x=18 y=183 ?>
          <results >
            <result name="Default" link="1" stubbed="0"/>
            <result name="Wideband" link="5" stubbed="0" >bWideband == true</result>
          </results>
        </action>
        <action id="1" plug-in="Pactolus.CreateConference.1" ><?xtml-editor x=219 y=99 ?>
          <!--cnf-->
          <create-conference xmlns="urn:www.pactolus.com:xtml:conference" conference="cnf" persist="1" wideband="0" media-server-type="cnf.media_server_type" media-server-name="cnf.media_server_name" max-parties="cnf.max_parties" max-talkers="cnf.max_talkers" hysteresis="" time-constant="" active-speakers-to-report="cnf.asn.num_speakers" reporting-interval="cnf.asn.report_interval" active-speaker-threshold="cnf.asn.active_speaker_threshold" return-value="nReturnCode" timeout="g_nTimeout"/>
          <results >
            <result name="Default" link="2" stubbed="0"/>
            <result name="Success" link="3" stubbed="0"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[js_disable_event();
Server.logInfo(Session._sessionId + "     CURRENTLY IN FUNCTION: OnConfAllocateMSEndpointRequest");
Server.logInfo("strConfControllerIP : " + Session.strConfControllerIP);
Server.logInfo("nConfControllerPort : " + Session.nConfControllerPort);
Server.logInfo("strTransactionId : " + Session.strTransactionId);
// intialize conference object...
Session.cnf.max_parties = Session.s_nConferenceMaxParties;
Session.cnf.max_talkers = Session.s_nConferenceMaxTalkers;
Session.cnf.media_server_name = Session.g_cnfMain.media_server_name; 
Session.cnf.media_server_type = Session.g_cnfMain.media_server_type;
Session.cnf.asn.active_speaker_threshold = Session.s_nDBThreshold;
Session.cnf.asn.num_speakers = Session.s_nNbrActiveSpeakers;
Session.cnf.asn.report_interval = Session.s_nReportingInterval;
Session.cnf.nAGCTargetLevelIn = Session.s_nAGCTargetLevelIn;
Session.cnf.nAGCMaxLevelIn = Session.s_nAGCMaxLevelIn;
Session.cnf.nAGCTargetLevelOut = Session.s_nAGCTargetLevelOut;
Session.cnf.nAGCMaxLevelOut = Session.s_nAGCMaxLevelOut;]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO CREATE SUB CONFERENCE, EXIT ON: " + Result.name);
	Session.strReturnMsg = "FAIL TO CREATE SUB CONFERENCE";
}]]></script>
          </scripts>
        </action>
        <action id="2" plug-in="Pactolus.SOAPMessage.1" ><?xtml-editor x=441 y=71 ?>
          <!--FAIL to create conferece-->
          <SOAP xmlns="urn:www.pactolus.com:xtml:communication" destination-ip="strConfControllerIP" transaction="strTransactionId" message-name="&quot;ConfAllocateMSEndpointResponse&quot;" destination-port="nConfControllerPort" destination-type="4" destination-session="" waiting-session-selected="" xml-namespace="" >
            <parameter tag="&quot;resultCode&quot;" value="-999"/>
            <parameter tag="&quot;resultMessage&quot;" value="strReturnMsg"/>
            <parameter tag="&quot;conferenceEndpoint&quot;" value="cnf.name"/>
          </SOAP>
          <results >
            <result name="Default" link="4" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.strReturnMsg = "FAIL TO CREATE SUB CONFERENCE";]]></script>
          </scripts>
        </action>
        <action id="3" plug-in="Pactolus.SOAPMessage.1" ><?xtml-editor x=471 y=220 ?>
          <!--SUCCESS create conferece-->
          <SOAP xmlns="urn:www.pactolus.com:xtml:communication" destination-ip="strConfControllerIP" transaction="strTransactionId" message-name="&quot;ConfAllocateMSEndpointResponse&quot;" destination-port="nConfControllerPort" destination-type="4" destination-session="" waiting-session-selected="" xml-namespace="" >
            <parameter tag="&quot;resultCode&quot;" value="0"/>
            <parameter tag="&quot;resultMessage&quot;" value="strReturnMsg"/>
            <parameter tag="&quot;conferenceEndpoint&quot;" value="strEndPointAndMSName"/>
          </SOAP>
          <results >
            <result name="Default" link="4" stubbed="1"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.strReturnMsg = "SUCCESS CREATE SUB CONFERENCE";
Server.logInfo("BEFORE: SUB CONF LENGTH : " + Session.g_oSubConf.length);
var myIndex = "tx_" + Session.strTransactionId;
Session.g_oSubConf[myIndex].cnf = Session.cnf;
Session.g_oSubConf[myIndex].cnf.LogDebug();
Server.logInfo("AFTER: SUB CONF LENGTH : " + Session.g_oSubConf.length);
Session.strEndPointAndMSName = Session.cnf.name + "@" + Session.cnf.media_server_name;
Session.cnf.LogInfo();]]></script>
          </scripts>
        </action>
        <action id="4" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=697 y=108 ?>
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[js_enable_event();]]></script>
          </scripts>
        </action>
        <action id="5" plug-in="Pactolus.CreateConference.1" ><?xtml-editor x=225 y=261 ?>
          <!--cnf-->
          <create-conference xmlns="urn:www.pactolus.com:xtml:conference" conference="cnf" persist="1" wideband="1" media-server-type="cnf.media_server_type" media-server-name="cnf.media_server_name" max-parties="cnf.max_parties" max-talkers="cnf.max_talkers" hysteresis="" time-constant="" active-speakers-to-report="cnf.asn.num_speakers" reporting-interval="cnf.asn.report_interval" active-speaker-threshold="cnf.asn.active_speaker_threshold" return-value="nReturnCode" timeout="g_nTimeout"/>
          <results >
            <result name="Default" link="2" stubbed="0"/>
            <result name="Success" link="3" stubbed="0"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[js_disable_event();
Server.logInfo(Session._sessionId + "     CURRENTLY IN FUNCTION: OnConfAllocateMSEndpointRequest");
Server.logInfo("strConfControllerIP : " + Session.strConfControllerIP);
Server.logInfo("nConfControllerPort : " + Session.nConfControllerPort);
Server.logInfo("strTransactionId : " + Session.strTransactionId);
// intialize conference object...
Session.cnf.max_parties = Session.s_nConferenceMaxParties;
Session.cnf.max_talkers = Session.s_nConferenceMaxTalkers;
Session.cnf.media_server_name = Session.g_cnfMain.media_server_name; 
Session.cnf.media_server_type = Session.g_cnfMain.media_server_type;
Session.cnf.asn.active_speaker_threshold = Session.s_nDBThreshold;
Session.cnf.asn.num_speakers = Session.s_nNbrActiveSpeakers;
Session.cnf.asn.report_interval = Session.s_nReportingInterval;
Session.cnf.nAGCTargetLevelIn = Session.s_nAGCTargetLevelIn;
Session.cnf.nAGCMaxLevelIn = Session.s_nAGCMaxLevelIn;
Session.cnf.nAGCTargetLevelOut = Session.s_nAGCTargetLevelOut;
Session.cnf.nAGCMaxLevelOut = Session.s_nAGCMaxLevelOut;]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO CREATE SUB CONFERENCE, EXIT ON: " + Result.name);
	Session.strReturnMsg = "FAIL TO CREATE SUB CONFERENCE";
}]]></script>
          </scripts>
        </action>
      </actions>
      <text-objects >
        <text-object x-coord="120" y-coord="389" width="291" height="63" text="This is create sub conferences" font-name="Times New Roman" size="-16" red="0" green="0" blue="0" weight="0" underline="0" strikeout="0" point-size="12" italic="0"/>
      </text-objects>
    </function>
    <function name="OnConfReleaseMSEndpointRequest" start="1" event="ConfReleaseMSEndpointRequest" returns="void" >
      <parameters >
        <parameter name="strConfControllerIP" type="string" pass="byref"/>
        <parameter name="nConfControllerPort" type="i4" pass="byref"/>
        <parameter name="strTransactionId" type="string" pass="byref"/>
        <parameter name="strConferenceEndpoint" type="string" pass="byref"/>
      </parameters>
      <local-vars >
        <var name="cnf" type="Conference" ></var>
        <var name="nReturnCode" type="i4" >0</var>
        <var name="strReturnMsg" type="string" ></var>
      </local-vars>
      <actions >
        <action id="1" plug-in="Pactolus.DeleteConference.1" ><?xtml-editor x=129 y=129 ?>
          <!--cnf-->
          <delete-conference xmlns="urn:www.pactolus.com:xtml:conference" conference="cnf" return-value="nReturnCode" timeout="g_nTimeout"/>
          <results >
            <result name="Default" link="2" stubbed="0"/>
            <result name="Success" link="4" stubbed="0"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[js_disable_event();
Server.logInfo(Session._sessionId + "     CURRENTLY IN FUNCTION: OnConfAllocateMSEndpointRequest");
Server.logInfo("strConfControllerIP : " + Session.strConfControllerIP);
Server.logInfo("nConfControllerPort : " + Session.nConfControllerPort);
Server.logInfo("strTransactionId : " + Session.strTransactionId);
Server.logInfo("strConferenceEndpoint : " + Session.strConferenceEndpoint);

Server.logInfo("MEDIA SERVER INFO: " + Session.strConferenceEndpoint);
var myString = new String (Session.strConferenceEndpoint);
var myArray = myString.split('@');
var myEndPoint = new String(myArray[0]);
var myMSName = new String(myArray[1]);
if (myMSName.length > 0)
{
	Server.logInfo("HAS MEDIA SERVER NAME: " + myMSName);
}
else
{
	Server.logError("ERROR: THERE IS ENDPOINT BUT NO MEDIASERVER NAME, USE MOST AVAILABLE");
}

var myIndex;
var found = false;
Server.logInfo("BEFORE: SUB CONF LENGTH : " + Session.g_oSubConf.length);
for (myIndex in Session.g_oSubConf)
{
	if (Session.g_oSubConf[myIndex].cnf.name == myEndPoint && Session.g_oSubConf[myIndex].cnf.media_server_name == myMSName)
	{
		Server.logInfo("FOUND THE CONFERENCE IN THE SUB CONF ARRAY AT INDEX: " + myIndex);
		Session.cnf = Session.g_oSubConf[myIndex].cnf;
		Session.cnf.LogDebug();
		found = true;
		break;
	}
}
if (found)
{
	delete Session.g_oSubConf[myIndex];
}
Server.logInfo("AFTER: SUB CONF LENGTH : " + Session.g_oSubConf.length);]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO DELETE SUB CONFERENCE, EXIT ON: " + Result.name);
	Session.strReturnMsg = "FAIL TO DELETE SUB CONFERENCE";
}]]></script>
          </scripts>
        </action>
        <action id="2" plug-in="Pactolus.SOAPMessage.1" ><?xtml-editor x=371 y=101 ?>
          <!--FAIL to delete conferece-->
          <SOAP xmlns="urn:www.pactolus.com:xtml:communication" destination-ip="strConfControllerIP" transaction="strTransactionId" message-name="&quot;ConfReleaseMSEndpointResponse&quot;" destination-port="nConfControllerPort" destination-type="4" destination-session="" waiting-session-selected="" xml-namespace="" >
            <parameter tag="&quot;resultCode&quot;" value="-999"/>
            <parameter tag="&quot;resultMessage&quot;" value="strReturnMsg"/>
          </SOAP>
          <results >
            <result name="Default" link="3" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.strReturnMsg = "FAIL TO DELETE SUB CONFERENCE";]]></script>
          </scripts>
        </action>
        <action id="3" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=641 y=101 ?>
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[js_enable_event();]]></script>
          </scripts>
        </action>
        <action id="4" plug-in="Pactolus.SOAPMessage.1" ><?xtml-editor x=383 y=236 ?>
          <!--SUCCESS delete conferece-->
          <SOAP xmlns="urn:www.pactolus.com:xtml:communication" destination-ip="strConfControllerIP" transaction="strTransactionId" message-name="&quot;ConfReleaseMSEndpointResponse&quot;" destination-port="nConfControllerPort" destination-type="4" destination-session="" waiting-session-selected="" xml-namespace="" >
            <parameter tag="&quot;resultCode&quot;" value="0"/>
            <parameter tag="&quot;resultMessage&quot;" value="strReturnMsg"/>
          </SOAP>
          <results >
            <result name="Default" link="3" stubbed="1"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.strReturnMsg = "SUCCESS DELETE SUB CONFERENCE";]]></script>
          </scripts>
        </action>
      </actions>
      <text-objects >
        <text-object x-coord="135" y-coord="366" width="241" height="25" text="This is delete sub conferences" font-name="Times New Roman" size="-16" red="0" green="0" blue="0" weight="0" underline="0" strikeout="0" point-size="12" italic="0"/>
      </text-objects>
    </function>
    <function name="OnConfMuteRequest" start="9" event="ConfMuteRequest" returns="void" >
      <parameters >
        <parameter name="strConfControllerIP" type="string" pass="byref"/>
        <parameter name="nConfControllerPort" type="i4" pass="byref"/>
        <parameter name="strTransactionId" type="string" pass="byref"/>
        <parameter name="strConfScheduleId" type="string" pass="byref"/>
        <parameter name="strConferenceEndpoint" type="string" pass="byref"/>
        <parameter name="strEndpointConnectionId" type="string" pass="byref"/>
      </parameters>
      <local-vars >
        <var name="bMuteIndividual" type="boolean" >0</var>
        <var name="nReturnCode" type="i4" >-1</var>
        <var name="ep" type="MediaEndpoint" ></var>
        <var name="strEndpoint" type="string" ></var>
        <var name="strConnectionId" type="string" ></var>
        <var name="strReturnMsg" type="string" ></var>
      </local-vars>
      <actions >
        <action id="9" plug-in="Pactolus.SOAPMessage.1" ><?xtml-editor x=72 y=554 ?>
          <!--"ConfMuteResponse" FAILURE-->
          <SOAP xmlns="urn:www.pactolus.com:xtml:communication" destination-ip="strConfControllerIP" transaction="strTransactionId" message-name="&quot;ConfMuteResponse&quot;" destination-port="nConfControllerPort" destination-type="4" destination-session="" waiting-session-selected="" xml-namespace="" >
            <parameter tag="&quot;Status&quot;" value="-1"/>
            <parameter tag="&quot;StatusMessage&quot;" value="strReturnMsg"/>
          </SOAP>
          <results >
            <result name="Default" link="6" stubbed="1"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[js_disable_event();
Session.strReturnMsg = "FAILURE CONF MUTE REQUEST";
Server.logInfo(Session._sessionId + "     CURRENTLY IN FUNCTION: OnConfMuteRequest");
Server.logInfo("CC IP : " + Session.strConfControllerIP);
Server.logInfo("CC PORT : " + Session.nConfControllerPort);
Server.logInfo("TRANSACTION ID : " + Session.strTransactionId);
Server.logInfo("CONFERENCE ENDPOINT : " + Session.strConferenceEndpoint);
Server.logInfo("ENDPOINT CONNECTION ID: " + Session.strEndpointConnectionId);]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO SEND RESPONSE TO CC, EXIT ON BRANCH: " + Result.name);
}]]></script>
          </scripts>
        </action>
        <action id="1" plug-in="Pactolus.Branch.1" ><?xtml-editor x=77 y=173 ?>
          <!--MuteALL?-->
          <results >
            <result name="Default" link="3" stubbed="0"/>
            <result name="*" link="2" stubbed="0" >strEndpointConnectionId match "\*"</result>
            <result name="list" link="8" stubbed="0" >bMuteIndividual == false</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[js_disable_event();
Server.logInfo(Session._sessionId + "     CURRENTLY IN FUNCTION: OnConfMuteRequest");
Server.logInfo("CC IP : " + Session.strConfControllerIP);
Server.logInfo("CC PORT : " + Session.nConfControllerPort);
Server.logInfo("TRANSACTION ID : " + Session.strTransactionId);
Server.logInfo("CONFERENCE ENDPOINT : " + Session.strConferenceEndpoint);
Server.logInfo("ENDPOINT CONNECTION ID: " + Session.strEndpointConnectionId);

if ("*" == Session.strEndpointConnectionId)
{
	Server.logInfo("MUTE ALL PARTIES");
}
else
{
	var myString = new String (Session.strEndpointConnectionId);
	var myArray = myString.split(",");
	Server.logInfo("ARRAY LENGTH IS: " + myArray.length);
	if (1 == myArray.length)
	{
		Server.logInfo("MUTE SINGLE PARTY");
		Session.bMuteIndividual = true;
		myArray.length = 0;
		myArray = myString.split("#");
		Session.strEndpoint = myArray[0];
		Session.strConnectionId = myArray[1];
		Server.logInfo("ENDPOINT IS : " + Session.strEndpoint);
		Server.logInfo("CONNECTION ID IS : " + Session.strConnectionId);
		Session.ep.connection_id = Session.strConnectionId;
		Session.ep.name = Session.strEndpoint;
		Session.ep.media_server_type = Session.g_cnfMain.media_server_type;
	}
	else
	{
		Session.bMuteIndividual = false;
		Server.logInfo("MUTE MULTIPLE PARTIES");
	}
}]]></script>
          </scripts>
        </action>
        <action id="2" plug-in="Pactolus.ModifyConference.1" ><?xtml-editor x=344 y=232 ?>
          <!--mute g_cnfMain-->
          <modify-conference xmlns="urn:www.pactolus.com:xtml:conference" action="1" conference="g_cnfMain" max-talkers="s_nConferenceMaxTalkers" hysteresis="" time-constant="" active-speakers-to-report="" reporting-interval="" active-speaker-threshold="" return-value="nReturnCode" timeout="g_nTimeout" asn-mode="1" gain-setting="0"/>
          <results >
            <result name="Default" link="5" stubbed="1"/>
            <result name="Success" link="4" stubbed="0"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("MUTE ALL");
Session.g_cnfMain.LogInfo();]]></script>
            <script language="javascript" timing="last" ><![CDATA[Server.logInfo("MODIFY CONFERENCE EXIT ON BRANCH: " + Result.name + "  WITH RETURN CODE: " + Session.nReturnCode);
if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO MODIFY CONFERENCE TO MUTE");
}]]></script>
          </scripts>
        </action>
        <action id="3" plug-in="Pactolus.ModifyParty.1" ><?xtml-editor x=348 y=84 ?>
          <!--Mute mode-->
          <modify-party xmlns="urn:www.pactolus.com:xtml:conference" action="0" conference="g_cnfMain" media-endpoint="ep" participant-mode="&quot;Mute&quot;" coachee-endpoint="" return-value="nReturnCode" timeout="g_nTimeout" dtmf-clamp-mode="2" gain-operation="0" gain-mode="0" gain-amount="" max-gain="" direction=""/>
          <results >
            <result name="Default" link="5" stubbed="0"/>
            <result name="Success" link="4" stubbed="1"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("MUTE INDIVIDUAL");
Session.g_cnfMain.LogInfo();
Session.ep.LogInfo();
]]></script>
            <script language="javascript" timing="last" ><![CDATA[Server.logInfo("CHANGE TO MUTE MODE EXIT ON BRANCH: " + Result.name + "  WITH RETURN CODE: " + Session.nReturnCode);
if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO CHANGE TO MUTE MODE");
}]]></script>
          </scripts>
        </action>
        <action id="4" plug-in="Pactolus.SOAPMessage.1" ><?xtml-editor x=588 y=233 ?>
          <!--"ConfMuteResponse" SUCCESS-->
          <SOAP xmlns="urn:www.pactolus.com:xtml:communication" destination-ip="strConfControllerIP" transaction="strTransactionId" message-name="&quot;ConfMuteResponse&quot;" destination-port="nConfControllerPort" destination-type="4" destination-session="" waiting-session-selected="" xml-namespace="" >
            <parameter tag="&quot;Status&quot;" value="0"/>
            <parameter tag="&quot;StatusMessage&quot;" value="strReturnMsg"/>
          </SOAP>
          <results >
            <result name="Default" link="6" stubbed="1"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.strReturnMsg = "SUCCESS CONF MUTE REQUEST";
Server.logInfo("MODIFY MEMBER RETURNS : " + Session.nReturnCode);]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO SEND RESPONSE TO CC, EXIT ON BRANCH: " + Result.name);
}]]></script>
          </scripts>
        </action>
        <action id="5" plug-in="Pactolus.SOAPMessage.1" ><?xtml-editor x=577 y=79 ?>
          <!--"ConfMuteResponse" FAILURE-->
          <SOAP xmlns="urn:www.pactolus.com:xtml:communication" destination-ip="strConfControllerIP" transaction="strTransactionId" message-name="&quot;ConfMuteResponse&quot;" destination-port="nConfControllerPort" destination-type="4" destination-session="" waiting-session-selected="" xml-namespace="" >
            <parameter tag="&quot;Status&quot;" value="-1"/>
            <parameter tag="&quot;StatusMessage&quot;" value="strReturnMsg"/>
          </SOAP>
          <results >
            <result name="Default" link="6" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.strReturnMsg = "FAILURE CONF MUTE REQUEST";
Server.logError("ERROR MODIFY MEMBER, RETURNS : " + Session.nReturnCode);]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO SEND RESPONSE TO CC, EXIT ON BRANCH: " + Result.name);
}]]></script>
          </scripts>
        </action>
        <action id="6" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=805 y=77 ?>
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[js_enable_event();]]></script>
          </scripts>
        </action>
        <action id="8" plug-in="Pactolus.SOAPMessage.1" ><?xtml-editor x=381 y=391 ?>
          <!--"ConfMuteResponse" FAILURE-->
          <SOAP xmlns="urn:www.pactolus.com:xtml:communication" destination-ip="strConfControllerIP" transaction="strTransactionId" message-name="&quot;ConfMuteResponse&quot;" destination-port="nConfControllerPort" destination-type="4" destination-session="" waiting-session-selected="" xml-namespace="" >
            <parameter tag="&quot;Status&quot;" value="-1"/>
            <parameter tag="&quot;StatusMessage&quot;" value="strReturnMsg"/>
          </SOAP>
          <results >
            <result name="Default" link="6" stubbed="1"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.strReturnMsg = "FAILURE CONF MUTE REQUEST, MUTE LIST OF PARTICIAPANTS NOT SUPPORT WITH SIP+MSML";
Server.logError("ERROR MODIFY MEMBER, RETURNS : " + Session.nReturnCode);]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO SEND RESPONSE TO CC, EXIT ON BRANCH: " + Result.name);
}]]></script>
          </scripts>
        </action>
      </actions>
    </function>
    <function name="OnConfUnmuteRequest" start="8" event="ConfUnmuteRequest" returns="void" >
      <parameters >
        <parameter name="strConfControllerIP" type="string" pass="byref"/>
        <parameter name="nConfControllerPort" type="i4" pass="byref"/>
        <parameter name="strTransactionId" type="string" pass="byref"/>
        <parameter name="strConfScheduleId" type="string" pass="byref"/>
        <parameter name="strConferenceEndpoint" type="string" pass="byref"/>
        <parameter name="strEndpointConnectionId" type="string" pass="byref"/>
      </parameters>
      <local-vars >
        <var name="bUnmuteIndividual" type="boolean" >0</var>
        <var name="nReturnCode" type="i4" >-1</var>
        <var name="strReturnMsg" type="string" ></var>
        <var name="strEndpoint" type="string" ></var>
        <var name="strConnectionId" type="string" ></var>
        <var name="ep" type="MediaEndpoint" ></var>
      </local-vars>
      <actions >
        <action id="8" plug-in="Pactolus.SOAPMessage.1" ><?xtml-editor x=86 y=625 ?>
          <!--"ConfUnmuteResponse" FAILURE-->
          <SOAP xmlns="urn:www.pactolus.com:xtml:communication" destination-ip="strConfControllerIP" transaction="strTransactionId" message-name="&quot;ConfUnmuteResponse&quot;" destination-port="nConfControllerPort" destination-type="4" destination-session="" waiting-session-selected="" xml-namespace="" >
            <parameter tag="&quot;Status&quot;" value="-1"/>
            <parameter tag="&quot;StatusMessage&quot;" value="strReturnMsg"/>
          </SOAP>
          <results >
            <result name="Default" link="6" stubbed="1"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[js_disable_event();
Server.logInfo(Session._sessionId + "     CURRENTLY IN FUNCTION: OnConfUnmuteRequest");
Server.logInfo("CC IP : " + Session.strConfControllerIP);
Server.logInfo("CC PORT : " + Session.nConfControllerPort);
Server.logInfo("TRANSACTION ID : " + Session.strTransactionId);
Server.logInfo("CONFERENCE ENDPOINT : " + Session.strConferenceEndpoint);
Server.logInfo("ENDPOINT CONNECTION ID: " + Session.strEndpointConnectionId);
Session.strReturnMsg = "FAILURE CONF UNMUTE REQUEST";]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO SEND RESPONSE TO CC, EXIT ON BRANCH: " + Result.name);
}]]></script>
          </scripts>
        </action>
        <action id="1" plug-in="Pactolus.Branch.1" ><?xtml-editor x=95 y=203 ?>
          <!--UnmuteALL?-->
          <results >
            <result name="Default" link="3" stubbed="0"/>
            <result name="*" link="2" stubbed="0" >strEndpointConnectionId match "\*"</result>
            <result name="list" link="7" stubbed="0" >bUnmuteIndividual == false</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[js_disable_event();
Server.logInfo(Session._sessionId + "     CURRENTLY IN FUNCTION: OnConfUnmuteRequest");
Server.logInfo("CC IP : " + Session.strConfControllerIP);
Server.logInfo("CC PORT : " + Session.nConfControllerPort);
Server.logInfo("TRANSACTION ID : " + Session.strTransactionId);
Server.logInfo("CONFERENCE ENDPOINT : " + Session.strConferenceEndpoint);
Server.logInfo("ENDPOINT CONNECTION ID: " + Session.strEndpointConnectionId);

if ("*" == Session.strEndpointConnectionId)
{
	Server.logInfo("UNMUTE ALL PARTIES");
}
else
{
	var myString = new String (Session.strEndpointConnectionId);
	var myArray = myString.split(",");
	Server.logInfo("ARRAY LENGTH IS: " + myArray.length);
	if (1 == myArray.length)
	{
		Server.logInfo("UNMUTE SINGLE PARTY");
		Session.bMuteIndividual = true;
		myArray.length = 0;
		myArray = myString.split("#");
		Session.strEndpoint = myArray[0];
		Session.strConnectionId = myArray[1];
		Server.logInfo("ENDPOINT IS : " + Session.strEndpoint);
		Server.logInfo("CONNECTION ID IS : " + Session.strConnectionId);
		Session.ep.connection_id = Session.strConnectionId;
		Session.ep.name = Session.strEndpoint;
		Session.ep.media_server_type = Session.g_cnfMain.media_server_type;
	}
	else
	{
		Session.bMuteIndividual = false;
		Server.logInfo("UNMUTE MULTIPLE PARTIES");
	}
}]]></script>
          </scripts>
        </action>
        <action id="2" plug-in="Pactolus.ModifyConference.1" ><?xtml-editor x=362 y=262 ?>
          <!--unmute g_cnfMain-->
          <modify-conference xmlns="urn:www.pactolus.com:xtml:conference" action="1" conference="g_cnfMain" max-talkers="s_nConferenceMaxTalkers" hysteresis="" time-constant="" active-speakers-to-report="" reporting-interval="" active-speaker-threshold="" return-value="nReturnCode" timeout="g_nTimeout" asn-mode="1" gain-setting="1"/>
          <results >
            <result name="Default" link="5" stubbed="1"/>
            <result name="Success" link="4" stubbed="0"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("UNMUTE ALL");
Session.g_cnfMain.LogInfo();]]></script>
            <script language="javascript" timing="last" ><![CDATA[Server.logInfo("MODIFY CONFERENCE EXIT ON BRANCH: " + Result.name + "  WITH RETURN CODE: " + Session.nReturnCode);
if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO MODIFY CONFERENCE TO UNMUTE");
}]]></script>
          </scripts>
        </action>
        <action id="3" plug-in="Pactolus.ModifyParty.1" ><?xtml-editor x=366 y=114 ?>
          <!--full mode-->
          <modify-party xmlns="urn:www.pactolus.com:xtml:conference" action="0" conference="g_cnfMain" media-endpoint="ep" participant-mode="&quot;Full&quot;" coachee-endpoint="" return-value="nReturnCode" timeout="g_nTimeout" dtmf-clamp-mode="2" gain-operation="0" gain-mode="0" gain-amount="" max-gain="" direction=""/>
          <results >
            <result name="Default" link="5" stubbed="0"/>
            <result name="Success" link="4" stubbed="1"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("UNMUTE INDIVIDUAL");
Session.g_cnfMain.LogInfo();
Session.ep.LogInfo();
]]></script>
            <script language="javascript" timing="last" ><![CDATA[Server.logInfo("CHANGE TO UNMUTE MODE EXIT ON BRANCH: " + Result.name + "  WITH RETURN CODE: " + Session.nReturnCode);
if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO CHANGE TO UNMUTE MODE");
}]]></script>
          </scripts>
        </action>
        <action id="4" plug-in="Pactolus.SOAPMessage.1" ><?xtml-editor x=606 y=263 ?>
          <!--"ConfUnmuteResponse" SUCCESS-->
          <SOAP xmlns="urn:www.pactolus.com:xtml:communication" destination-ip="strConfControllerIP" transaction="strTransactionId" message-name="&quot;ConfUnmuteResponse&quot;" destination-port="nConfControllerPort" destination-type="4" destination-session="" waiting-session-selected="" xml-namespace="" >
            <parameter tag="&quot;Status&quot;" value="0"/>
            <parameter tag="&quot;StatusMessage&quot;" value="strReturnMsg"/>
          </SOAP>
          <results >
            <result name="Default" link="6" stubbed="1"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.strReturnMsg = "SUCCESS CONF UNMUTE REQUEST";
Server.logInfo("MODIFY MEMBER RETURNS : " + Session.nReturnCode);]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO SEND RESPONSE TO CC, EXIT ON BRANCH: " + Result.name);
}]]></script>
          </scripts>
        </action>
        <action id="5" plug-in="Pactolus.SOAPMessage.1" ><?xtml-editor x=595 y=109 ?>
          <!--"ConfUnmuteResponse" FAILURE-->
          <SOAP xmlns="urn:www.pactolus.com:xtml:communication" destination-ip="strConfControllerIP" transaction="strTransactionId" message-name="&quot;ConfUnmuteResponse&quot;" destination-port="nConfControllerPort" destination-type="4" destination-session="" waiting-session-selected="" xml-namespace="" >
            <parameter tag="&quot;Status&quot;" value="-1"/>
            <parameter tag="&quot;StatusMessage&quot;" value="strReturnMsg"/>
          </SOAP>
          <results >
            <result name="Default" link="6" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.strReturnMsg = "FAILURE CONF UNMUTE REQUEST";
Server.logError("ERROR MODIFY MEMBER, RETURNS : " + Session.nReturnCode);]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO SEND RESPONSE TO CC, EXIT ON BRANCH: " + Result.name);
}]]></script>
          </scripts>
        </action>
        <action id="6" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=823 y=107 ?>
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[js_enable_event();]]></script>
          </scripts>
        </action>
        <action id="7" plug-in="Pactolus.SOAPMessage.1" ><?xtml-editor x=399 y=421 ?>
          <!--"ConfUnmuteResponse" FAILURE-->
          <SOAP xmlns="urn:www.pactolus.com:xtml:communication" destination-ip="strConfControllerIP" transaction="strTransactionId" message-name="&quot;ConfUnmuteResponse&quot;" destination-port="nConfControllerPort" destination-type="4" destination-session="" waiting-session-selected="" xml-namespace="" >
            <parameter tag="&quot;Status&quot;" value="-1"/>
            <parameter tag="&quot;StatusMessage&quot;" value="strReturnMsg"/>
          </SOAP>
          <results >
            <result name="Default" link="6" stubbed="1"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.strReturnMsg = "FAILURE CONF UNMUTE REQUEST, UNMUTE LIST OF PARTICIAPANTS NOT SUPPORT WITH SIP+MSML";
Server.logError("ERROR MODIFY MEMBER, RETURNS : " + Session.nReturnCode);]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO SEND RESPONSE TO CC, EXIT ON BRANCH: " + Result.name);
}]]></script>
          </scripts>
        </action>
      </actions>
    </function>
    <function name="OnConfMusicOffRequest" start="9" event="ConfMusicOffRequest" returns="void" >
      <parameters >
        <parameter name="strConfControllerIP" type="string" pass="byref"/>
        <parameter name="nConfControllerPort" type="i4" pass="byref"/>
        <parameter name="strTransactionId" type="string" pass="byref"/>
        <parameter name="strConfScheduleId" type="string" pass="byref"/>
        <parameter name="strConferenceEndpoint" type="string" pass="byref"/>
        <parameter name="strReleaseEndpointFlag" type="string" pass="byref"/>
      </parameters>
      <local-vars >
        <var name="nReturnCode" type="i4" >-1</var>
        <var name="strReturnMsg" type="string" ></var>
        <var name="strSessionId" type="string" ></var>
        <var name="strGlobalMusicIsOn" type="string" >F</var>
      </local-vars>
      <actions >
        <action id="9" plug-in="Pactolus.Play.2" ><?xtml-editor x=36 y=30 ?>
          <!--Stop play on epPlay-->
          <collect-play xmlns="urn:www.pactolus.com:xtml:media" play-on-endpoint="1" media-endpoint="g_epPlay" conference="" timeout="" played-length="" digits="" terminating-char="" rc="" returns="nReturnCode" start-play="1" return-immediate="0" play-offset="" language="" retry-count="" time-to-play="" interrupt="1" repeat="0" clear-digits="1" digit-map="" fdt="" idt="" ict="" terminating-digit=""/>
          <results >
            <result name="Default" link="4" stubbed="0"/>
            <result name="Success" link="7" stubbed="0"/>
            <result name="Error"/>
            <result name="Timeout"/>
            <result name="No/Impossible Match"/>
            <result name="First Digit Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[js_disable_event();
Server.logInfo(Session._sessionId + "     CURRENTLY IN FUNCTION: OnConfMusicOffRequest");
Server.logInfo("Session.strConfControllerIP : " + Session.strConfControllerIP);
Server.logInfo("Session.nConfControllerPort : " + Session.nConfControllerPort);
Server.logInfo("Session.strTransactionId : " + Session.strTransactionId);
Server.logInfo("Session.strConferenceEndpoint : " + Session.strConferenceEndpoint);
Server.logInfo("Session.strReleaseEndpoint : " + Session.strReleaseEndpointFlag);
Server.logInfo("Session.strConfScheduleId : " + Session.strConfScheduleId);
Session.strSessionId = Session._sessionId;]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO STOP PLAY MUSIC TO CONFERENCE. RETURN CODE IS: " + Session.nReturnCode);
	Server.logError("ERROR: FAIL TO STOP PLAY MUSIC TO CONFERENCE. EXIT ON BRANCH: " + Result.name);
	Session.strReturnMsg = "FAILURE ConfMusicOffRequest, FAIL TO STOP PLAY MUSIC TO CONFERENCE TO PLAY MUSIC";
}]]></script>
          </scripts>
        </action>
        <action id="2" plug-in="Pactolus.SOAPMessage.1" ><?xtml-editor x=271 y=324 ?>
          <!--"ConfMusicOffResponse" SUCCESS-->
          <SOAP xmlns="urn:www.pactolus.com:xtml:communication" destination-ip="strConfControllerIP" transaction="strTransactionId" message-name="&quot;ConfMusicOffResponse&quot;" destination-port="nConfControllerPort" destination-type="4" destination-session="" waiting-session-selected="" xml-namespace="" >
            <parameter tag="&quot;Status&quot;" value="0"/>
            <parameter tag="&quot;StatusMessage&quot;" value="strReturnMsg"/>
          </SOAP>
          <results >
            <result name="Default" link="5" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.strReturnMsg = "SUCCESS ConfMusicOffRequest";]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO SEND RESPONSE TO CC, EXIT ON BRANCH: " + Result.name);
}]]></script>
          </scripts>
        </action>
        <action id="3" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=30 y=495 ?>
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[js_enable_event();]]></script>
          </scripts>
        </action>
        <action id="4" plug-in="Pactolus.SOAPMessage.1" ><?xtml-editor x=257 y=25 ?>
          <!--"ConfMusicOffResponse" FAILURE-->
          <SOAP xmlns="urn:www.pactolus.com:xtml:communication" destination-ip="strConfControllerIP" transaction="strTransactionId" message-name="&quot;ConfMusicOffResponse&quot;" destination-port="nConfControllerPort" destination-type="4" destination-session="" waiting-session-selected="" xml-namespace="" >
            <parameter tag="&quot;Status&quot;" value="-1"/>
            <parameter tag="&quot;StatusMessage&quot;" value="strReturnMsg"/>
          </SOAP>
          <results >
            <result name="Default" link="3" stubbed="1"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.strReturnMsg = "FAILURE ConfMusicOffRequest";]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO SEND RESPONSE TO CC, EXIT ON BRANCH: " + Result.name);
}]]></script>
          </scripts>
        </action>
        <action id="5" plug-in="Pactolus.Branch.1" ><?xtml-editor x=497 y=324 ?>
          <!--release endpoint?-->
          <results >
            <result name="Default" link="3" stubbed="1"/>
            <result name="strReleaseEndpoint==&quot;T&quot;" link="6" stubbed="0" >strReleaseEndpointFlag match "T"</result>
          </results>
        </action>
        <action id="6" plug-in="Pactolus.DeleteConference.1" ><?xtml-editor x=727 y=315 ?>
          <delete-conference xmlns="urn:www.pactolus.com:xtml:conference" conference="g_cnfMain" return-value="nReturnCode" timeout="g_nTimeout"/>
          <results >
            <result name="Default" link="11" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("DELETE CONFERENCE");
Session.g_cnfMain.LogInfo();

var myString = new String (Session.strConferenceEndpoint);
var myArray = myString.split('@');
var myEndPoint = new String(myArray[0]);
var myMSName = new String(myArray[1]);
if (myMSName.length > 0)
{
	Server.logInfo("HAS MEDIA SERVER NAME: " + myMSName);
}
else
{
	Server.logError("ERROR: THERE IS ENDPOINT BUT NO MEDIASERVER NAME");
}

if (myEndPoint == Session.g_cnfMain.name && myMSName == Session.g_cnfMain.media_server_name)
{
	Server.logInfo("ENDPOINT AND MS NAME MATCH");
}
else
{
	Server.logInfo("ENDPOINT AND MS NAME DOESN'T MATCH");
}]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("FAIL TO DELETE CONFERENCE, EXIT ON BRANCH: " + Result.name);
}
else
{
	Server.logInfo("SUCCESS DELETE CONFERENCE: " + Session.strConferenceEndpoint);
}]]></script>
          </scripts>
        </action>
        <action id="7" plug-in="Pactolus.DeleteConnection.2" ><?xtml-editor x=265 y=152 ?>
          <!--clean up endpoint and try again-->
          <dlcx xmlns="urn:www.pactolus.com:xtml:media" media-endpoint="g_epPlay" returns="nReturnCode" timeout="g_nTimeout" >
            <parameters >
              <quarantine step="0" loop="0" process="0" discard="0"/>
              <events ><![CDATA[]]></events>
              <signals ><![CDATA[]]></signals>
              <digit-map ><![CDATA[]]></digit-map>
            </parameters>
          </dlcx>
          <results >
            <result name="Default" link="8" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO DELETE CONNECTION, EXIT ON: " + Result.name);
	Server.logError("ERROR: RETURN CODE IS: " + Session.nReturn);
}]]></script>
          </scripts>
        </action>
        <action id="8" plug-in="Pactolus.DeleteConnection.2" ><?xtml-editor x=478 y=147 ?>
          <!--clean up in conf endpoint and try again-->
          <dlcx xmlns="urn:www.pactolus.com:xtml:media" media-endpoint="g_epInConf" returns="nReturnCode" timeout="g_nTimeout" >
            <parameters >
              <quarantine step="0" loop="0" process="0" discard="0"/>
              <events ><![CDATA[]]></events>
              <signals ><![CDATA[]]></signals>
              <digit-map ><![CDATA[]]></digit-map>
            </parameters>
          </dlcx>
          <results >
            <result name="Default" link="10" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO DELETE CONNECTION, EXIT ON: " + Result.name);
	Server.logError("ERROR: RETURN CODE IS: " + Session.nReturn);
}]]></script>
          </scripts>
        </action>
        <action id="10" plug-in="Pactolus.JavaStaticMethod.1" ><?xtml-editor x=30 y=325 ?>
          <!--"setGlobalMusicFlag"-->
          <java xmlns="urn:www.pactolus.com:xtml:application" class="&quot;com.pactolus.conferencing.psAPISceGlobalMusicFlag&quot;" method="&quot;setGlobalMusicFlagByScheduleID&quot;" timeout="g_nTimeout" return="" method-return-var="nReturnCode" method-return-type="0" >
            <parameter type="in" var-type="string" >g_strDBName</parameter>
            <parameter type="in" var-type="string" >strSessionId</parameter>
            <parameter type="in" var-type="string" >strConfScheduleId</parameter>
            <parameter type="in" var-type="string" >strGlobalMusicIsOn</parameter>
            <parameter type="in" var-type="string" >strReleaseEndpointFlag</parameter>
          </java>
          <results >
            <result name="Default" link="2" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("INFO: ********JAVA CALLING setGlobalMusicFlag *********");
Server.logInfo("Session.strConfScheduleId : " + Session.strConfScheduleId);]]></script>
            <script language="javascript" timing="last" ><![CDATA[Server.logInfo("INFO: ********** iJavaReturnCode " + Session.nReturnCode);
if (Result.id != 2 || Session.nReturnCode != 0)
{
	Server.logError("ERROR: FAIL TO SET MUSIC IS OFF FLAG, EXIT ON: " + Result.name);
}]]></script>
          </scripts>
        </action>
        <action id="11" plug-in="Standard.EndSession.1" ><?xtml-editor x=951 y=311 ?></action>
      </actions>
    </function>
    <function name="OnConfMusicOnRequest" start="26" event="ConfMusicOnRequest" returns="void" >
      <parameters >
        <parameter name="strConfControllerIP" type="string" pass="byref"/>
        <parameter name="nConfControllerPort" type="i4" pass="byref"/>
        <parameter name="strTransactionId" type="string" pass="byref"/>
        <parameter name="strConfScheduleId" type="string" pass="byref"/>
        <parameter name="strConferenceEndpoint" type="string" pass="byref"/>
        <parameter name="lServiceProviderId" type="i8" pass="byref"/>
      </parameters>
      <local-vars >
        <var name="strSessionId" type="string" ></var>
        <var name="strManagerSessionId" type="string" ></var>
        <var name="strMSOneName" type="string" ></var>
        <var name="nMSOneCapacity" type="i4" >0</var>
        <var name="strMSTwoName" type="string" ></var>
        <var name="nMSTwoCapacity" type="i4" >0</var>
        <var name="strMSThreeName" type="string" ></var>
        <var name="nMSThreeCapacity" type="i4" >0</var>
        <var name="nCounter" type="i4" >0</var>
        <var name="nReturnCode" type="i4" >-1</var>
        <var name="nMSType" type="i4" >2</var>
        <var name="nNumberOfPrompts" type="i4" >0</var>
        <var name="oPromptList" type="object" ></var>
        <var name="strPromptType" type="string" ></var>
        <var name="strLanguage" type="string" >eng</var>
        <var name="strConfEventId" type="string" ></var>
        <var name="strEmptyString" type="string" ></var>
        <var name="nNumRetry" type="i4" >0</var>
        <var name="strReturnMsg" type="string" ></var>
        <var name="strGlobalMusicIsOn" type="string" >T</var>
        <var name="strEndPointAndMSName" type="string" ></var>
        <var name="strTempString" type="string" ></var>
      </local-vars>
      <actions >
        <action id="26" plug-in="Pactolus.Branch.1" ><?xtml-editor x=27 y=176 ?>
          <!--main conf created?-->
          <results >
            <result name="Default" link="25" stubbed="0"/>
            <result name="state!=0 &amp;&amp; !=2" link="44" stubbed="0" >g_cnfMain.state != 0
AND g_cnfMain.state != 2</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[js_disable_event();
Server.logInfo(Session._sessionId + "     CURRENTLY IN FUNCTION: OnConfMusicOnRequest");
Server.logInfo("Session.strConfControllerIP : " + Session.strConfControllerIP);
Server.logInfo("Session.nConfControllerPort : " + Session.nConfControllerPort);
Server.logInfo("Session.strTransactionId : " + Session.strTransactionId);
Server.logInfo("Session.strConferenceEndpoint : " + Session.strConferenceEndpoint);
Server.logInfo("Session.strConfScheduleId : " + Session.strConfScheduleId);
Server.logInfo("Session.lServiceProviderId : " + Session.lServiceProviderId);]]></script>
          </scripts>
        </action>
        <action id="1" plug-in="Pactolus.SOAPMessage.1" ><?xtml-editor x=1502 y=849 ?>
          <!--"ConfMusicOnResponse" SUCCESS-->
          <SOAP xmlns="urn:www.pactolus.com:xtml:communication" destination-ip="strConfControllerIP" transaction="strTransactionId" message-name="&quot;ConfMusicOnResponse&quot;" destination-port="nConfControllerPort" destination-type="4" destination-session="" waiting-session-selected="" xml-namespace="" >
            <parameter tag="&quot;Status&quot;" value="0"/>
            <parameter tag="&quot;StatusMessage&quot;" value="strReturnMsg"/>
            <parameter tag="&quot;ConferenceEndpoint&quot;" value="strEndPointAndMSName"/>
          </SOAP>
          <results >
            <result name="Default" link="36" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("Session.strConfControllerIP : " + Session.strConfControllerIP);
Server.logInfo("Session.nConfControllerPort : " + Session.nConfControllerPort);
Server.logInfo("Session.strTransactionId : " + Session.strTransactionId);
Server.logInfo("Session.strConferenceEndpoint : " + Session.strConferenceEndpoint);
Server.logInfo("Session.strConfScheduleId : " + Session.strConfScheduleId);
Session.strReturnMsg = "SUCCESS ConfMusicOnRequest";
Session.strEndPointAndMSName = Session.g_cnfMain.name + "@" + Session.g_cnfMain.media_server_name;]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO SEND RESPONSE TO CC, EXIT ON BRANCH: " + Result.name);
}]]></script>
          </scripts>
        </action>
        <action id="2" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=787 y=351 ?>
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_strConferenceEndpoint = "";
js_enable_event();]]></script>
          </scripts>
        </action>
        <action id="3" plug-in="Pactolus.SOAPMessage.1" ><?xtml-editor x=529 y=358 ?>
          <!--"ConfMusicOnResponse" FAILURE-->
          <SOAP xmlns="urn:www.pactolus.com:xtml:communication" destination-ip="strConfControllerIP" transaction="strTransactionId" message-name="&quot;ConfMusicOnResponse&quot;" destination-port="nConfControllerPort" destination-type="4" destination-session="" waiting-session-selected="" xml-namespace="" >
            <parameter tag="&quot;Status&quot;" value="-1"/>
            <parameter tag="&quot;StatusMessage&quot;" value="strReturnMsg"/>
            <parameter tag="&quot;ConferenceEndpoint&quot;" value="strConferenceEndpoint"/>
          </SOAP>
          <results >
            <result name="Default" link="2" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO SEND RESPONSE TO CC, EXIT ON BRANCH: " + Result.name);
}]]></script>
          </scripts>
        </action>
        <action id="4" plug-in="Pactolus.Branch.1" ><?xtml-editor x=537 y=511 ?>
          <!--SUCCESS?-->
          <results >
            <result name="Default" link="3" stubbed="1"/>
            <result name="2 - wait for conf resource" link="5" stubbed="0" >nReturnCode == 2
AND nCounter &lt; 3</result>
            <result name="1 - get the conference endpoint" link="23" stubbed="0" >nReturnCode == 1</result>
            <result name="0 - endpoint found" link="31" stubbed="1" >nReturnCode == 0</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.nCounter++;]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (-1 == Session.nReturnCode)
{
	Session.strReturnMsg = "FAILURE ConfMusicOnRequest, INVALID CONFERENCE ID";
}
else if (-99 == Session.nReturnCode)
{
	Session.strReturnMsg = "FAILURE ConfMusicOnRequest, DB ERROR";
}
else if (2 == Session.nReturnCode)
{
	Session.strReturnMsg = "FAILURE ConfMusicOnRequest, EXCEED MAX WAIT FOR CONFERENCE RESOURCE";
}]]></script>
          </scripts>
        </action>
        <action id="5" plug-in="Pactolus.Sleep.1" ><?xtml-editor x=781 y=509 ?>
          <!--2 secs-->
          <sleep xmlns="urn:www.pactolus.com:xtml:application" duration="2"/>
          <results >
            <result name="Default" link="25" stubbed="1"/>
          </results>
        </action>
        <action id="6" plug-in="Pactolus.JavaStaticMethod.1" ><?xtml-editor x=789 y=860 ?>
          <!--"setConfResource"-->
          <java xmlns="urn:www.pactolus.com:xtml:application" class="&quot;com.pactolus.conferencing.psAPISceSetConfResource&quot;" method="&quot;setConfResource&quot;" timeout="g_nTimeout" return="" method-return-var="nReturnCode" method-return-type="0" >
            <parameter type="in" var-type="string" >g_strDBName</parameter>
            <parameter type="in" var-type="string" >strSessionId</parameter>
            <parameter type="in" var-type="string" >strConfEventId</parameter>
            <parameter type="in" var-type="string" >g_cnfMain.name</parameter>
            <parameter type="in" var-type="string" >g_cnfMain.media_server_name</parameter>
            <parameter type="in" var-type="string" >g_cnfMain.media_server_type</parameter>
            <parameter type="in" var-type="string" >g_cnfMain.sip_dialog.dialog.from</parameter>
            <parameter type="in" var-type="string" >g_cnfMain.sip_dialog.dialog.to</parameter>
            <parameter type="in" var-type="string" >g_cnfMain.sip_dialog.dialog.call_id</parameter>
            <parameter type="in" var-type="string" >g_cnfMain.sip_dialog.local.cseq</parameter>
            <parameter type="in" var-type="string" >strEmptyString</parameter>
            <parameter type="in" var-type="string" >strManagerSessionId</parameter>
          </java>
          <results >
            <result name="Default" link="21" stubbed="1"/>
            <result name="Success" link="13" stubbed="0"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo(Session._sessionId + "     CURRENTLY IN FUNCTION: OnConfMusicOnRequest");
Server.logInfo("Session.strConfControllerIP : " + Session.strConfControllerIP);
Server.logInfo("Session.nConfControllerPort : " + Session.nConfControllerPort);
Server.logInfo("Session.strTransactionId : " + Session.strTransactionId);
Server.logInfo("Session.strConferenceEndpoint : " + Session.strConferenceEndpoint);
Server.logInfo("Session.strConfScheduleId : " + Session.strConfScheduleId);

Server.logInfo("INFO: ********JAVA CALLING setConfResource *********");
Server.logInfo("INFO: DB name = " + Session.g_strDBName);
if (Session.strManagerSessionId.length <= 0)
{
	Session.strManagerSessionId = Session._sessionId;
}]]></script>
            <script language="javascript" timing="last" ><![CDATA[Server.logInfo("INFO: ********** iJavaReturnCode " + Session.nReturnCode);
if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO SET CONFERENCE ENDPOINT, EXIT ON: " + Result.name);
	Session.strReturnMsg = "FAIL TO SET CONFERENCE ENDPOINT";
}]]></script>
          </scripts>
        </action>
        <action id="7" plug-in="Pactolus.JavaStaticMethod.1" ><?xtml-editor x=59 y=771 ?>
          <!--"getMusicPrompts"-->
          <java xmlns="urn:www.pactolus.com:xtml:application" class="&quot;com.pactolus.psAPISceMisc&quot;" method="&quot;getMusicPrompts&quot;" timeout="g_nTimeout" return="" method-return-var="nReturnCode" method-return-type="0" >
            <parameter type="in" var-type="string" >strSessionId</parameter>
            <parameter type="in" var-type="string" >g_strDBName</parameter>
            <parameter type="in" var-type="i8" >lServiceProviderId</parameter>
            <parameter type="inout" var-type="i4" >nNumberOfPrompts</parameter>
            <parameter type="inout" var-type="string" >strPromptType</parameter>
            <parameter type="inout" var-type="string" >oPromptList[0].strURL</parameter>
            <parameter type="inout" var-type="i4" >oPromptList[0].nIndex</parameter>
            <parameter type="inout" var-type="string" >oPromptList[1].strURL</parameter>
            <parameter type="inout" var-type="i4" >oPromptList[1].nIndex</parameter>
            <parameter type="inout" var-type="string" >oPromptList[2].strURL</parameter>
            <parameter type="inout" var-type="i4" >oPromptList[2].nIndex</parameter>
            <parameter type="inout" var-type="string" >oPromptList[3].strURL</parameter>
            <parameter type="inout" var-type="i4" >oPromptList[3].nIndex</parameter>
            <parameter type="inout" var-type="string" >oPromptList[4].strURL</parameter>
            <parameter type="inout" var-type="i4" >oPromptList[4].nIndex</parameter>
          </java>
          <results >
            <result name="Default" link="8" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[for (var i = 0; i < 5; i++)
{
	Session.oPromptList[i].strURL = "file://99";
	Session.oPromptList[i].nIndex = 99;
}
Server.logInfo("INFO: ********JAVA CALLING psAPISceMisc.getMusicPrompts *********");
Server.logInfo(" SESSION Id: " + Session.strSessionId);
Server.logInfo(" DB NAME: " + Session.g_strDBName);
Server.logInfo(" SERVICE PROVIDER Id: " + Session.lServiceProviderId);]]></script>
            <script language="javascript" timing="last" ><![CDATA[Server.logInfo("INFO: ********** iJavaReturnCode " + Session.nReturnCode);
Server.logInfo(" Prompt type: " + Session.strPromptType);
for (var i = 0; i < Session.oPromptList.length; i++)
{
	Server.logInfo(" Prompt url: " + Session.oPromptList[i].strURL);
	Server.logInfo(" Prompt index: " + Session.oPromptList[i].nIndex);
}
if (Result.id !=2 || Session.nReturnCode !=0)
{
	Server.logInfo("NO PROMPT FOR SERVICE PROVIDER, USE PACTOLUS DEFAULT");
	Session.oPromptList[0].nIndex = 4090;
	Session.oPromptList[1].nIndex = 4091;
	Session.oPromptList[2].nIndex = 4092;
	Session.oPromptList[3].nIndex = 99;
	Session.oPromptList[4].nIndex = 99;
	Session.strPromptType = "I";
}]]></script>
          </scripts>
        </action>
        <action id="8" plug-in="Pactolus.Branch.1" ><?xtml-editor x=293 y=771 ?>
          <!--URL or Index-->
          <results >
            <result name="Default" link="20" stubbed="0"/>
            <result name="strPromptType==&quot;U&quot;" link="19" stubbed="0" >strPromptType match "U"</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[for (var i = 0; i < 5; i++)
{
	if (0 == Session.oPromptList[i].nIndex)
	{
		Server.logInfo("PROMPT INDEX IS 0, SET TO 99");
		Session.oPromptList[i].nIndex = 99;
	}
	if (Session.oPromptList[i].strURL.length <= 0)
	{
		Server.logInfo("PROMPT URL LENGTH IS ZERO, SET TO file://99");
		Session.oPromptList[i].strURL = "file://99";
	}
}]]></script>
          </scripts>
        </action>
        <action id="9" plug-in="Pactolus.JavaStaticMethod.1" ><?xtml-editor x=1262 y=850 ?>
          <!--"setGlobalMusicFlag"-->
          <java xmlns="urn:www.pactolus.com:xtml:application" class="&quot;com.pactolus.conferencing.psAPISceGlobalMusicFlag&quot;" method="&quot;setGlobalMusicFlag&quot;" timeout="g_nTimeout" return="" method-return-var="nReturnCode" method-return-type="0" >
            <parameter type="in" var-type="string" >g_strDBName</parameter>
            <parameter type="in" var-type="string" >strSessionId</parameter>
            <parameter type="in" var-type="string" >strConfEventId</parameter>
            <parameter type="in" var-type="string" >strGlobalMusicIsOn</parameter>
          </java>
          <results >
            <result name="Default" link="1" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("INFO: ********JAVA CALLING setGlobalMusicFlag *********");
Server.logInfo("Session.strConfScheduleId : " + Session.strConfScheduleId);]]></script>
            <script language="javascript" timing="last" ><![CDATA[Server.logInfo("INFO: ********** iJavaReturnCode " + Session.nReturnCode);
if (Result.id != 2 || Session.nReturnCode != 0)
{
	Server.logError("ERROR: FAIL TO SET MUSIC IS ON FLAG, EXIT ON: " + Result.name);
}]]></script>
          </scripts>
        </action>
        <action id="11" plug-in="Pactolus.Branch.1" ><?xtml-editor x=687 y=1049 ?>
          <!--max retry?-->
          <results >
            <result name="Default" link="33" stubbed="0"/>
            <result name="nNumRetry&gt;=3" link="3" stubbed="1" >nNumRetry &gt;= 3</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.nNumRetry++;]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (2 == Result.id)
{
	Session.strReturnMsg = "FAIL TO SET CONFERENCE ENDPOINT, EXCEED MAX RETRIES";
}]]></script>
          </scripts>
        </action>
        <action id="13" plug-in="Pactolus.Branch.1" ><?xtml-editor x=1030 y=859 ?>
          <!--success?-->
          <results >
            <result name="Default" link="21" stubbed="1"/>
            <result name="nReturnCode == 0" link="9" stubbed="0" >nReturnCode == 0</result>
          </results>
        </action>
        <action id="14" plug-in="Pactolus.CreateConference.1" ><?xtml-editor x=1056 y=650 ?>
          <create-conference xmlns="urn:www.pactolus.com:xtml:conference" conference="g_cnfMain" persist="1" wideband="0" media-server-type="g_cnfMain.media_server_type" media-server-name="g_cnfMain.media_server_name" max-parties="g_cnfMain.max_parties" max-talkers="g_cnfMain.max_talkers" hysteresis="" time-constant="" active-speakers-to-report="g_cnfMain.asn.num_speakers" reporting-interval="g_cnfMain.asn.report_interval" active-speaker-threshold="g_cnfMain.asn.active_speaker_threshold" return-value="nReturnCode" timeout="g_nTimeout"/>
          <results >
            <result name="Default" link="3" stubbed="1"/>
            <result name="Success" link="17" stubbed="1"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("INFO: CREATE A CONFERENCE");
Session.g_strConfScheduleId = Session.strConfScheduleId;
Session.g_strConfControllerIP = Session.strConfControllerIP;
Session.g_nConfControllerPort = Session.nConfControllerPort;
// intialize conference object...
Session.g_cnfMain.max_parties = Session.s_nConferenceMaxParties;
Session.g_cnfMain.max_talkers = Session.s_nConferenceMaxTalkers;
Session.g_cnfMain.media_server_name = Session.strMSOneName; 
Session.g_cnfMain.media_server_type = Session.s_strConfMSType;
Session.g_cnfMain.asn.active_speaker_threshold = Session.s_nDBThreshold;
Session.g_cnfMain.asn.num_speakers = Session.s_nNbrActiveSpeakers;
Session.g_cnfMain.asn.report_interval = Session.s_nReportingInterval;
Session.g_cnfMain.nAGCTargetLevelIn = Session.s_nAGCTargetLevelIn;
Session.g_cnfMain.nAGCMaxLevelIn = Session.s_nAGCMaxLevelIn;
Session.g_cnfMain.nAGCTargetLevelOut = Session.s_nAGCTargetLevelOut;
Session.g_cnfMain.nAGCMaxLevelOut = Session.s_nAGCMaxLevelOut;
Session.g_cnfMain.persistent = true;
Session.g_cnfMain.LogDebug();]]></script>
            <script language="javascript" timing="last" ><![CDATA[Server.logInfo("INFO: AFTER CREATE CONFERENCE");
Server.logInfo("INFO: MS CODEC = " + Session.s_strCodec);
Session.g_cnfMain.LogDebug();
initRecording(Session.g_oRecording);
if (Result.id !=2)
{
	Server.logError("FAIL TO CREATE CONFERENCE, EXIT ON BRANCH: " + Result.name);
	Server.logError("RETURN CODE: " + Session.nReturnCode);
	Session.strReturnMsg = "FAILURE ConfMusicOnRequest, FAIL TO CREATE CONFERENCE";
}]]></script>
          </scripts>
        </action>
        <action id="15" plug-in="Pactolus.DeleteConference.1" ><?xtml-editor x=1275 y=488 ?>
          <!--delete conference and try again-->
          <delete-conference xmlns="urn:www.pactolus.com:xtml:conference" conference="g_cnfMain" return-value="nReturnCode" timeout="g_nTimeout"/>
          <results >
            <result name="Default" link="3" stubbed="1"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO DELETE CONFERENCE, EXIT ON: " + Result.name);
	Server.logError("ERROR: RETURN CODE IS: " + Session.nReturnCode);
}]]></script>
          </scripts>
        </action>
        <action id="16" plug-in="Pactolus.DeleteConnection.2" ><?xtml-editor x=1497 y=668 ?>
          <!--clean up endpoint and try again-->
          <dlcx xmlns="urn:www.pactolus.com:xtml:media" media-endpoint="g_epPlay" returns="nReturnCode" timeout="g_nTimeout" >
            <parameters >
              <quarantine step="0" loop="0" process="0" discard="0"/>
              <events ><![CDATA[]]></events>
              <signals ><![CDATA[]]></signals>
              <digit-map ><![CDATA[]]></digit-map>
            </parameters>
          </dlcx>
          <results >
            <result name="Default" link="15" stubbed="1"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO DELETE CONNECTION, EXIT ON: " + Result.name);
	Server.logError("ERROR: RETURN CODE IS: " + Session.nReturn);
}]]></script>
          </scripts>
        </action>
        <action id="17" plug-in="Pactolus.CreateConnection.2" ><?xtml-editor x=1055 y=492 ?>
          <!--create a connection to play from-->
          <crcx xmlns="urn:www.pactolus.com:xtml:media" media-endpoint="g_epPlay" mode="inactive" remote-sdp="" codec="0" packetization-period="" local-connection-options="" capability="1" second-endpoint="" media-server-type="g_cnfMain.media_server_type" media-server-name="g_cnfMain.media_server_name" returns="nReturnCode" timeout="g_nTimeout" telephone-events="0" >
            <parameters >
              <quarantine step="0" loop="0" process="0" discard="0"/>
              <events ><![CDATA[]]></events>
              <signals ><![CDATA[]]></signals>
              <digit-map ><![CDATA[]]></digit-map>
            </parameters>
          </crcx>
          <results >
            <result name="Default" link="15" stubbed="0"/>
            <result name="Success" link="18" stubbed="0"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO CREATE EP TO PLAY, EXIT ON: " + Result.name);
	Server.logError("ERROR: RETURN CODE IS: " + Session.nReturnCode);
}]]></script>
          </scripts>
        </action>
        <action id="18" plug-in="Pactolus.ModifyExistingDialog.1" ><?xtml-editor x=1288 y=667 ?>
          <modify-session xmlns="urn:www.pactolus.com:xtml:sip-dialog" session="g_epPlay.sip_dialog" action="4" media-endpoint="g_epInConf" media-server-type="g_cnfMain.media_server_type" endpoint-type="&quot;ivr&quot;" media-sdp="" sip-address="" media-allocate-new-endpoint="1" transfer-mode="1" media-status="" codec="s_strCodec" telephone-events="0" media-server-name="g_cnfMain.media_server_name" conference="g_cnfMain" new-conference="0" persistent-conference="0" wideband="1" participant-mode="&quot;Deaf&quot;" coachee-endpoint="" max-parties="" dtmf-clamp-setting="0" max-talkers="" hysteresis="" time-constant="" active-speakers-to-report="" reporting-interval="" active-speaker-threshold="" >
            <sip-hdrs-A-leg/>
            <sip-hdrs-B-leg/>
            <session-timer-A >
              <use-session-timer >1</use-session-timer>
              <session-timer-interval ></session-timer-interval>
              <session-timer-min-interval ></session-timer-min-interval>
              <session-timer-refresher ></session-timer-refresher>
            </session-timer-A>
            <session-timer-B >
              <use-session-timer >1</use-session-timer>
              <session-timer-interval ></session-timer-interval>
              <session-timer-min-interval ></session-timer-min-interval>
              <session-timer-refresher ></session-timer-refresher>
            </session-timer-B>
          </modify-session>
          <results >
            <result name="Default" link="16" stubbed="0"/>
            <result name="Success" link="7" stubbed="1"/>
            <result name="No response"/>
            <result name="Not completed in time"/>
            <result name="Caller hung up"/>
            <result name="Media resource failure"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO MODIFY DIALOG, EXIT ON: " + Result.name);
}]]></script>
          </scripts>
        </action>
        <action id="19" plug-in="Pactolus.Play.2" ><?xtml-editor x=550 y=857 ?>
          <!--play url-->
          <collect-play xmlns="urn:www.pactolus.com:xtml:media" play-on-endpoint="1" media-endpoint="g_epPlay" conference="" timeout="0.1" played-length="" digits="" terminating-char="" rc="" returns="nReturnCode" start-play="1" return-immediate="0" play-offset="" language="strLanguage" retry-count="1" time-to-play="" interrupt="0" repeat="1" clear-digits="1" digit-map="" fdt="" idt="" ict="" terminating-digit="" >
            <audio type="url" >oPromptList[0].strURL</audio>
            <audio type="url" >oPromptList[1].strURL</audio>
            <audio type="url" >oPromptList[2].strURL</audio>
            <audio type="url" >oPromptList[3].strURL</audio>
            <audio type="url" >oPromptList[4].strURL</audio>
          </collect-play>
          <results >
            <result name="Default" link="21" stubbed="1"/>
            <result name="Success" link="6" stubbed="0"/>
            <result name="Error"/>
            <result name="Timeout"/>
            <result name="No/Impossible Match"/>
            <result name="First Digit Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("PLAY MUSIC URL");]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO PLAY PROMPT, EXIT ON: " + Result.name);
	Server.logError("ERROR: RETURN CODE IS: " + Session.nReturnCode);
}]]></script>
          </scripts>
        </action>
        <action id="20" plug-in="Pactolus.Play.2" ><?xtml-editor x=532 y=658 ?>
          <!--play indexed clip-->
          <collect-play xmlns="urn:www.pactolus.com:xtml:media" play-on-endpoint="1" media-endpoint="g_epPlay" conference="" timeout="0.1" played-length="" digits="" terminating-char="" rc="" returns="nReturnCode" start-play="1" return-immediate="0" play-offset="" language="strLanguage" retry-count="1" time-to-play="" interrupt="0" repeat="1" clear-digits="1" digit-map="" fdt="" idt="" ict="" terminating-digit="" >
            <audio type="index" >oPromptList[0].nIndex</audio>
            <audio type="index" >oPromptList[1].nIndex</audio>
            <audio type="index" >oPromptList[2].nIndex</audio>
            <audio type="index" >oPromptList[3].nIndex</audio>
            <audio type="index" >oPromptList[4].nIndex</audio>
          </collect-play>
          <results >
            <result name="Default" link="21" stubbed="1"/>
            <result name="Success" link="6" stubbed="0"/>
            <result name="Error"/>
            <result name="Timeout"/>
            <result name="No/Impossible Match"/>
            <result name="First Digit Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("PLAY MUSIC INDEX");]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO PLAY PROMPT, EXIT ON: " + Result.name);
	Server.logError("ERROR: RETURN CODE IS: " + Session.nReturnCode);
}]]></script>
          </scripts>
        </action>
        <action id="21" plug-in="Pactolus.DeleteConnection.2" ><?xtml-editor x=41 y=1050 ?>
          <!--clean up endpoint and try again-->
          <dlcx xmlns="urn:www.pactolus.com:xtml:media" media-endpoint="g_epPlay" returns="nReturnCode" timeout="g_nTimeout" >
            <parameters >
              <quarantine step="0" loop="0" process="0" discard="0"/>
              <events ><![CDATA[]]></events>
              <signals ><![CDATA[]]></signals>
              <digit-map ><![CDATA[]]></digit-map>
            </parameters>
          </dlcx>
          <results >
            <result name="Default" link="22" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO DELETE CONNECTION, EXIT ON: " + Result.name);
	Server.logError("ERROR: RETURN CODE IS: " + Session.nReturn);
}]]></script>
          </scripts>
        </action>
        <action id="22" plug-in="Pactolus.DeleteConnection.2" ><?xtml-editor x=250 y=1050 ?>
          <!--clean up in conf endpoint and try again-->
          <dlcx xmlns="urn:www.pactolus.com:xtml:media" media-endpoint="g_epInConf" returns="nReturnCode" timeout="g_nTimeout" >
            <parameters >
              <quarantine step="0" loop="0" process="0" discard="0"/>
              <events ><![CDATA[]]></events>
              <signals ><![CDATA[]]></signals>
              <digit-map ><![CDATA[]]></digit-map>
            </parameters>
          </dlcx>
          <results >
            <result name="Default" link="32" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO DELETE CONNECTION, EXIT ON: " + Result.name);
	Server.logError("ERROR: RETURN CODE IS: " + Session.nReturn);
}]]></script>
          </scripts>
        </action>
        <action id="23" plug-in="Pactolus.JavaStaticMethod.1" ><?xtml-editor x=799 y=652 ?>
          <!--getMediaServersByCapacity-->
          <java xmlns="urn:www.pactolus.com:xtml:application" class="&quot;com.pactolus.conferencing.psAPISceGetMediaServersByCapacity&quot;" method="&quot;getMediaServersByCapacity&quot;" timeout="g_nTimeout" return="" method-return-var="nReturnCode" method-return-type="0" >
            <parameter type="in" var-type="string" >g_strDBName</parameter>
            <parameter type="in" var-type="string" >strSessionId</parameter>
            <parameter type="in" var-type="i4" >nMSType</parameter>
            <parameter type="inout" var-type="string" >strMSOneName</parameter>
            <parameter type="inout" var-type="i4" >nMSOneCapacity</parameter>
            <parameter type="inout" var-type="string" >strMSTwoName</parameter>
            <parameter type="inout" var-type="i4" >nMSTwoCapacity</parameter>
            <parameter type="inout" var-type="string" >strMSThreeName</parameter>
            <parameter type="inout" var-type="i4" >nMSThreeCapacity</parameter>
          </java>
          <results >
            <result name="Default" link="3" stubbed="1"/>
            <result name="Success" link="14" stubbed="0"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo(Session._sessionId + "     CURRENTLY IN FUNCTION: psAPISceGetMediaServersByCapacity");
Server.logInfo("INFO: ********JAVA CALLING getMediaServersByCapacity *********");
Server.logInfo("INFO: BEFORE DB name = " + Session.g_strDBNAME);
Server.logInfo("INFO: BEFORE session Id = " + Session.strSessionId);
switch (Session.s_strConfMSType)  {
	case "PCS":
		Session.nMSType = 0;
		break;
	case "CONV":
		Session.nMSType = 1;
		break;
	case "SIP+MSML":
		Session.nMSType = 2;
		break;
	case "SIP+MSCML":
		Session.nMSType = 3;
		break;
	default:
		Session.nMSType = 2;
		break;
}
Server.logInfo("INFO: BEFORE Conf MS Type = " + Session.nMSType);]]></script>
            <script language="javascript" timing="last" ><![CDATA[Server.logInfo("INFO: ********** iJavaReturnCode " + Session.nReturnCode);
Server.logInfo("MS ONE NAME:  " + Session.strMSOneName);
Server.logInfo("MS ONE CAPACITY:  " + Session.nMSOneCapacity);
Server.logInfo("MS TWO NAME:  " + Session.strMSTwoName);
Server.logInfo("MS TWO CAPACITY:  " + Session.nMSTwoCapacity);
Server.logInfo("MS THREE NAME:  " + Session.strMSThreeName);
Server.logInfo("MS THREE CAPACITY:  " + Session.nMSThreeCapacity);
if (Result.id != 2)
{
	Server.logError("ERROR: GET MEDIASERVERS BY CAPACITY EXIT ON BRANCH: " + Result.name);
}
else
{
	Server.logInfo("MOST AVAILABLE PORT MS NAME IS: " + Session.strMSOneName);
}]]></script>
          </scripts>
        </action>
        <action id="25" plug-in="Pactolus.JavaStaticMethod.1" ><?xtml-editor x=273 y=362 ?>
          <!--"getConfEndpoint"-->
          <java xmlns="urn:www.pactolus.com:xtml:application" class="&quot;com.pactolus.conferencing.psAPISceGetConfEndpoint&quot;" method="&quot;getConfEndpoint&quot;" timeout="g_nTimeout" return="" method-return-var="nReturnCode" method-return-type="0" >
            <parameter type="in" var-type="string" >g_strDBName</parameter>
            <parameter type="in" var-type="string" >strSessionId</parameter>
            <parameter type="in" var-type="string" >strConfScheduleId</parameter>
            <parameter type="inout" var-type="string" >g_cnfMain.name</parameter>
            <parameter type="inout" var-type="string" >g_cnfMain.media_server_name</parameter>
            <parameter type="inout" var-type="string" >g_cnfMain.media_server_type</parameter>
            <parameter type="inout" var-type="string" >g_cnfMain.sip_dialog.dialog.from</parameter>
            <parameter type="inout" var-type="string" >g_cnfMain.sip_dialog.dialog.to</parameter>
            <parameter type="inout" var-type="string" >g_cnfMain.sip_dialog.dialog.call_id</parameter>
            <parameter type="inout" var-type="string" >g_cnfMain.sip_dialog.local.cseq</parameter>
            <parameter type="inout" var-type="string" >strConfEventId</parameter>
            <parameter type="inout" var-type="string" >strManagerSessionId</parameter>
          </java>
          <results >
            <result name="Default" link="3" stubbed="0"/>
            <result name="Success" link="4" stubbed="0"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[// initialize the media Server object ...
Session.g_epPlay.media_server_type = Session.s_strConfMSType;
Session.g_epInConf.media_server_type = Session.s_strConfMSType;
Session.strSessionId = Session._sessionId;
Server.logInfo("INFO: ********JAVA CALLING getConfEndpoint *********");
Server.logInfo("INFO: DB name = " + Session.g_strDBName);
Server.logInfo("INFO: Conf Schedule Id = " + Session.strConfScheduleId);]]></script>
            <script language="javascript" timing="last" ><![CDATA[Server.logInfo("INFO: ********** iJavaReturnCode " + Session.nReturnCode);
if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO GET CONFERENCE ENDPOINT, EXIT ON: " + Result.name);
	Session.strReturnMsg = "FAIL TO GET CONFERENCE ENDPOINT";
}]]></script>
          </scripts>
        </action>
        <action id="28" plug-in="Pactolus.DeleteConnection.2" ><?xtml-editor x=898 y=50 ?>
          <!--clean up endpoint and try again-->
          <dlcx xmlns="urn:www.pactolus.com:xtml:media" media-endpoint="g_epPlay" returns="nReturnCode" timeout="g_nTimeout" >
            <parameters >
              <quarantine step="0" loop="0" process="0" discard="0"/>
              <events ><![CDATA[]]></events>
              <signals ><![CDATA[]]></signals>
              <digit-map ><![CDATA[]]></digit-map>
            </parameters>
          </dlcx>
          <results >
            <result name="Default" link="3" stubbed="1"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO DELETE CONNECTION, EXIT ON: " + Result.name);
	Server.logError("ERROR: RETURN CODE IS: " + Session.nReturn);
}]]></script>
          </scripts>
        </action>
        <action id="30" plug-in="Pactolus.ModifyExistingDialog.1" ><?xtml-editor x=690 y=50 ?>
          <modify-session xmlns="urn:www.pactolus.com:xtml:sip-dialog" session="g_epPlay.sip_dialog" action="4" media-endpoint="g_epInConf" media-server-type="g_cnfMain.media_server_type" endpoint-type="&quot;ivr&quot;" media-sdp="" sip-address="" media-allocate-new-endpoint="1" transfer-mode="1" media-status="" codec="s_strCodec" telephone-events="0" media-server-name="g_cnfMain.media_server_name" conference="g_cnfMain" new-conference="0" persistent-conference="0" wideband="1" participant-mode="&quot;Deaf&quot;" coachee-endpoint="" max-parties="" dtmf-clamp-setting="0" max-talkers="" hysteresis="" time-constant="" active-speakers-to-report="" reporting-interval="" active-speaker-threshold="" >
            <sip-hdrs-A-leg/>
            <sip-hdrs-B-leg/>
            <session-timer-A >
              <use-session-timer >1</use-session-timer>
              <session-timer-interval ></session-timer-interval>
              <session-timer-min-interval ></session-timer-min-interval>
              <session-timer-refresher ></session-timer-refresher>
            </session-timer-A>
            <session-timer-B >
              <use-session-timer >1</use-session-timer>
              <session-timer-interval ></session-timer-interval>
              <session-timer-min-interval ></session-timer-min-interval>
              <session-timer-refresher ></session-timer-refresher>
            </session-timer-B>
          </modify-session>
          <results >
            <result name="Default" link="28" stubbed="0"/>
            <result name="Success" link="37" stubbed="0"/>
            <result name="No response"/>
            <result name="Not completed in time"/>
            <result name="Caller hung up"/>
            <result name="Media resource failure"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO MODIFY DIALOG, EXIT ON: " + Result.name);
}]]></script>
          </scripts>
        </action>
        <action id="31" plug-in="Pactolus.CreateConnection.2" ><?xtml-editor x=453 y=54 ?>
          <!--create a connection to play from-->
          <crcx xmlns="urn:www.pactolus.com:xtml:media" media-endpoint="g_epPlay" mode="inactive" remote-sdp="" codec="s_strCodec" packetization-period="" local-connection-options="" capability="1" second-endpoint="" media-server-type="g_cnfMain.media_server_type" media-server-name="g_cnfMain.media_server_name" returns="nReturnCode" timeout="g_nTimeout" telephone-events="0" >
            <parameters >
              <quarantine step="0" loop="0" process="0" discard="0"/>
              <events ><![CDATA[]]></events>
              <signals ><![CDATA[]]></signals>
              <digit-map ><![CDATA[]]></digit-map>
            </parameters>
          </crcx>
          <results >
            <result name="Default" link="3" stubbed="1"/>
            <result name="Success" link="30" stubbed="0"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO CREATE EP TO PLAY, EXIT ON: " + Result.name);
	Server.logError("ERROR: RETURN CODE IS: " + Session.nReturnCode);
}]]></script>
          </scripts>
        </action>
        <action id="32" plug-in="Pactolus.DeleteConference.1" ><?xtml-editor x=471 y=1048 ?>
          <!--delete conference and try again-->
          <delete-conference xmlns="urn:www.pactolus.com:xtml:conference" conference="g_cnfMain" return-value="nReturnCode" timeout="g_nTimeout"/>
          <results >
            <result name="Default" link="11" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("DELETE CONFERENCE");
Session.g_cnfMain.LogDebug();]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO DELETE CONFERENCE, EXIT ON: " + Result.name);
	Server.logError("ERROR: RETURN CODE IS: " + Session.nReturnCode);
}]]></script>
          </scripts>
        </action>
        <action id="33" plug-in="Pactolus.CreateConference.1" ><?xtml-editor x=912 y=1049 ?>
          <create-conference xmlns="urn:www.pactolus.com:xtml:conference" conference="g_cnfMain" persist="1" wideband="0" media-server-type="g_cnfMain.media_server_type" media-server-name="g_cnfMain.media_server_name" max-parties="g_cnfMain.max_parties" max-talkers="g_cnfMain.max_talkers" hysteresis="" time-constant="" active-speakers-to-report="g_cnfMain.asn.num_speakers" reporting-interval="g_cnfMain.asn.report_interval" active-speaker-threshold="g_cnfMain.asn.active_speaker_threshold" return-value="nReturnCode" timeout="g_nTimeout"/>
          <results >
            <result name="Default" link="3" stubbed="1"/>
            <result name="Success" link="17" stubbed="1"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("INFO: CREATE A CONFERENCE");
Session.g_strConfScheduleId = Session.strConfScheduleId;
Session.g_strConfControllerIP = Session.strConfControllerIP;
Session.g_nConfControllerPort = Session.nConfControllerPort;
// intialize conference object...
Session.g_cnfMain.max_parties = Session.s_nConferenceMaxParties;
Session.g_cnfMain.max_talkers = Session.s_nConferenceMaxTalkers;
Session.g_cnfMain.media_server_name = Session.strMSOneName; 
Session.g_cnfMain.media_server_type = Session.s_strConfMSType;
Session.g_cnfMain.asn.active_speaker_threshold = Session.s_nDBThreshold;
Session.g_cnfMain.asn.num_speakers = Session.s_nNbrActiveSpeakers;
Session.g_cnfMain.asn.report_interval = Session.s_nReportingInterval;
Session.g_cnfMain.nAGCTargetLevelIn = Session.s_nAGCTargetLevelIn;
Session.g_cnfMain.nAGCMaxLevelIn = Session.s_nAGCMaxLevelIn;
Session.g_cnfMain.nAGCTargetLevelOut = Session.s_nAGCTargetLevelOut;
Session.g_cnfMain.nAGCMaxLevelOut = Session.s_nAGCMaxLevelOut;
Session.g_cnfMain.persistent = true;
Session.g_cnfMain.LogDebug();]]></script>
            <script language="javascript" timing="last" ><![CDATA[Server.logInfo("INFO: AFTER CREATE CONFERENCE");
Server.logInfo("INFO: MS CODEC = " + Session.s_strCodec);
Session.g_cnfMain.LogDebug();
if (Result.id !=2)
{
	Server.logError("FAIL TO CREATE CONFERENCE, EXIT ON BRANCH: " + Result.name);
	Server.logError("RETURN CODE: " + Session.nReturnCode);
	Session.strReturnMsg = "FAILURE ConfMusicOnRequest, FAIL TO CREATE CONFERENCE";
}]]></script>
          </scripts>
        </action>
        <action id="34" plug-in="Standard.WaitEvent.1" ><?xtml-editor x=1493 y=1011 ?>
          <!--for response-->
          <wait xmlns="urn:www.pactolus.com:xtml:communication" timeout="10" recv-name="" >
            <msg name="SetConferenceManagingSessionResponse" >
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter ></parameter>
              <parameter >nReturnCode</parameter>
              <parameter >strReturnMsg</parameter>
            </msg>
          </wait>
          <results >
            <result name="Default" link="2" stubbed="1"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("WAITING FOR CC RESPONSE TO SET CONFERENCE MANAGING SESSION ID REQUEST");]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("FAIL TO WAIT FOR SET CONFERENCE MANAGING SESSION ID RESPONSE, EXIT ON : " + Result.name);
}
Server.logInfo("CC RESPONSE WITH RETURN CODE: " + Session.nReturnCode);
Server.logInfo("CC RESPONSE WITH RETURN MESSAGE: " + Session.strReturnMsg);

js_enable_event();]]></script>
          </scripts>
        </action>
        <action id="36" plug-in="Pactolus.SOAPMessage.1" ><?xtml-editor x=1262 y=1014 ?>
          <!--"SetConferenceManagingSessionRequest"-->
          <SOAP xmlns="urn:www.pactolus.com:xtml:communication" destination-ip="strConfControllerIP" transaction="strEmptyString" message-name="&quot;SetConferenceManagingSessionRequest&quot;" destination-port="nConfControllerPort" destination-type="4" destination-session="" waiting-session-selected="" xml-namespace="" >
            <parameter tag="&quot;ConferenceID&quot;" value="strConfScheduleId"/>
            <parameter tag="&quot;SessionID&quot;" value="strManagerSessionId"/>
          </SOAP>
          <results >
            <result name="Default" link="2" stubbed="1"/>
            <result name="Success" link="34" stubbed="0"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("SENDING SET CONFERENCE MANAGING SESSION ID TO CC");]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("FAIL TO SEND SET CONFERENCE MANAGING SESSION ID REQUEST TO CC");
}]]></script>
          </scripts>
        </action>
        <action id="37" plug-in="Pactolus.JavaStaticMethod.1" ><?xtml-editor x=916 y=209 ?>
          <!--"getMusicPrompts"-->
          <java xmlns="urn:www.pactolus.com:xtml:application" class="&quot;com.pactolus.psAPISceMisc&quot;" method="&quot;getMusicPrompts&quot;" timeout="g_nTimeout" return="" method-return-var="nReturnCode" method-return-type="0" >
            <parameter type="in" var-type="string" >strSessionId</parameter>
            <parameter type="in" var-type="string" >g_strDBName</parameter>
            <parameter type="in" var-type="i8" >lServiceProviderId</parameter>
            <parameter type="inout" var-type="i4" >nNumberOfPrompts</parameter>
            <parameter type="inout" var-type="string" >strPromptType</parameter>
            <parameter type="inout" var-type="string" >oPromptList[0].strURL</parameter>
            <parameter type="inout" var-type="i4" >oPromptList[0].nIndex</parameter>
            <parameter type="inout" var-type="string" >oPromptList[1].strURL</parameter>
            <parameter type="inout" var-type="i4" >oPromptList[1].nIndex</parameter>
            <parameter type="inout" var-type="string" >oPromptList[2].strURL</parameter>
            <parameter type="inout" var-type="i4" >oPromptList[2].nIndex</parameter>
            <parameter type="inout" var-type="string" >oPromptList[3].strURL</parameter>
            <parameter type="inout" var-type="i4" >oPromptList[3].nIndex</parameter>
            <parameter type="inout" var-type="string" >oPromptList[4].strURL</parameter>
            <parameter type="inout" var-type="i4" >oPromptList[4].nIndex</parameter>
          </java>
          <results >
            <result name="Default" link="38" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[for (var i = 0; i < 5; i++)
{
	Session.oPromptList[i].strURL = "file://99";
	Session.oPromptList[i].nIndex = 99;
}
Server.logInfo("INFO: ********JAVA CALLING psAPISceMisc.getMusicPrompts *********");
Server.logInfo(" SESSION Id: " + Session.strSessionId);
Server.logInfo(" DB NAME: " + Session.g_strDBName);
Server.logInfo(" SERVICE PROVIDER Id: " + Session.lServiceProviderId);]]></script>
            <script language="javascript" timing="last" ><![CDATA[Server.logInfo("INFO: ********** iJavaReturnCode " + Session.nReturnCode);
Server.logInfo(" Prompt type: " + Session.strPromptType);
for (var i = 0; i < Session.oPromptList.length; i++)
{
	Server.logInfo(" Prompt url: " + Session.oPromptList[i].strURL);
	Server.logInfo(" Prompt index: " + Session.oPromptList[i].nIndex);
}
if (Result.id !=2 || Session.nReturnCode !=0)
{
	Server.logInfo("NO PROMPT FOR SERVICE PROVIDER, USE PACTOLUS DEFAULT");
	Session.oPromptList[0].nIndex = 4090;
	Session.oPromptList[1].nIndex = 4091;
	Session.oPromptList[2].nIndex = 4092;
	Session.oPromptList[3].nIndex = 99;
	Session.oPromptList[4].nIndex = 99;
	Session.strPromptType = "I";
}]]></script>
          </scripts>
        </action>
        <action id="38" plug-in="Pactolus.Branch.1" ><?xtml-editor x=1125 y=206 ?>
          <!--URL or Index-->
          <results >
            <result name="Default" link="40" stubbed="0"/>
            <result name="strPromptType==&quot;U&quot;" link="39" stubbed="0" >strPromptType match "U"</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[for (var i = 0; i < 5; i++)
{
	if (0 == Session.oPromptList[i].nIndex)
	{
		Server.logInfo("PROMPT INDEX IS 0, SET TO 99");
		Session.oPromptList[i].nIndex = 99;
	}
	if (Session.oPromptList[i].strURL.length <= 0)
	{
		Server.logInfo("PROMPT URL LENGTH IS ZERO, SET TO file://99");
		Session.oPromptList[i].strURL = "file://99";
	}
}]]></script>
          </scripts>
        </action>
        <action id="39" plug-in="Pactolus.Play.2" ><?xtml-editor x=1382 y=292 ?>
          <!--play url-->
          <collect-play xmlns="urn:www.pactolus.com:xtml:media" play-on-endpoint="1" media-endpoint="g_epPlay" conference="" timeout="0.1" played-length="" digits="" terminating-char="" rc="" returns="nReturnCode" start-play="1" return-immediate="0" play-offset="" language="strLanguage" retry-count="1" time-to-play="" interrupt="0" repeat="1" clear-digits="1" digit-map="" fdt="" idt="" ict="" terminating-digit="" >
            <audio type="url" >oPromptList[0].strURL</audio>
            <audio type="url" >oPromptList[1].strURL</audio>
            <audio type="url" >oPromptList[2].strURL</audio>
            <audio type="url" >oPromptList[3].strURL</audio>
            <audio type="url" >oPromptList[4].strURL</audio>
          </collect-play>
          <results >
            <result name="Default" link="41" stubbed="1"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
            <result name="No/Impossible Match"/>
            <result name="First Digit Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("PLAY MUSIC URL");]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO PLAY PROMPT, EXIT ON: " + Result.name);
	Server.logError("ERROR: RETURN CODE IS: " + Session.nReturnCode);
}]]></script>
          </scripts>
        </action>
        <action id="40" plug-in="Pactolus.Play.2" ><?xtml-editor x=1364 y=93 ?>
          <!--play indexed clip-->
          <collect-play xmlns="urn:www.pactolus.com:xtml:media" play-on-endpoint="1" media-endpoint="g_epPlay" conference="" timeout="0.1" played-length="" digits="" terminating-char="" rc="" returns="nReturnCode" start-play="1" return-immediate="0" play-offset="" language="strLanguage" retry-count="1" time-to-play="" interrupt="0" repeat="1" clear-digits="1" digit-map="" fdt="" idt="" ict="" terminating-digit="" >
            <audio type="index" >oPromptList[0].nIndex</audio>
            <audio type="index" >oPromptList[1].nIndex</audio>
            <audio type="index" >oPromptList[2].nIndex</audio>
            <audio type="index" >oPromptList[3].nIndex</audio>
            <audio type="index" >oPromptList[4].nIndex</audio>
          </collect-play>
          <results >
            <result name="Default" link="41" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
            <result name="No/Impossible Match"/>
            <result name="First Digit Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("PLAY MUSIC INDEX");]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO PLAY PROMPT, EXIT ON: " + Result.name);
	Server.logError("ERROR: RETURN CODE IS: " + Session.nReturnCode);
}]]></script>
          </scripts>
        </action>
        <action id="41" plug-in="Pactolus.JavaStaticMethod.1" ><?xtml-editor x=1591 y=91 ?>
          <!--"setGlobalMusicFlag"-->
          <java xmlns="urn:www.pactolus.com:xtml:application" class="&quot;com.pactolus.conferencing.psAPISceGlobalMusicFlag&quot;" method="&quot;setGlobalMusicFlag&quot;" timeout="g_nTimeout" return="" method-return-var="nReturnCode" method-return-type="0" >
            <parameter type="in" var-type="string" >g_strDBName</parameter>
            <parameter type="in" var-type="string" >strSessionId</parameter>
            <parameter type="in" var-type="string" >strConfEventId</parameter>
            <parameter type="in" var-type="string" >strGlobalMusicIsOn</parameter>
          </java>
          <results >
            <result name="Default" link="42" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("INFO: ********JAVA CALLING setGlobalMusicFlag *********");
Server.logInfo("Session.strConfScheduleId : " + Session.strConfScheduleId);]]></script>
            <script language="javascript" timing="last" ><![CDATA[Server.logInfo("INFO: ********** iJavaReturnCode " + Session.nReturnCode);
if (Result.id != 2 || Session.nReturnCode != 0)
{
	Server.logError("ERROR: FAIL TO SET MUSIC IS ON FLAG, EXIT ON: " + Result.name);
}]]></script>
          </scripts>
        </action>
        <action id="42" plug-in="Pactolus.SOAPMessage.1" ><?xtml-editor x=1831 y=90 ?>
          <!--"ConfMusicOnResponse" SUCCESS-->
          <SOAP xmlns="urn:www.pactolus.com:xtml:communication" destination-ip="strConfControllerIP" transaction="strTransactionId" message-name="&quot;ConfMusicOnResponse&quot;" destination-port="nConfControllerPort" destination-type="4" destination-session="" waiting-session-selected="" xml-namespace="" >
            <parameter tag="&quot;Status&quot;" value="0"/>
            <parameter tag="&quot;StatusMessage&quot;" value="strReturnMsg"/>
            <parameter tag="&quot;ConferenceEndpoint&quot;" value="strEndPointAndMSName"/>
          </SOAP>
          <results >
            <result name="Default" link="2" stubbed="1"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("Session.strConfControllerIP : " + Session.strConfControllerIP);
Server.logInfo("Session.nConfControllerPort : " + Session.nConfControllerPort);
Server.logInfo("Session.strTransactionId : " + Session.strTransactionId);
Server.logInfo("Session.strConferenceEndpoint : " + Session.strConferenceEndpoint);
Server.logInfo("Session.strConfScheduleId : " + Session.strConfScheduleId);
Session.strReturnMsg = "SUCCESS ConfMusicOnRequest";
Session.strEndPointAndMSName = Session.g_cnfMain.name + "@" + Session.g_cnfMain.media_server_name;]]></script>
            <script language="javascript" timing="last" ><![CDATA[if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO SEND RESPONSE TO CC, EXIT ON BRANCH: " + Result.name);
}]]></script>
          </scripts>
        </action>
        <action id="44" plug-in="Pactolus.JavaStaticMethod.1" ><?xtml-editor x=236 y=54 ?>
          <!--"getConfEndpoint"-->
          <java xmlns="urn:www.pactolus.com:xtml:application" class="&quot;com.pactolus.conferencing.psAPISceGetConfEndpoint&quot;" method="&quot;getConfEndpoint&quot;" timeout="g_nTimeout" return="" method-return-var="nReturnCode" method-return-type="0" >
            <parameter type="in" var-type="string" >g_strDBName</parameter>
            <parameter type="in" var-type="string" >strSessionId</parameter>
            <parameter type="in" var-type="string" >strConfScheduleId</parameter>
            <parameter type="inout" var-type="string" >strTempString</parameter>
            <parameter type="inout" var-type="string" >strTempString</parameter>
            <parameter type="inout" var-type="string" >strTempString</parameter>
            <parameter type="inout" var-type="string" >strTempString</parameter>
            <parameter type="inout" var-type="string" >strTempString</parameter>
            <parameter type="inout" var-type="string" >strTempString</parameter>
            <parameter type="inout" var-type="string" >strTempString</parameter>
            <parameter type="inout" var-type="string" >strConfEventId</parameter>
            <parameter type="inout" var-type="string" >strManagerSessionId</parameter>
          </java>
          <results >
            <result name="Default" link="3" stubbed="1"/>
            <result name="Success" link="31" stubbed="0"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[// initialize the media Server object ...
Session.g_epPlay.media_server_type = Session.s_strConfMSType;
Session.g_epInConf.media_server_type = Session.s_strConfMSType;
Session.strSessionId = Session._sessionId;
Server.logInfo("INFO: ********JAVA CALLING getConfEndpoint *********");
Server.logInfo("INFO: DB name = " + Session.g_strDBName);
Server.logInfo("INFO: Conf Schedule Id = " + Session.strConfScheduleId);]]></script>
            <script language="javascript" timing="last" ><![CDATA[Server.logInfo("INFO: ********** iJavaReturnCode " + Session.nReturnCode);
if (Result.id != 2)
{
	Server.logError("ERROR: FAIL TO GET CONFERENCE ENDPOINT, EXIT ON: " + Result.name);
	Session.strReturnMsg = "FAIL TO GET CONFERENCE ENDPOINT";
}]]></script>
          </scripts>
        </action>
      </actions>
      <text-objects >
        <text-object x-coord="801" y-coord="798" width="371" height="44" text="strConfEventId: out from getConfEndpoint" font-name="Times New Roman" size="-16" red="0" green="0" blue="0" weight="0" underline="0" strikeout="0" point-size="12" italic="0"/>
      </text-objects>
    </function>
    <function name="OnConfStartRecordRequest" start="10" event="ConfStartRecordRequest" returns="void" >
      <parameters >
        <parameter name="strConfControllerIP" type="string" pass="byref"/>
        <parameter name="nConfControllerPort" type="i4" pass="byref"/>
        <parameter name="strTransactionId" type="string" pass="byref"/>
        <parameter name="strConferenceSessionId" type="string" pass="byref"/>
        <parameter name="strConferenceName" type="string" pass="byref"/>
        <parameter name="strRequestorSessionId" type="string" pass="byref"/>
        <parameter name="strRecordFileName" type="string" pass="byref"/>
      </parameters>
      <local-vars >
        <var name="nReturnCode" type="i4" >-1</var>
        <var name="strReturnMsg" type="string" ></var>
        <var name="nMaxRecordLength" type="i4" >1080000</var>
        <var name="strSessionId" type="string" ></var>
        <var name="lRecordStartTime" type="i8" >0</var>
      </local-vars>
      <actions >
        <action id="10" plug-in="Pactolus.Play.2" ><?xtml-editor x=29 y=21 ?>
          <collect-play xmlns="urn:www.pactolus.com:xtml:media" play-on-endpoint="0" media-endpoint="" conference="g_cnfMain" timeout="" played-length="" digits="" terminating-char="" rc="" returns="" start-play="1" return-immediate="0" play-offset="" language="" retry-count="1" time-to-play="" interrupt="0" repeat="0" clear-digits="0" digit-map="" fdt="" idt="" ict="" terminating-digit="" >
            <audio type="index" >228</audio>
          </collect-play>
          <results >
            <result name="Default" link="2" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
            <result name="No/Impossible Match"/>
            <result name="First Digit Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[js_disable_event();]]></script>
          </scripts>
        </action>
        <action id="2" plug-in="Pactolus.Record.2" ><?xtml-editor x=66 y=195 ?>
          <!--Record to g_cnfMain.strRecordFile-->
          <record xmlns="urn:www.pactolus.com:xtml:media" op-mode="0" media-endpoint="" conference="g_cnfMain" timeout="" returns="nReturnCode" return-immediate="1" record-on-endpoint="0" rid="g_oRecording.fileName" eik="" rlt="nMaxRecordLength" prt="" pst="" rl="" dc="" rc="" id-cleanup="0" play-beep="0" append="1" ef="&quot;ULAW&quot;" agc="0" agcta="" ga="" sla="" bpf="" bpa="" bpd=""/>
          <results >
            <result name="Default" link="8" stubbed="1"/>
            <result name="Success" link="7" stubbed="0"/>
            <result name="Error"/>
            <result name="Timeout"/>
            <result name="No Speech Detected"/>
            <result name="failure - try backkup" link="5" stubbed="0" >'Result'  != 'Success'
AND s_oRecordUrl.length &gt; 1</result>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[//js_disable_event();
Server.logInfo(Session._sessionId + "     CURRENTLY IN FUNCTION: OnConfStartRecordRequest");
Session.strSessionId = Session._sessionId;
Server.logInfo("CC IP : " + Session.strConfControllerIP);
Server.logInfo("CC PORT : " + Session.nConfControllerPort);
Server.logInfo("TRANSACTION ID : " + Session.strTransactionId);
Server.logInfo("CONFERENCE SESSION ID : " + Session.strConferenceSessionId);
Server.logInfo("CONFERENCE NAME : " + Session.strConferenceName);
Server.logInfo("REQUESTOR SESSION ID : " + Session.strRequestorSessionId);
Server.logInfo("RECORD FILE : " + Session.strRecordFileName);
makeRecordFileName(Session.g_oRecording);
Server.logInfo("Recording to file: " + Session.g_oRecording.fileName ) ;
Session.g_strConferenceSessionId = Session.strConferenceSessionId;
Session.g_strRequestorSessionId = Session.strRequestorSessionId;]]></script>
            <script language="javascript" timing="middle" ><![CDATA[if( 2 == Result.id ) {
	Session.g_oRecording.acquired = true ;
	Session.g_oRecording.dialog_id = Session.g_cnfMain._media_dialog_id ;
	Server.logInfo("Recording was started with dialog id: " + Session.g_oRecording.dialog_id ) ;
}]]></script>
          </scripts>
        </action>
        <action id="3" plug-in="Pactolus.UserFunction.1" ><?xtml-editor x=766 y=266 ?>
          <!--SNMP trap ConferenceRecordingOnBackupFailed-->
          <user-function xmlns="urn:www.pactolus.com:xtml:application" process="&quot;PACTOLUS_ps_c_adaptor&quot;" function="&quot;increment_event_counter&quot;" timeout="" return="" async="1" >
            <parameter >s_strBackupRecordFailed</parameter>
          </user-function>
          <results >
            <result name="Default" link="8" stubbed="1"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
        </action>
        <action id="4" plug-in="Pactolus.Record.2" ><?xtml-editor x=528 y=270 ?>
          <!--start the conference recording on backup nfs-->
          <record xmlns="urn:www.pactolus.com:xtml:media" op-mode="0" media-endpoint="" conference="g_cnfMain" timeout="" returns="" return-immediate="1" record-on-endpoint="0" rid="g_oRecording.fileName" eik="" rlt="nMaxRecordLength" prt="" pst="" rl="" dc="" rc="" id-cleanup="0" play-beep="0" append="1" ef="&quot;ULAW&quot;" agc="0" agcta="" ga="" sla="" bpf="" bpa="" bpd=""/>
          <results >
            <result name="Default" link="3" stubbed="0"/>
            <result name="Success" link="7" stubbed="1"/>
            <result name="Error"/>
            <result name="Timeout"/>
            <result name="No Speech Detected"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.g_oRecording.sequence++ ;
Session.g_oRecording.nfs_server = 1 ;
makeRecordFileName() ;
Server.logInfo("Recording to file: " + Session.g_oRecording.fileName ) ;]]></script>
            <script language="javascript" timing="middle" ><![CDATA[if( 2 == Result.id ) {
	Session.g_oRecording.acquired = true ;
	Session.g_oRecording.dialog_id = Session.g_cnfMain._media_dialog_id ;
	Server.logInfo("Recording was started with dialog id: " + Session.g_oRecording.dialog_id ) ;
}]]></script>
          </scripts>
        </action>
        <action id="5" plug-in="Pactolus.UserFunction.1" ><?xtml-editor x=309 y=275 ?>
          <!--SNMP trap ConferenceRecordingFailed-->
          <user-function xmlns="urn:www.pactolus.com:xtml:application" process="&quot;PACTOLUS_ps_c_adaptor&quot;" function="&quot;increment_event_counter&quot;" timeout="" return="" async="1" >
            <parameter >s_strRecordFailed</parameter>
          </user-function>
          <results >
            <result name="Default" link="4" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
        </action>
        <action id="6" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=529 y=25 ?>
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[js_enable_event();]]></script>
          </scripts>
        </action>
        <action id="7" plug-in="Pactolus.SOAPMessage.1" ><?xtml-editor x=309 y=149 ?>
          <!--SUCCESS-->
          <SOAP xmlns="urn:www.pactolus.com:xtml:communication" destination-ip="strConfControllerIP" transaction="strTransactionId" message-name="&quot;ConfStartRecordResponse&quot;" destination-port="nConfControllerPort" destination-type="4" destination-session="" waiting-session-selected="" xml-namespace="" >
            <parameter tag="&quot;resultCode&quot;" value="0"/>
            <parameter tag="&quot;resultMessage&quot;" value="strReturnMsg"/>
            <parameter tag="&quot;recordingID&quot;" value="strTransactionId"/>
            <parameter tag="&quot;recordStartTime&quot;" value="lRecordStartTime"/>
          </SOAP>
          <results >
            <result name="Default" link="9" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.lRecordStartTime = Server.getUTCTime();
Session.strReturnMsg = "Conf Start Record Successfully";]]></script>
          </scripts>
        </action>
        <action id="8" plug-in="Pactolus.SOAPMessage.1" ><?xtml-editor x=308 y=26 ?>
          <!--FAILURE-->
          <SOAP xmlns="urn:www.pactolus.com:xtml:communication" destination-ip="strConfControllerIP" transaction="strTransactionId" message-name="&quot;ConfStartRecordResponse&quot;" destination-port="nConfControllerPort" destination-type="4" destination-session="" waiting-session-selected="" xml-namespace="" >
            <parameter tag="&quot;resultCode&quot;" value="-1"/>
            <parameter tag="&quot;resultMessage&quot;" value="strReturnMsg"/>
            <parameter tag="&quot;recordingID&quot;" value="strTransactionId"/>
            <parameter tag="&quot;recordStartTime&quot;" value="lRecordStartTime"/>
          </SOAP>
          <results >
            <result name="Default" link="6" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.strReturnMsg = "Conf Start Record Failed";]]></script>
          </scripts>
        </action>
        <action id="9" plug-in="Pactolus.JavaStaticMethod.1" ><?xtml-editor x=520 y=144 ?>
          <!--"insertRecordEvent"-->
          <java xmlns="urn:www.pactolus.com:xtml:application" class="&quot;com.pactolus.conferencing.psAPISceConfMisc&quot;" method="&quot;insertRecordEvent&quot;" timeout="g_nTimeout" return="" method-return-var="nReturnCode" method-return-type="0" >
            <parameter type="in" var-type="string" >strSessionId</parameter>
            <parameter type="in" var-type="string" >strConferenceSessionId</parameter>
            <parameter type="in" var-type="string" >g_oRecording.fileName</parameter>
            <parameter type="in" var-type="string" >strRequestorSessionId</parameter>
            <parameter type="in" var-type="string" >strSessionId</parameter>
            <parameter type="in" var-type="string" >s_strCodec</parameter>
            <parameter type="inout" var-type="string" >g_oRecording.record_id</parameter>
          </java>
          <results >
            <result name="Default" link="6" stubbed="1"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("INFO: ********** JAVA CALLING insertRecordEvent *********");
Server.logInfo("INFO: SESSION ID = " + Session.strSessionId);
Server.logInfo("INFO: CONFERENCE SESSION ID = " + Session.strConferenceSessionId);
Server.logInfo("INFO: RECORDED FILE LOCATION = " + Session.g_oRecording.fileName);
Session.g_oRecording.record_id = Session.strConferenceSessionId;]]></script>
            <script language="javascript" timing="last" ><![CDATA[Server.logInfo("INFO: ********** iJavaReturnCode " + Session.nReturnCode);
Server.logInfo("RECORDING ID : " + Session.g_oRecording.record_id);
if (Result.id != 2 || Session.nReturnCode != 0)
{
	Server.logError("ERROR: FAIL TO INSERT RECORD EVENT");
	Server.logError("ERROR: RETURN CODE: " + Session.nReturnCode);
	Server.logError("ERROR: EXIT ON: " + Result.name);
}
]]></script>
          </scripts>
        </action>
      </actions>
    </function>
    <function name="OnConfStopRecordRequest" start="1" event="ConfStopRecordRequest" returns="void" >
      <parameters >
        <parameter name="strConfControllerIP" type="string" pass="byref"/>
        <parameter name="nConfControllerPort" type="i4" pass="byref"/>
        <parameter name="strTransactionId" type="string" pass="byref"/>
        <parameter name="nTerminatedReason" type="i4" pass="byref"/>
      </parameters>
      <local-vars >
        <var name="nReturnCode" type="i4" >-1</var>
        <var name="strReturnMsg" type="string" ></var>
        <var name="strSessionId" type="string" ></var>
        <var name="lRecordStopTime" type="i8" >0</var>
      </local-vars>
      <actions >
        <action id="1" plug-in="Pactolus.Record.2" ><?xtml-editor x=113 y=126 ?>
          <!--Stop record-->
          <record xmlns="urn:www.pactolus.com:xtml:media" op-mode="1" media-endpoint="" conference="g_cnfMain" timeout="" returns="nReturnCode" return-immediate="0" record-on-endpoint="0" rid="g_cnfMain.strRecordFile" eik="" rlt="" prt="" pst="" rl="" dc="" rc="" id-cleanup="0" play-beep="0" append="0" ef="&quot;ULAW&quot;" agc="0" agcta="" ga="" sla="" bpf="" bpa="" bpd=""/>
          <results >
            <result name="Default" link="3" stubbed="0"/>
            <result name="Success" link="2" stubbed="0"/>
            <result name="Error"/>
            <result name="Timeout"/>
            <result name="No Speech Detected"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[js_disable_event();
Server.logInfo(Session._sessionId + "     CURRENTLY IN FUNCTION: OnConfStopRecordRequest");
Session.strSessionId = Session._sessionId;
Server.logInfo("CC IP : " + Session.strConfControllerIP);
Server.logInfo("CC PORT : " + Session.nConfControllerPort);
Server.logInfo("TRANSACTION ID : " + Session.strTransactionId);
Server.logInfo("TERMINATED REASON : " + Session.nTerminatedReason);]]></script>
          </scripts>
        </action>
        <action id="2" plug-in="Pactolus.SOAPMessage.1" ><?xtml-editor x=370 y=214 ?>
          <!--SUCCESS-->
          <SOAP xmlns="urn:www.pactolus.com:xtml:communication" destination-ip="strConfControllerIP" transaction="strTransactionId" message-name="&quot;ConfStopRecordResponse&quot;" destination-port="nConfControllerPort" destination-type="4" destination-session="" waiting-session-selected="" xml-namespace="" >
            <parameter tag="&quot;resultCode&quot;" value="0"/>
            <parameter tag="&quot;resultMessage&quot;" value="strReturnMsg"/>
            <parameter tag="&quot;recordStopTime&quot;" value="lRecordStopTime"/>
          </SOAP>
          <results >
            <result name="Default" link="4" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.lRecordStopTime = Server.getUTCTime();
Session.g_oRecording.paused = true ;
Session.g_oRecording.acquired = false ;
Session.g_oRecording.sequence++;
Session.strReturnMsg = "Conf Stop Record Successfully";]]></script>
          </scripts>
        </action>
        <action id="3" plug-in="Pactolus.SOAPMessage.1" ><?xtml-editor x=353 y=91 ?>
          <!--FAILURE-->
          <SOAP xmlns="urn:www.pactolus.com:xtml:communication" destination-ip="strConfControllerIP" transaction="strTransactionId" message-name="&quot;ConfStopRecordResponse&quot;" destination-port="nConfControllerPort" destination-type="4" destination-session="" waiting-session-selected="" xml-namespace="" >
            <parameter tag="&quot;resultCode&quot;" value="-1"/>
            <parameter tag="&quot;resultMessage&quot;" value="strReturnMsg"/>
            <parameter tag="&quot;recordStopTime&quot;" value="lRecordStopTime"/>
          </SOAP>
          <results >
            <result name="Default" link="5" stubbed="0"/>
            <result name="Success"/>
            <result name="Error"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Session.strReturnMsg = "Conf Stop Record Failed";]]></script>
          </scripts>
        </action>
        <action id="4" plug-in="Pactolus.JavaStaticMethod.1" ><?xtml-editor x=581 y=209 ?>
          <!--"endRecordEvent"-->
          <java xmlns="urn:www.pactolus.com:xtml:application" class="&quot;com.pactolus.conferencing.psAPISceConfMisc&quot;" method="&quot;endRecordEvent&quot;" timeout="g_nTimeout" return="" method-return-var="nReturnCode" method-return-type="0" >
            <parameter type="in" var-type="string" >strSessionId</parameter>
            <parameter type="in" var-type="string" >g_oRecording.record_id</parameter>
            <parameter type="in" var-type="i4" >nTerminatedReason</parameter>
          </java>
          <results >
            <result name="Default" link="5" stubbed="1"/>
            <result name="Success"/>
            <result name="Error"/>
            <result name="Timeout"/>
          </results>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[Server.logInfo("INFO: ********** JAVA CALLING endRecordEvent *********");
Server.logInfo("INFO: SESSION ID = " + Session.strSessionId);
Server.logInfo("INFO: RECORDED ID = " + Session.g_oRecording.record_id);
Server.logInfo("INFO: TERMINATED REASON = " + Session.nTerminatedReason);]]></script>
            <script language="javascript" timing="last" ><![CDATA[Server.logInfo("INFO: ********** iJavaReturnCode " + Session.nReturnCode);
Server.logInfo("RECORDING ID : " + Session.g_oRecording.record_id);
if (Result.id != 2 || Session.nReturnCode != 0)
{
	Server.logError("ERROR: FAIL TO INSERT RECORD EVENT");
	Server.logError("ERROR: RETURN CODE: " + Session.nReturnCode);
	Server.logError("ERROR: EXIT ON: " + Result.name);
}
]]></script>
          </scripts>
        </action>
        <action id="5" plug-in="Standard.FunctionReturn.1" ><?xtml-editor x=574 y=90 ?>
          <return xmlns="urn:www.pactolus.com:xtml:application" value=""/>
          <scripts >
            <script language="javascript" timing="first" ><![CDATA[js_enable_event();]]></script>
          </scripts>
        </action>
      </actions>
    </function>
  </functions>
  <script language="javascript" ><![CDATA[#include <javascript_utils.jsh>
function parse_value( instring, token, &value )
{
	/* search for token="value" in instring; between each token value pairs is ' ' OR ';' */

	// Server.logInfo("parse_value: instring is: " + instring ) ;
	// Server.logInfo("parse_value: token is   : " + token ) ;

	var search_token = token + "=" ;
	var i = instring.indexOf( search_token ) ;
	if( -1 == i ) {
		return false ;
	}

	/* if next char is double quote, search for terminating double-quote */
	var pos = i + search_token.length ;
	var quoted = false ;
	if( '"' == instring.charAt(pos) ) {
		pos++ ;
		quoted = true ;
	}

	var endPos = pos ;
	while(  (quoted && '"' != instring.charAt(endPos) ) ||
		(!quoted && (' ' != instring.charAt(endPos) && ';' != instring.charAt(endPos) ) && endPos < instring.length ) )
		endPos++ ;

	value = instring.slice( pos, endPos ) ;
	// Server.logInfo("parse_value: found token, value is: " + value ) ;
	return true ;	
}

function parse_xml_tag_value( instring, tag, &value )
{
	// Server.logInfo("parse_xml_tag_value: instring is: " + instring ) ;
	// Server.logInfo("parse_xml_tag_value: tag is   : " + tag ) ;
	/* search for <tag>value</tag> in instring */
	var search_token = "<" + tag ;
	var end_token = "</" + tag + ">" ;

	/* search for '<tag' */
	var i = instring.indexOf( search_token ) ;
	if( -1 == i ) {
		return false ;
	}

	/* now search for closing angle bracket */
	i = instring.indexOf( ">", i ) ;
	if( -1 == i ) {
		return false ;
	}

	var fragment = instring.substr( i + 1 ) ;
	var endPos = fragment.indexOf( end_token ) ;
	value = fragment.slice( 0, endPos ) ;
	if( 0 == value.length ) return false ;	
	// Server.logInfo("parse_xml_tag_value: instring is: " + instring ) ;
	// Server.logInfo("parse_xml_tag_value: value is   : " + value ) ;

	return true ;	
}


function parse_xml_tag_attribute( instring, tag, attribute, &value )
{
	/* search for <tag>value</tag> in instring */
	var search_token = "<" + tag ;
	var end_token = "</" + tag + ">" ;

	/* search for '<tag' */
	// Server.logInfo("Searching for attribute " + attribute + " in tag " + tag ) ;
	// Server.logInfo("Search string is: " + instring ) ;

	var start_tag = instring.indexOf( search_token ) ;
	// Server.logInfo("start_tag: " + start_tag ) ;

	if( -1 == start_tag ) {
		return false ;
	}

	/* now search for closing angle bracket */
	var end_tag = instring.indexOf( ">", start_tag ) ;
	// Server.logInfo("end_tag: " + end_tag ) ;

	if( -1 == end_tag || end_tag == start_tag + search_token.length ) {
		Server.logInfo("Error: end tag not found" ) ;
		return false ;
	}

	/* get the fragment in between and search for 'attribute=value' */
	var fragment = instring.substr( start_tag + search_token.length, 
						end_tag - start_tag - search_token.length ) ;

	// Server.logInfo("fragment: " + fragment ) ;
	return parse_value( fragment, attribute, value ) ;	
}
function initRecording( &recordingObj )
{
	recordingObj.required = false ;
	recordingObj.acquired = false ;
	recordingObj.fileName = "" ;
	recordingObj.paused = false ;
	recordingObj.sequence = 1 ;
	recordingObj.nfs_server = 0 ;
	recordingObj.dialog_id = 0 ;
	recordingObj.record_id = 0 ;
	recordingObj.stopped = false;
	var myDate = new Date();
	var myMonth = parseInt(myDate.getMonth()) + 1;
	recordingObj.record_date = myDate.getFullYear() + "_" + myMonth + "_" + myDate.getDate() + "_" + myDate.getHours() + myDate.getMinutes() + myDate.getSeconds();
	// Server.logInfo("INIT RECORD OBJECT");
}
function makeRecordFileName( &recordingObj)
{
	// Server.logInfo("makeRecordFileName OBJECT NFS_SERVER " + recordingObj.nfs_server);
	// Server.logInfo("makeRecordFileName OBJECT SEQUENCE " + recordingObj.sequence);
	// Server.logInfo("makeRecordFileName CONF SCHEDULE ID " + Session.g_strConfScheduleId);
	// Server.logInfo("makeRecordFileName RECORD URL " + Session.s_oRecordUrl[recordingObj.nfs_server]);
	/*
	if( 1 == recordingObj.sequence ) {
		recordingObj.fileName = Session.s_oRecordUrl[recordingObj.nfs_server] + "/" + Session.g_strConfScheduleId + "_" + recordingObj.record_date + ".wav" ;	
		// Server.logInfo("RECORD OBJECT SEQUENCE 1");
	}
	else {
		recordingObj.fileName = Session.s_oRecordUrl[recordingObj.nfs_server] + "/" + Session.g_strConfScheduleId + "_" + recordingObj.record_date +
			"_append" + parseInt(recordingObj.sequence-1) + ".wav" ;
		// Server.logInfo("RECORD OBJECT SEQUENCE GREATER THAN 1");
	}*/
	// Server.logInfo("makeRecordFileName fileName " + recordingObj.fileName);
	recordingObj.fileName = Session.s_oRecordUrl[recordingObj.nfs_server] + "/" + Session.g_strConfScheduleId + ".wav" ;
}]]></script>
  <properties >
    <property key="default" value="C:/Applications/InternalProduct/SceXMLScripts/Conference/pcs_prompts_english.pmg"/>
    <property key="disable-logging" value=""/>
    <property key="js-include-path" value="../Libs"/>
    <property key="library-modules" value=""/>
    <property key="library-path" value="../Libs"/>
  </properties>
  <application-version >
    <revision >$Id: sip_manager.xml,v 1.21 2009/07/23 15:52:00 egaudette Exp $</revision>
    <label >$Name: PCS-A-4-1-1-1-4-c6 $</label>
  </application-version>
</xtml>